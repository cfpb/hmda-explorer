/*!                                      
            /$$$$$$          /$$        
           /$$__  $$        | $$        
  /$$$$$$$| $$  \__//$$$$$$ | $$$$$$$  
 /$$_____/| $$$$   /$$__  $$| $$__  $$  
| $$      | $$_/  | $$  \ $$| $$  \ $$
| $$      | $$    | $$  | $$| $$  | $$  
|  $$$$$$$| $$    | $$$$$$$/| $$$$$$$/  
 \_______/|__/    | $$____/ |_______/  
                  | $$                  
                  | $$                  
                  |__/                  

* public-data-platform-static - v0.11.0 - 2013-08-22
* http://consumerfinance.gov
* Copyright (c) 2013 Consumer Financial Protection Bureau; Licensed Public, Domain */

 /* ===========================================================
 * bootstrap-tooltip.js v2.3.2
 * http://twitter.github.com/bootstrap/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

/*!
 * jQuery JavaScript Library v1.10.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:48Z
 */

/**
 * @license
 * Lo-Dash 1.3.1 <http://lodash.com/>
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.4.4 <http://underscorejs.org/>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
 * Available under MIT license <http://lodash.com/license>
 */

/**
Copyright (c) Nicolas Gallagher and Jonathan Neal

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


Copyright (c) 2012-2013 Kit Cambridge.
http://kitcambridge.be/

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Chosen
- by Patrick Filler for [Harvest](http://getharvest.com)
- Copyright (c) 2011-2013 by Harvest

Available for use under the [MIT License](http://en.wikipedia.org/wiki/MIT_License)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

 */(function() {
    var SelectParser;
    SelectParser = function() {
        function SelectParser() {
            this.options_index = 0;
            this.parsed = [];
        }
        SelectParser.prototype.add_node = function(child) {
            if (child.nodeName.toUpperCase() === "OPTGROUP") {
                return this.add_group(child);
            } else {
                return this.add_option(child);
            }
        };
        SelectParser.prototype.add_group = function(group) {
            var group_position, option, _i, _len, _ref, _results;
            group_position = this.parsed.length;
            this.parsed.push({
                array_index: group_position,
                group: true,
                label: group.label,
                children: 0,
                disabled: group.disabled
            });
            _ref = group.childNodes;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                option = _ref[_i];
                _results.push(this.add_option(option, group_position, group.disabled));
            }
            return _results;
        };
        SelectParser.prototype.add_option = function(option, group_position, group_disabled) {
            if (option.nodeName.toUpperCase() === "OPTION") {
                if (option.text !== "") {
                    if (group_position != null) {
                        this.parsed[group_position].children += 1;
                    }
                    this.parsed.push({
                        array_index: this.parsed.length,
                        options_index: this.options_index,
                        value: option.value,
                        text: option.text,
                        html: option.innerHTML,
                        selected: option.selected,
                        disabled: group_disabled === true ? group_disabled : option.disabled,
                        group_array_index: group_position,
                        classes: option.className,
                        style: option.style.cssText
                    });
                } else {
                    this.parsed.push({
                        array_index: this.parsed.length,
                        options_index: this.options_index,
                        empty: true
                    });
                }
                return this.options_index += 1;
            }
        };
        return SelectParser;
    }();
    SelectParser.select_to_array = function(select) {
        var child, parser, _i, _len, _ref;
        parser = new SelectParser();
        _ref = select.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            child = _ref[_i];
            parser.add_node(child);
        }
        return parser.parsed;
    };
    this.SelectParser = SelectParser;
}).call(this);

(function() {
    var AbstractChosen, root;
    root = this;
    AbstractChosen = function() {
        function AbstractChosen(form_field, options) {
            this.form_field = form_field;
            this.options = options != null ? options : {};
            if (!AbstractChosen.browser_is_supported()) {
                return;
            }
            this.is_multiple = this.form_field.multiple;
            this.set_default_text();
            this.set_default_values();
            this.setup();
            this.set_up_html();
            this.register_observers();
            this.finish_setup();
        }
        AbstractChosen.prototype.set_default_values = function() {
            var _this = this;
            this.click_test_action = function(evt) {
                return _this.test_active_click(evt);
            };
            this.activate_action = function(evt) {
                return _this.activate_field(evt);
            };
            this.active_field = false;
            this.mouse_on_container = false;
            this.results_showing = false;
            this.result_highlighted = null;
            this.result_single_selected = null;
            this.allow_single_deselect = this.options.allow_single_deselect != null && this.form_field.options[0] != null && this.form_field.options[0].text === "" ? this.options.allow_single_deselect : false;
            this.disable_search_threshold = this.options.disable_search_threshold || 0;
            this.disable_search = this.options.disable_search || false;
            this.enable_split_word_search = this.options.enable_split_word_search != null ? this.options.enable_split_word_search : true;
            this.search_contains = this.options.search_contains || false;
            this.single_backstroke_delete = this.options.single_backstroke_delete || false;
            this.max_selected_options = this.options.max_selected_options || Infinity;
            return this.inherit_select_classes = this.options.inherit_select_classes || false;
        };
        AbstractChosen.prototype.set_default_text = function() {
            if (this.form_field.getAttribute("data-placeholder")) {
                this.default_text = this.form_field.getAttribute("data-placeholder");
            } else if (this.is_multiple) {
                this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text;
            } else {
                this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text;
            }
            return this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || AbstractChosen.default_no_result_text;
        };
        AbstractChosen.prototype.mouse_enter = function() {
            return this.mouse_on_container = true;
        };
        AbstractChosen.prototype.mouse_leave = function() {
            return this.mouse_on_container = false;
        };
        AbstractChosen.prototype.input_focus = function(evt) {
            var _this = this;
            if (this.is_multiple) {
                if (!this.active_field) {
                    return setTimeout(function() {
                        return _this.container_mousedown();
                    }, 50);
                }
            } else {
                if (!this.active_field) {
                    return this.activate_field();
                }
            }
        };
        AbstractChosen.prototype.input_blur = function(evt) {
            var _this = this;
            if (!this.mouse_on_container) {
                this.active_field = false;
                return setTimeout(function() {
                    return _this.blur_test();
                }, 100);
            }
        };
        AbstractChosen.prototype.result_add_option = function(option) {
            var classes, style;
            option.dom_id = this.container_id + "_o_" + option.array_index;
            classes = [];
            if (!option.disabled && !(option.selected && this.is_multiple)) {
                classes.push("active-result");
            }
            if (option.disabled && !(option.selected && this.is_multiple)) {
                classes.push("disabled-result");
            }
            if (option.selected) {
                classes.push("result-selected");
            }
            if (option.group_array_index != null) {
                classes.push("group-option");
            }
            if (option.classes !== "") {
                classes.push(option.classes);
            }
            style = option.style.cssText !== "" ? ' style="' + option.style + '"' : "";
            return '<li id="' + option.dom_id + '" class="' + classes.join(" ") + '"' + style + ">" + option.html + "</li>";
        };
        AbstractChosen.prototype.results_update_field = function() {
            this.set_default_text();
            if (!this.is_multiple) {
                this.results_reset_cleanup();
            }
            this.result_clear_highlight();
            this.result_single_selected = null;
            return this.results_build();
        };
        AbstractChosen.prototype.results_toggle = function() {
            if (this.results_showing) {
                return this.results_hide();
            } else {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.results_search = function(evt) {
            if (this.results_showing) {
                return this.winnow_results();
            } else {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.choices_count = function() {
            var option, _i, _len, _ref;
            if (this.selected_option_count != null) {
                return this.selected_option_count;
            }
            this.selected_option_count = 0;
            _ref = this.form_field.options;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                option = _ref[_i];
                if (option.selected) {
                    this.selected_option_count += 1;
                }
            }
            return this.selected_option_count;
        };
        AbstractChosen.prototype.choices_click = function(evt) {
            evt.preventDefault();
            if (!(this.results_showing || this.is_disabled)) {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.keyup_checker = function(evt) {
            var stroke, _ref;
            stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;
            this.search_field_scale();
            switch (stroke) {
              case 8:
                if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) {
                    return this.keydown_backstroke();
                } else if (!this.pending_backstroke) {
                    this.result_clear_highlight();
                    return this.results_search();
                }
                break;

              case 13:
                evt.preventDefault();
                if (this.results_showing) {
                    return this.result_select(evt);
                }
                break;

              case 27:
                if (this.results_showing) {
                    this.results_hide();
                }
                return true;

              case 9:
              case 38:
              case 40:
              case 16:
              case 91:
              case 17:
                break;

              default:
                return this.results_search();
            }
        };
        AbstractChosen.prototype.generate_field_id = function() {
            var new_id;
            new_id = this.generate_random_id();
            this.form_field.id = new_id;
            return new_id;
        };
        AbstractChosen.prototype.generate_random_char = function() {
            var chars, newchar, rand;
            chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            rand = Math.floor(Math.random() * chars.length);
            return newchar = chars.substring(rand, rand + 1);
        };
        AbstractChosen.prototype.container_width = function() {
            if (this.options.width != null) {
                return this.options.width;
            } else {
                return "" + this.form_field.offsetWidth + "px";
            }
        };
        AbstractChosen.browser_is_supported = function() {
            var _ref;
            if (window.navigator.appName === "Microsoft Internet Explorer") {
                return null !== (_ref = document.documentMode) && _ref >= 8;
            }
            return true;
        };
        AbstractChosen.default_multiple_text = "Select Some Options";
        AbstractChosen.default_single_text = "Select an Option";
        AbstractChosen.default_no_result_text = "No results match";
        return AbstractChosen;
    }();
    root.AbstractChosen = AbstractChosen;
}).call(this);

(function() {
    var $, Chosen, root, _ref, __hasProp = {}.hasOwnProperty, __extends = function(child, parent) {
        for (var key in parent) {
            if (__hasProp.call(parent, key)) child[key] = parent[key];
        }
        function ctor() {
            this.constructor = child;
        }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
    };
    root = this;
    $ = jQuery;
    $.fn.extend({
        chosen: function(options) {
            if (!AbstractChosen.browser_is_supported()) {
                return this;
            }
            return this.each(function(input_field) {
                var $this;
                $this = $(this);
                if (!$this.hasClass("chzn-done")) {
                    return $this.data("chosen", new Chosen(this, options));
                }
            });
        }
    });
    Chosen = function(_super) {
        __extends(Chosen, _super);
        function Chosen() {
            _ref = Chosen.__super__.constructor.apply(this, arguments);
            return _ref;
        }
        Chosen.prototype.setup = function() {
            this.form_field_jq = $(this.form_field);
            this.current_selectedIndex = this.form_field.selectedIndex;
            return this.is_rtl = this.form_field_jq.hasClass("chzn-rtl");
        };
        Chosen.prototype.finish_setup = function() {
            return this.form_field_jq.addClass("chzn-done");
        };
        Chosen.prototype.set_up_html = function() {
            var container_classes, container_props;
            this.container_id = this.form_field.id.length ? this.form_field.id.replace(/[^\w]/g, "_") : this.generate_field_id();
            this.container_id += "_chzn";
            container_classes = [ "chzn-container" ];
            container_classes.push("chzn-container-" + (this.is_multiple ? "multi" : "single"));
            if (this.inherit_select_classes && this.form_field.className) {
                container_classes.push(this.form_field.className);
            }
            if (this.is_rtl) {
                container_classes.push("chzn-rtl");
            }
            container_props = {
                id: this.container_id,
                "class": container_classes.join(" "),
                style: "width: " + this.container_width() + ";",
                title: this.form_field.title
            };
            this.container = $("<div />", container_props);
            if (this.is_multiple) {
                this.container.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="' + this.default_text + '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop"><ul class="chzn-results"></ul></div>');
            } else {
                this.container.html('<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>' + this.default_text + '</span><div><b></b></div></a><div class="chzn-drop"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>');
            }
            this.form_field_jq.hide().after(this.container);
            this.dropdown = this.container.find("div.chzn-drop").first();
            this.search_field = this.container.find("input").first();
            this.search_results = this.container.find("ul.chzn-results").first();
            this.search_field_scale();
            this.search_no_results = this.container.find("li.no-results").first();
            if (this.is_multiple) {
                this.search_choices = this.container.find("ul.chzn-choices").first();
                this.search_container = this.container.find("li.search-field").first();
            } else {
                this.search_container = this.container.find("div.chzn-search").first();
                this.selected_item = this.container.find(".chzn-single").first();
            }
            this.results_build();
            this.set_tab_index();
            this.set_label_behavior();
            return this.form_field_jq.trigger("liszt:ready", {
                chosen: this
            });
        };
        Chosen.prototype.register_observers = function() {
            var _this = this;
            this.container.mousedown(function(evt) {
                _this.container_mousedown(evt);
            });
            this.container.mouseup(function(evt) {
                _this.container_mouseup(evt);
            });
            this.container.mouseenter(function(evt) {
                _this.mouse_enter(evt);
            });
            this.container.mouseleave(function(evt) {
                _this.mouse_leave(evt);
            });
            this.search_results.mouseup(function(evt) {
                _this.search_results_mouseup(evt);
            });
            this.search_results.mouseover(function(evt) {
                _this.search_results_mouseover(evt);
            });
            this.search_results.mouseout(function(evt) {
                _this.search_results_mouseout(evt);
            });
            this.search_results.bind("mousewheel DOMMouseScroll", function(evt) {
                _this.search_results_mousewheel(evt);
            });
            this.form_field_jq.bind("liszt:updated", function(evt) {
                _this.results_update_field(evt);
            });
            this.form_field_jq.bind("liszt:activate", function(evt) {
                _this.activate_field(evt);
            });
            this.form_field_jq.bind("liszt:open", function(evt) {
                _this.container_mousedown(evt);
            });
            this.search_field.blur(function(evt) {
                _this.input_blur(evt);
            });
            this.search_field.keyup(function(evt) {
                _this.keyup_checker(evt);
            });
            this.search_field.keydown(function(evt) {
                _this.keydown_checker(evt);
            });
            this.search_field.focus(function(evt) {
                _this.input_focus(evt);
            });
            if (this.is_multiple) {
                return this.search_choices.click(function(evt) {
                    _this.choices_click(evt);
                });
            } else {
                return this.container.click(function(evt) {
                    evt.preventDefault();
                });
            }
        };
        Chosen.prototype.search_field_disabled = function() {
            this.is_disabled = this.form_field_jq[0].disabled;
            if (this.is_disabled) {
                this.container.addClass("chzn-disabled");
                this.search_field[0].disabled = true;
                if (!this.is_multiple) {
                    this.selected_item.unbind("focus", this.activate_action);
                }
                return this.close_field();
            } else {
                this.container.removeClass("chzn-disabled");
                this.search_field[0].disabled = false;
                if (!this.is_multiple) {
                    return this.selected_item.bind("focus", this.activate_action);
                }
            }
        };
        Chosen.prototype.container_mousedown = function(evt) {
            if (!this.is_disabled) {
                if (evt && evt.type === "mousedown" && !this.results_showing) {
                    evt.preventDefault();
                }
                if (!(evt != null && $(evt.target).hasClass("search-choice-close"))) {
                    if (!this.active_field) {
                        if (this.is_multiple) {
                            this.search_field.val("");
                        }
                        $(document).click(this.click_test_action);
                        this.results_show();
                    } else if (!this.is_multiple && evt && ($(evt.target)[0] === this.selected_item[0] || $(evt.target).parents("a.chzn-single").length)) {
                        evt.preventDefault();
                        this.results_toggle();
                    }
                    return this.activate_field();
                }
            }
        };
        Chosen.prototype.container_mouseup = function(evt) {
            if (evt.target.nodeName === "ABBR" && !this.is_disabled) {
                return this.results_reset(evt);
            }
        };
        Chosen.prototype.search_results_mousewheel = function(evt) {
            var delta, _ref1, _ref2;
            delta = -((_ref1 = evt.originalEvent) != null ? _ref1.wheelDelta : void 0) || ((_ref2 = evt.originialEvent) != null ? _ref2.detail : void 0);
            if (delta != null) {
                evt.preventDefault();
                if (evt.type === "DOMMouseScroll") {
                    delta = delta * 40;
                }
                return this.search_results.scrollTop(delta + this.search_results.scrollTop());
            }
        };
        Chosen.prototype.blur_test = function(evt) {
            if (!this.active_field && this.container.hasClass("chzn-container-active")) {
                return this.close_field();
            }
        };
        Chosen.prototype.close_field = function() {
            $(document).unbind("click", this.click_test_action);
            this.active_field = false;
            this.results_hide();
            this.container.removeClass("chzn-container-active");
            this.clear_backstroke();
            this.show_search_field_default();
            return this.search_field_scale();
        };
        Chosen.prototype.activate_field = function() {
            this.container.addClass("chzn-container-active");
            this.active_field = true;
            this.search_field.val(this.search_field.val());
            return this.search_field.focus();
        };
        Chosen.prototype.test_active_click = function(evt) {
            if ($(evt.target).parents("#" + this.container_id).length) {
                return this.active_field = true;
            } else {
                return this.close_field();
            }
        };
        Chosen.prototype.results_build = function() {
            var content, data, _i, _len, _ref1;
            this.parsing = true;
            this.selected_option_count = null;
            this.results_data = root.SelectParser.select_to_array(this.form_field);
            if (this.is_multiple) {
                this.search_choices.find("li.search-choice").remove();
            } else if (!this.is_multiple) {
                this.selected_item.addClass("chzn-default").find("span").text(this.default_text);
                if (this.disable_search || this.form_field.options.length <= this.disable_search_threshold) {
                    this.search_field[0].readOnly = true;
                    this.container.addClass("chzn-container-single-nosearch");
                } else {
                    this.search_field[0].readOnly = false;
                    this.container.removeClass("chzn-container-single-nosearch");
                }
            }
            content = "";
            _ref1 = this.results_data;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                data = _ref1[_i];
                if (data.group) {
                    content += this.result_add_group(data);
                } else if (!data.empty) {
                    content += this.result_add_option(data);
                    if (data.selected && this.is_multiple) {
                        this.choice_build(data);
                    } else if (data.selected && !this.is_multiple) {
                        this.selected_item.removeClass("chzn-default").find("span").text(data.text);
                        if (this.allow_single_deselect) {
                            this.single_deselect_control_build();
                        }
                    }
                }
            }
            this.search_field_disabled();
            this.show_search_field_default();
            this.search_field_scale();
            this.search_results.html(content);
            return this.parsing = false;
        };
        Chosen.prototype.result_add_group = function(group) {
            group.dom_id = this.container_id + "_g_" + group.array_index;
            return '<li id="' + group.dom_id + '" class="group-result">' + $("<div />").text(group.label).html() + "</li>";
        };
        Chosen.prototype.result_do_highlight = function(el) {
            var high_bottom, high_top, maxHeight, visible_bottom, visible_top;
            if (el.length) {
                this.result_clear_highlight();
                this.result_highlight = el;
                this.result_highlight.addClass("highlighted");
                maxHeight = parseInt(this.search_results.css("maxHeight"), 10);
                visible_top = this.search_results.scrollTop();
                visible_bottom = maxHeight + visible_top;
                high_top = this.result_highlight.position().top + this.search_results.scrollTop();
                high_bottom = high_top + this.result_highlight.outerHeight();
                if (high_bottom >= visible_bottom) {
                    return this.search_results.scrollTop(high_bottom - maxHeight > 0 ? high_bottom - maxHeight : 0);
                } else if (high_top < visible_top) {
                    return this.search_results.scrollTop(high_top);
                }
            }
        };
        Chosen.prototype.result_clear_highlight = function() {
            if (this.result_highlight) {
                this.result_highlight.removeClass("highlighted");
            }
            return this.result_highlight = null;
        };
        Chosen.prototype.results_show = function() {
            if (this.is_multiple && this.max_selected_options <= this.choices_count()) {
                this.form_field_jq.trigger("liszt:maxselected", {
                    chosen: this
                });
                return false;
            }
            this.container.addClass("chzn-with-drop");
            this.form_field_jq.trigger("liszt:showing_dropdown", {
                chosen: this
            });
            this.results_showing = true;
            this.search_field.focus();
            this.search_field.val(this.search_field.val());
            return this.winnow_results();
        };
        Chosen.prototype.results_hide = function() {
            if (this.results_showing) {
                this.result_clear_highlight();
                this.container.removeClass("chzn-with-drop");
                this.form_field_jq.trigger("liszt:hiding_dropdown", {
                    chosen: this
                });
            }
            return this.results_showing = false;
        };
        Chosen.prototype.set_tab_index = function(el) {
            var ti;
            if (this.form_field_jq.attr("tabindex")) {
                ti = this.form_field_jq.attr("tabindex");
                this.form_field_jq.attr("tabindex", -1);
                return this.search_field.attr("tabindex", ti);
            }
        };
        Chosen.prototype.set_label_behavior = function() {
            var _this = this;
            this.form_field_label = this.form_field_jq.parents("label");
            if (!this.form_field_label.length && this.form_field.id.length) {
                this.form_field_label = $("label[for='" + this.form_field.id + "']");
            }
            if (this.form_field_label.length > 0) {
                return this.form_field_label.click(function(evt) {
                    if (_this.is_multiple) {
                        return _this.container_mousedown(evt);
                    } else {
                        return _this.activate_field();
                    }
                });
            }
        };
        Chosen.prototype.show_search_field_default = function() {
            if (this.is_multiple && this.choices_count() < 1 && !this.active_field) {
                this.search_field.val(this.default_text);
                return this.search_field.addClass("default");
            } else {
                this.search_field.val("");
                return this.search_field.removeClass("default");
            }
        };
        Chosen.prototype.search_results_mouseup = function(evt) {
            var target;
            target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
            if (target.length) {
                this.result_highlight = target;
                this.result_select(evt);
                return this.search_field.focus();
            }
        };
        Chosen.prototype.search_results_mouseover = function(evt) {
            var target;
            target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
            if (target) {
                return this.result_do_highlight(target);
            }
        };
        Chosen.prototype.search_results_mouseout = function(evt) {
            if ($(evt.target).hasClass("active-result" || $(evt.target).parents(".active-result").first())) {
                return this.result_clear_highlight();
            }
        };
        Chosen.prototype.choice_build = function(item) {
            var choice, close_link, _this = this;
            choice = $("<li />", {
                "class": "search-choice"
            }).html("<span>" + item.html + "</span>");
            if (item.disabled) {
                choice.addClass("search-choice-disabled");
            } else {
                close_link = $("<a />", {
                    href: "#",
                    "class": "search-choice-close",
                    rel: item.array_index
                });
                close_link.click(function(evt) {
                    return _this.choice_destroy_link_click(evt);
                });
                choice.append(close_link);
            }
            return this.search_container.before(choice);
        };
        Chosen.prototype.choice_destroy_link_click = function(evt) {
            evt.preventDefault();
            evt.stopPropagation();
            if (!this.is_disabled) {
                return this.choice_destroy($(evt.target));
            }
        };
        Chosen.prototype.choice_destroy = function(link) {
            if (this.result_deselect(link.attr("rel"))) {
                this.show_search_field_default();
                if (this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1) {
                    this.results_hide();
                }
                link.parents("li").first().remove();
                return this.search_field_scale();
            }
        };
        Chosen.prototype.results_reset = function() {
            this.form_field.options[0].selected = true;
            this.selected_option_count = null;
            this.selected_item.find("span").text(this.default_text);
            if (!this.is_multiple) {
                this.selected_item.addClass("chzn-default");
            }
            this.show_search_field_default();
            this.results_reset_cleanup();
            this.form_field_jq.trigger("change");
            if (this.active_field) {
                return this.results_hide();
            }
        };
        Chosen.prototype.results_reset_cleanup = function() {
            this.current_selectedIndex = this.form_field.selectedIndex;
            return this.selected_item.find("abbr").remove();
        };
        Chosen.prototype.result_select = function(evt) {
            var high, high_id, item, position;
            if (this.result_highlight) {
                high = this.result_highlight;
                high_id = high.attr("id");
                this.result_clear_highlight();
                if (this.is_multiple && this.max_selected_options <= this.choices_count()) {
                    this.form_field_jq.trigger("liszt:maxselected", {
                        chosen: this
                    });
                    return false;
                }
                if (this.is_multiple) {
                    high.removeClass("active-result");
                } else {
                    this.search_results.find(".result-selected").removeClass("result-selected");
                    this.result_single_selected = high;
                    this.selected_item.removeClass("chzn-default");
                }
                high.addClass("result-selected");
                position = high_id.substr(high_id.lastIndexOf("_") + 1);
                item = this.results_data[position];
                item.selected = true;
                this.form_field.options[item.options_index].selected = true;
                this.selected_option_count = null;
                if (this.is_multiple) {
                    this.choice_build(item);
                } else {
                    this.selected_item.find("span").first().text(item.text);
                    if (this.allow_single_deselect) {
                        this.single_deselect_control_build();
                    }
                }
                if (!((evt.metaKey || evt.ctrlKey) && this.is_multiple)) {
                    this.results_hide();
                }
                this.search_field.val("");
                if (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) {
                    this.form_field_jq.trigger("change", {
                        selected: this.form_field.options[item.options_index].value
                    });
                }
                this.current_selectedIndex = this.form_field.selectedIndex;
                return this.search_field_scale();
            }
        };
        Chosen.prototype.result_activate = function(el, option) {
            if (option.disabled) {
                return el.addClass("disabled-result");
            } else if (this.is_multiple && option.selected) {
                return el.addClass("result-selected");
            } else {
                return el.addClass("active-result");
            }
        };
        Chosen.prototype.result_deactivate = function(el) {
            return el.removeClass("active-result result-selected disabled-result");
        };
        Chosen.prototype.result_deselect = function(pos) {
            var result, result_data;
            result_data = this.results_data[pos];
            if (!this.form_field.options[result_data.options_index].disabled) {
                result_data.selected = false;
                this.form_field.options[result_data.options_index].selected = false;
                this.selected_option_count = null;
                result = $("#" + this.container_id + "_o_" + pos);
                result.removeClass("result-selected").addClass("active-result").show();
                this.result_clear_highlight();
                this.winnow_results();
                this.form_field_jq.trigger("change", {
                    deselected: this.form_field.options[result_data.options_index].value
                });
                this.search_field_scale();
                return true;
            } else {
                return false;
            }
        };
        Chosen.prototype.single_deselect_control_build = function() {
            if (!this.allow_single_deselect) {
                return;
            }
            if (!this.selected_item.find("abbr").length) {
                this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>');
            }
            return this.selected_item.addClass("chzn-single-with-deselect");
        };
        Chosen.prototype.winnow_results = function() {
            var found, option, part, parts, regex, regexAnchor, result, result_id, results, searchText, startpos, text, zregex, _i, _j, _len, _len1, _ref1;
            this.no_results_clear();
            results = 0;
            searchText = this.search_field.val() === this.default_text ? "" : $("<div/>").text($.trim(this.search_field.val())).html();
            regexAnchor = this.search_contains ? "" : "^";
            regex = new RegExp(regexAnchor + searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), "i");
            zregex = new RegExp(searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), "i");
            _ref1 = this.results_data;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                option = _ref1[_i];
                if (!option.empty) {
                    if (option.group) {
                        $("#" + option.dom_id).css("display", "none");
                    } else {
                        found = false;
                        result_id = option.dom_id;
                        result = $("#" + result_id);
                        if (regex.test(option.html)) {
                            found = true;
                            results += 1;
                        } else if (this.enable_split_word_search && (option.html.indexOf(" ") >= 0 || option.html.indexOf("[") === 0)) {
                            parts = option.html.replace(/\[|\]/g, "").split(" ");
                            if (parts.length) {
                                for (_j = 0, _len1 = parts.length; _j < _len1; _j++) {
                                    part = parts[_j];
                                    if (regex.test(part)) {
                                        found = true;
                                        results += 1;
                                    }
                                }
                            }
                        }
                        if (found) {
                            if (searchText.length) {
                                startpos = option.html.search(zregex);
                                text = option.html.substr(0, startpos + searchText.length) + "</em>" + option.html.substr(startpos + searchText.length);
                                text = text.substr(0, startpos) + "<em>" + text.substr(startpos);
                            } else {
                                text = option.html;
                            }
                            result.html(text);
                            this.result_activate(result, option);
                            if (option.group_array_index != null) {
                                $("#" + this.results_data[option.group_array_index].dom_id).css("display", "list-item");
                            }
                        } else {
                            if (this.result_highlight && result_id === this.result_highlight.attr("id")) {
                                this.result_clear_highlight();
                            }
                            this.result_deactivate(result);
                        }
                    }
                }
            }
            if (results < 1 && searchText.length) {
                return this.no_results(searchText);
            } else {
                return this.winnow_results_set_highlight();
            }
        };
        Chosen.prototype.winnow_results_set_highlight = function() {
            var do_high, selected_results;
            if (!this.result_highlight) {
                selected_results = !this.is_multiple ? this.search_results.find(".result-selected.active-result") : [];
                do_high = selected_results.length ? selected_results.first() : this.search_results.find(".active-result").first();
                if (do_high != null) {
                    return this.result_do_highlight(do_high);
                }
            }
        };
        Chosen.prototype.no_results = function(terms) {
            var no_results_html;
            no_results_html = $('<li class="no-results">' + this.results_none_found + ' "<span></span>"</li>');
            no_results_html.find("span").first().html(terms);
            return this.search_results.append(no_results_html);
        };
        Chosen.prototype.no_results_clear = function() {
            return this.search_results.find(".no-results").remove();
        };
        Chosen.prototype.keydown_arrow = function() {
            var next_sib;
            if (this.results_showing && this.result_highlight) {
                next_sib = this.result_highlight.nextAll("li.active-result").first();
                if (next_sib) {
                    return this.result_do_highlight(next_sib);
                }
            } else {
                return this.results_show();
            }
        };
        Chosen.prototype.keyup_arrow = function() {
            var prev_sibs;
            if (!this.results_showing && !this.is_multiple) {
                return this.results_show();
            } else if (this.result_highlight) {
                prev_sibs = this.result_highlight.prevAll("li.active-result");
                if (prev_sibs.length) {
                    return this.result_do_highlight(prev_sibs.first());
                } else {
                    if (this.choices_count() > 0) {
                        this.results_hide();
                    }
                    return this.result_clear_highlight();
                }
            }
        };
        Chosen.prototype.keydown_backstroke = function() {
            var next_available_destroy;
            if (this.pending_backstroke) {
                this.choice_destroy(this.pending_backstroke.find("a").first());
                return this.clear_backstroke();
            } else {
                next_available_destroy = this.search_container.siblings("li.search-choice").last();
                if (next_available_destroy.length && !next_available_destroy.hasClass("search-choice-disabled")) {
                    this.pending_backstroke = next_available_destroy;
                    if (this.single_backstroke_delete) {
                        return this.keydown_backstroke();
                    } else {
                        return this.pending_backstroke.addClass("search-choice-focus");
                    }
                }
            }
        };
        Chosen.prototype.clear_backstroke = function() {
            if (this.pending_backstroke) {
                this.pending_backstroke.removeClass("search-choice-focus");
            }
            return this.pending_backstroke = null;
        };
        Chosen.prototype.keydown_checker = function(evt) {
            var stroke, _ref1;
            stroke = (_ref1 = evt.which) != null ? _ref1 : evt.keyCode;
            this.search_field_scale();
            if (stroke !== 8 && this.pending_backstroke) {
                this.clear_backstroke();
            }
            switch (stroke) {
              case 8:
                this.backstroke_length = this.search_field.val().length;
                break;

              case 9:
                if (this.results_showing && !this.is_multiple) {
                    this.result_select(evt);
                }
                this.mouse_on_container = false;
                break;

              case 13:
                evt.preventDefault();
                break;

              case 38:
                evt.preventDefault();
                this.keyup_arrow();
                break;

              case 40:
                evt.preventDefault();
                this.keydown_arrow();
                break;
            }
        };
        Chosen.prototype.search_field_scale = function() {
            var div, h, style, style_block, styles, w, _i, _len;
            if (this.is_multiple) {
                h = 0;
                w = 0;
                style_block = "position:absolute; left: -1000px; top: -1000px; display:none;";
                styles = [ "font-size", "font-style", "font-weight", "font-family", "line-height", "text-transform", "letter-spacing" ];
                for (_i = 0, _len = styles.length; _i < _len; _i++) {
                    style = styles[_i];
                    style_block += style + ":" + this.search_field.css(style) + ";";
                }
                div = $("<div />", {
                    style: style_block
                });
                div.text(this.search_field.val());
                $("body").append(div);
                w = div.width() + 25;
                div.remove();
                if (!this.f_width) {
                    this.f_width = this.container.outerWidth();
                }
                if (w > this.f_width - 10) {
                    w = this.f_width - 10;
                }
                w = this.search_field.hasClass("default") ? "100%" : w + "px";
                return this.search_field.css({
                    width: w
                });
            }
        };
        Chosen.prototype.generate_random_id = function() {
            var string;
            string = "sel" + this.generate_random_char() + this.generate_random_char() + this.generate_random_char();
            while ($("#" + string).length > 0) {
                string += this.generate_random_char();
            }
            return string;
        };
        return Chosen;
    }(AbstractChosen);
    root.Chosen = Chosen;
}).call(this);

(function() {
    function r(a, b) {
        var c;
        a || (a = {});
        for (c in b) a[c] = b[c];
        return a;
    }
    function x() {
        var a, b = arguments.length, c = {}, d = function(a, b) {
            var c, h;
            typeof a !== "object" && (a = {});
            for (h in b) b.hasOwnProperty(h) && (c = b[h], a[h] = c && typeof c === "object" && Object.prototype.toString.call(c) !== "[object Array]" && typeof c.nodeType !== "number" ? d(a[h] || {}, c) : b[h]);
            return a;
        };
        for (a = 0; a < b; a++) c = d(c, arguments[a]);
        return c;
    }
    function A(a, b) {
        return parseInt(a, b || 10);
    }
    function da(a) {
        return typeof a === "string";
    }
    function U(a) {
        return typeof a === "object";
    }
    function Ha(a) {
        return Object.prototype.toString.call(a) === "[object Array]";
    }
    function pa(a) {
        return typeof a === "number";
    }
    function ma(a) {
        return N.log(a) / N.LN10;
    }
    function ea(a) {
        return N.pow(10, a);
    }
    function fa(a, b) {
        for (var c = a.length; c--; ) if (a[c] === b) {
            a.splice(c, 1);
            break;
        }
    }
    function t(a) {
        return a !== v && a !== null;
    }
    function w(a, b, c) {
        var d, e;
        if (da(b)) t(c) ? a.setAttribute(b, c) : a && a.getAttribute && (e = a.getAttribute(b)); else if (t(b) && U(b)) for (d in b) a.setAttribute(d, b[d]);
        return e;
    }
    function ha(a) {
        return Ha(a) ? a : [ a ];
    }
    function p() {
        var a = arguments, b, c, d = a.length;
        for (b = 0; b < d; b++) if (c = a[b], typeof c !== "undefined" && c !== null) return c;
    }
    function M(a, b) {
        if (qa && b && b.opacity !== v) b.filter = "alpha(opacity=" + b.opacity * 100 + ")";
        r(a.style, b);
    }
    function T(a, b, c, d, e) {
        a = z.createElement(a);
        b && r(a, b);
        e && M(a, {
            padding: 0,
            border: R,
            margin: 0
        });
        c && M(a, c);
        d && d.appendChild(a);
        return a;
    }
    function ga(a, b) {
        var c = function() {};
        c.prototype = new a();
        r(c.prototype, b);
        return c;
    }
    function ya(a, b, c, d) {
        var e = O.lang, a = +a || 0, f = b === -1 ? (a.toString().split(".")[1] || "").length : isNaN(b = P(b)) ? 2 : b, b = c === void 0 ? e.decimalPoint : c, d = d === void 0 ? e.thousandsSep : d, e = a < 0 ? "-" : "", c = String(A(a = P(a).toFixed(f))), g = c.length > 3 ? c.length % 3 : 0;
        return e + (g ? c.substr(0, g) + d : "") + c.substr(g).replace(/(\d{3})(?=\d)/g, "$1" + d) + (f ? b + P(a - c).toFixed(f).slice(2) : "");
    }
    function za(a, b) {
        return Array((b || 2) + 1 - String(a).length).join(0) + a;
    }
    function Bb(a, b, c) {
        var d = a[b];
        a[b] = function() {
            var a = Array.prototype.slice.call(arguments);
            a.unshift(d);
            return c.apply(this, a);
        };
    }
    function Aa(a, b) {
        for (var c = "{", d = !1, e, f, g, h, i, j = []; (c = a.indexOf(c)) !== -1; ) {
            e = a.slice(0, c);
            if (d) {
                f = e.split(":");
                g = f.shift().split(".");
                i = g.length;
                e = b;
                for (h = 0; h < i; h++) e = e[g[h]];
                if (f.length) f = f.join(":"), g = /\.([0-9])/, h = O.lang, i = void 0, /f$/.test(f) ? (i = (i = f.match(g)) ? i[1] : -1, 
                e = ya(e, i, h.decimalPoint, f.indexOf(",") > -1 ? h.thousandsSep : "")) : e = Xa(f, e);
            }
            j.push(e);
            a = a.slice(c + 1);
            c = (d = !d) ? "}" : "{";
        }
        j.push(a);
        return j.join("");
    }
    function lb(a) {
        return N.pow(10, S(N.log(a) / N.LN10));
    }
    function mb(a, b, c, d) {
        var e, c = p(c, 1);
        e = a / c;
        b || (b = [ 1, 2, 2.5, 5, 10 ], d && d.allowDecimals === !1 && (c === 1 ? b = [ 1, 2, 5, 10 ] : c <= .1 && (b = [ 1 / c ])));
        for (d = 0; d < b.length; d++) if (a = b[d], e <= (b[d] + (b[d + 1] || b[d])) / 2) break;
        a *= c;
        return a;
    }
    function Cb(a, b) {
        var c = b || [ [ Db, [ 1, 2, 5, 10, 20, 25, 50, 100, 200, 500 ] ], [ nb, [ 1, 2, 5, 10, 15, 30 ] ], [ Ya, [ 1, 2, 5, 10, 15, 30 ] ], [ Qa, [ 1, 2, 3, 4, 6, 8, 12 ] ], [ ra, [ 1, 2 ] ], [ Za, [ 1, 2 ] ], [ Ra, [ 1, 2, 3, 4, 6 ] ], [ sa, null ] ], d = c[c.length - 1], e = y[d[0]], f = d[1], g;
        for (g = 0; g < c.length; g++) if (d = c[g], e = y[d[0]], f = d[1], c[g + 1] && a <= (e * f[f.length - 1] + y[c[g + 1][0]]) / 2) break;
        e === y[sa] && a < 5 * e && (f = [ 1, 2, 5 ]);
        e === y[sa] && a < 5 * e && (f = [ 1, 2, 5 ]);
        c = mb(a / e, f, d[0] === sa ? lb(a / e) : 1);
        return {
            unitRange: e,
            count: c,
            unitName: d[0]
        };
    }
    function Eb(a, b, c, d) {
        var e = [], f = {}, g = O.global.useUTC, h, i = new Date(b), j = a.unitRange, k = a.count;
        if (t(b)) {
            j >= y[nb] && (i.setMilliseconds(0), i.setSeconds(j >= y[Ya] ? 0 : k * S(i.getSeconds() / k)));
            if (j >= y[Ya]) i[Fb](j >= y[Qa] ? 0 : k * S(i[ob]() / k));
            if (j >= y[Qa]) i[Gb](j >= y[ra] ? 0 : k * S(i[pb]() / k));
            if (j >= y[ra]) i[qb](j >= y[Ra] ? 1 : k * S(i[Sa]() / k));
            j >= y[Ra] && (i[Hb](j >= y[sa] ? 0 : k * S(i[$a]() / k)), h = i[ab]());
            j >= y[sa] && (h -= h % k, i[Ib](h));
            if (j === y[Za]) i[qb](i[Sa]() - i[rb]() + p(d, 1));
            b = 1;
            h = i[ab]();
            for (var d = i.getTime(), l = i[$a](), m = i[Sa](), o = g ? 0 : (864e5 + i.getTimezoneOffset() * 6e4) % 864e5; d < c; ) e.push(d), 
            j === y[sa] ? d = bb(h + b * k, 0) : j === y[Ra] ? d = bb(h, l + b * k) : !g && (j === y[ra] || j === y[Za]) ? d = bb(h, l, m + b * k * (j === y[ra] ? 1 : 7)) : d += j * k, 
            b++;
            e.push(d);
            n(sb(e, function(a) {
                return j <= y[Qa] && a % y[ra] === o;
            }), function(a) {
                f[a] = ra;
            });
        }
        e.info = r(a, {
            higherRanks: f,
            totalRange: j * k
        });
        return e;
    }
    function Jb() {
        this.symbol = this.color = 0;
    }
    function Kb(a, b) {
        var c = a.length, d, e;
        for (e = 0; e < c; e++) a[e].ss_i = e;
        a.sort(function(a, c) {
            d = b(a, c);
            return d === 0 ? a.ss_i - c.ss_i : d;
        });
        for (e = 0; e < c; e++) delete a[e].ss_i;
    }
    function Ia(a) {
        for (var b = a.length, c = a[0]; b--; ) a[b] < c && (c = a[b]);
        return c;
    }
    function ta(a) {
        for (var b = a.length, c = a[0]; b--; ) a[b] > c && (c = a[b]);
        return c;
    }
    function Ja(a, b) {
        for (var c in a) a[c] && a[c] !== b && a[c].destroy && a[c].destroy(), delete a[c];
    }
    function Ta(a) {
        cb || (cb = T(Ba));
        a && cb.appendChild(a);
        cb.innerHTML = "";
    }
    function ua(a, b) {
        var c = "Highcharts error #" + a + ": www.highcharts.com/errors/" + a;
        if (b) throw c; else E.console && console.log(c);
    }
    function ia(a) {
        return parseFloat(a.toPrecision(14));
    }
    function Ka(a, b) {
        Ca = p(a, b.animation);
    }
    function Lb() {
        var a = O.global.useUTC, b = a ? "getUTC" : "get", c = a ? "setUTC" : "set";
        bb = a ? Date.UTC : function(a, b, c, g, h, i) {
            return new Date(a, b, p(c, 1), p(g, 0), p(h, 0), p(i, 0)).getTime();
        };
        ob = b + "Minutes";
        pb = b + "Hours";
        rb = b + "Day";
        Sa = b + "Date";
        $a = b + "Month";
        ab = b + "FullYear";
        Fb = c + "Minutes";
        Gb = c + "Hours";
        qb = c + "Date";
        Hb = c + "Month";
        Ib = c + "FullYear";
    }
    function va() {}
    function La(a, b, c, d) {
        this.axis = a;
        this.pos = b;
        this.type = c || "";
        this.isNew = !0;
        !c && !d && this.addLabel();
    }
    function tb(a, b) {
        this.axis = a;
        if (b) this.options = b, this.id = b.id;
    }
    function Mb(a, b, c, d, e, f) {
        var g = a.chart.inverted;
        this.axis = a;
        this.isNegative = c;
        this.options = b;
        this.x = d;
        this.total = 0;
        this.points = {};
        this.stack = e;
        this.percent = f === "percent";
        this.alignOptions = {
            align: b.align || (g ? c ? "left" : "right" : "center"),
            verticalAlign: b.verticalAlign || (g ? "middle" : c ? "bottom" : "top"),
            y: p(b.y, g ? 4 : c ? 14 : -6),
            x: p(b.x, g ? c ? -6 : 6 : 0)
        };
        this.textAlign = b.textAlign || (g ? c ? "right" : "left" : "center");
    }
    function db() {
        this.init.apply(this, arguments);
    }
    function ub() {
        this.init.apply(this, arguments);
    }
    function vb(a, b) {
        this.init(a, b);
    }
    function wb(a, b) {
        this.init(a, b);
    }
    function xb() {
        this.init.apply(this, arguments);
    }
    var v, z = document, E = window, N = Math, s = N.round, S = N.floor, ja = N.ceil, u = N.max, I = N.min, P = N.abs, V = N.cos, ba = N.sin, Ma = N.PI, Ua = Ma * 2 / 360, Da = navigator.userAgent, Nb = E.opera, qa = /msie/i.test(Da) && !Nb, eb = z.documentMode === 8, fb = /AppleWebKit/.test(Da), gb = /Firefox/.test(Da), Ob = /(Mobile|Android|Windows Phone)/.test(Da), wa = "http://www.w3.org/2000/svg", Y = !!z.createElementNS && !!z.createElementNS(wa, "svg").createSVGRect, Vb = gb && parseInt(Da.split("Firefox/")[1], 10) < 4, Z = !Y && !qa && !!z.createElement("canvas").getContext, Va, hb = z.documentElement.ontouchstart !== v, Pb = {}, yb = 0, cb, O, Xa, Ca, zb, y, xa = function() {}, Ea = [], Ba = "div", R = "none", Qb = "rgba(192,192,192," + (Y ? 1e-4 : .002) + ")", Db = "millisecond", nb = "second", Ya = "minute", Qa = "hour", ra = "day", Za = "week", Ra = "month", sa = "year", Rb = "stroke-width", bb, ob, pb, rb, Sa, $a, ab, Fb, Gb, qb, Hb, Ib, $ = {};
    E.Highcharts = E.Highcharts ? ua(16, !0) : {};
    Xa = function(a, b, c) {
        if (!t(b) || isNaN(b)) return "Invalid date";
        var a = p(a, "%Y-%m-%d %H:%M:%S"), d = new Date(b), e, f = d[pb](), g = d[rb](), h = d[Sa](), i = d[$a](), j = d[ab](), k = O.lang, l = k.weekdays, d = r({
            a: l[g].substr(0, 3),
            A: l[g],
            d: za(h),
            e: h,
            b: k.shortMonths[i],
            B: k.months[i],
            m: za(i + 1),
            y: j.toString().substr(2, 2),
            Y: j,
            H: za(f),
            I: za(f % 12 || 12),
            l: f % 12 || 12,
            M: za(d[ob]()),
            p: f < 12 ? "AM" : "PM",
            P: f < 12 ? "am" : "pm",
            S: za(d.getSeconds()),
            L: za(s(b % 1e3), 3)
        }, Highcharts.dateFormats);
        for (e in d) for (;a.indexOf("%" + e) !== -1; ) a = a.replace("%" + e, typeof d[e] === "function" ? d[e](b) : d[e]);
        return c ? a.substr(0, 1).toUpperCase() + a.substr(1) : a;
    };
    Jb.prototype = {
        wrapColor: function(a) {
            if (this.color >= a) this.color = 0;
        },
        wrapSymbol: function(a) {
            if (this.symbol >= a) this.symbol = 0;
        }
    };
    y = function() {
        for (var a = 0, b = arguments, c = b.length, d = {}; a < c; a++) d[b[a++]] = b[a];
        return d;
    }(Db, 1, nb, 1e3, Ya, 6e4, Qa, 36e5, ra, 864e5, Za, 6048e5, Ra, 26784e5, sa, 31556952e3);
    zb = {
        init: function(a, b, c) {
            var b = b || "", d = a.shift, e = b.indexOf("C") > -1, f = e ? 7 : 3, g, b = b.split(" "), c = [].concat(c), h, i, j = function(a) {
                for (g = a.length; g--; ) a[g] === "M" && a.splice(g + 1, 0, a[g + 1], a[g + 2], a[g + 1], a[g + 2]);
            };
            e && (j(b), j(c));
            a.isArea && (h = b.splice(b.length - 6, 6), i = c.splice(c.length - 6, 6));
            if (d <= c.length / f) for (;d--; ) c = [].concat(c).splice(0, f).concat(c);
            a.shift = 0;
            if (b.length) for (a = c.length; b.length < a; ) d = [].concat(b).splice(b.length - f, f), 
            e && (d[f - 6] = d[f - 2], d[f - 5] = d[f - 1]), b = b.concat(d);
            h && (b = b.concat(h), c = c.concat(i));
            return [ b, c ];
        },
        step: function(a, b, c, d) {
            var e = [], f = a.length;
            if (c === 1) e = d; else if (f === b.length && c < 1) for (;f--; ) d = parseFloat(a[f]), 
            e[f] = isNaN(d) ? a[f] : c * parseFloat(b[f] - d) + d; else e = b;
            return e;
        }
    };
    (function(a) {
        E.HighchartsAdapter = E.HighchartsAdapter || a && {
            init: function(b) {
                var c = a.fx, d = c.step, e, f = a.Tween, g = f && f.propHooks;
                e = a.cssHooks.opacity;
                a.extend(a.easing, {
                    easeOutQuad: function(a, b, c, d, e) {
                        return -d * (b /= e) * (b - 2) + c;
                    }
                });
                a.each([ "cur", "_default", "width", "height", "opacity" ], function(a, b) {
                    var e = d, k, l;
                    b === "cur" ? e = c.prototype : b === "_default" && f && (e = g[b], b = "set");
                    (k = e[b]) && (e[b] = function(c) {
                        c = a ? c : this;
                        l = c.elem;
                        return l.attr ? l.attr(c.prop, b === "cur" ? v : c.now) : k.apply(this, arguments);
                    });
                });
                Bb(e, "get", function(a, b, c) {
                    return b.attr ? b.opacity || 0 : a.call(this, b, c);
                });
                e = function(a) {
                    var c = a.elem, d;
                    if (!a.started) d = b.init(c, c.d, c.toD), a.start = d[0], a.end = d[1], a.started = !0;
                    c.attr("d", b.step(a.start, a.end, a.pos, c.toD));
                };
                f ? g.d = {
                    set: e
                } : d.d = e;
                this.each = Array.prototype.forEach ? function(a, b) {
                    return Array.prototype.forEach.call(a, b);
                } : function(a, b) {
                    for (var c = 0, d = a.length; c < d; c++) if (b.call(a[c], a[c], c, a) === !1) return c;
                };
                a.fn.highcharts = function() {
                    var a = "Chart", b = arguments, c, d;
                    da(b[0]) && (a = b[0], b = Array.prototype.slice.call(b, 1));
                    c = b[0];
                    if (c !== v) c.chart = c.chart || {}, c.chart.renderTo = this[0], new Highcharts[a](c, b[1]), 
                    d = this;
                    c === v && (d = Ea[w(this[0], "data-highcharts-chart")]);
                    return d;
                };
            },
            getScript: a.getScript,
            inArray: a.inArray,
            adapterRun: function(b, c) {
                return a(b)[c]();
            },
            grep: a.grep,
            map: function(a, c) {
                for (var d = [], e = 0, f = a.length; e < f; e++) d[e] = c.call(a[e], a[e], e, a);
                return d;
            },
            offset: function(b) {
                return a(b).offset();
            },
            addEvent: function(b, c, d) {
                a(b).bind(c, d);
            },
            removeEvent: function(b, c, d) {
                var e = z.removeEventListener ? "removeEventListener" : "detachEvent";
                z[e] && b && !b[e] && (b[e] = function() {});
                a(b).unbind(c, d);
            },
            fireEvent: function(b, c, d, e) {
                var f = a.Event(c), g = "detached" + c, h;
                !qa && d && (delete d.layerX, delete d.layerY);
                r(f, d);
                b[c] && (b[g] = b[c], b[c] = null);
                a.each([ "preventDefault", "stopPropagation" ], function(a, b) {
                    var c = f[b];
                    f[b] = function() {
                        try {
                            c.call(f);
                        } catch (a) {
                            b === "preventDefault" && (h = !0);
                        }
                    };
                });
                a(b).trigger(f);
                b[g] && (b[c] = b[g], b[g] = null);
                e && !f.isDefaultPrevented() && !h && e(f);
            },
            washMouseEvent: function(a) {
                var c = a.originalEvent || a;
                if (c.pageX === v) c.pageX = a.pageX, c.pageY = a.pageY;
                return c;
            },
            animate: function(b, c, d) {
                var e = a(b);
                if (!b.style) b.style = {};
                if (c.d) b.toD = c.d, c.d = 1;
                e.stop();
                e.animate(c, d);
            },
            stop: function(b) {
                a(b).stop();
            }
        };
    })(E.jQuery);
    var W = E.HighchartsAdapter, L = W || {};
    W && W.init.call(W, zb);
    var ib = L.adapterRun, Wb = L.getScript, na = L.inArray, n = L.each, sb = L.grep, Xb = L.offset, Na = L.map, J = L.addEvent, aa = L.removeEvent, C = L.fireEvent, Sb = L.washMouseEvent, Ab = L.animate, Wa = L.stop, L = {
        enabled: !0,
        x: 0,
        y: 15,
        style: {
            color: "#666",
            cursor: "default",
            fontSize: "11px",
            lineHeight: "14px"
        }
    };
    O = {
        colors: "#2f7ed8,#0d233a,#8bbc21,#910000,#1aadce,#492970,#f28f43,#77a1e5,#c42525,#a6c96a".split(","),
        symbols: [ "circle", "diamond", "square", "triangle", "triangle-down" ],
        lang: {
            loading: "Loading...",
            months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
            shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
            weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
            decimalPoint: ".",
            numericSymbols: "k,M,G,T,P,E".split(","),
            resetZoom: "Reset zoom",
            resetZoomTitle: "Reset zoom level 1:1",
            thousandsSep: ","
        },
        global: {
            useUTC: !0,
            canvasToolsURL: "http://code.highcharts.com/3.0.4/modules/canvas-tools.js",
            VMLRadialGradientURL: "http://code.highcharts.com/3.0.4/gfx/vml-radial-gradient.png"
        },
        chart: {
            borderColor: "#4572A7",
            borderRadius: 5,
            defaultSeriesType: "line",
            ignoreHiddenSeries: !0,
            spacingTop: 10,
            spacingRight: 10,
            spacingBottom: 15,
            spacingLeft: 10,
            style: {
                fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif',
                fontSize: "12px"
            },
            backgroundColor: "#FFFFFF",
            plotBorderColor: "#C0C0C0",
            resetZoomButton: {
                theme: {
                    zIndex: 20
                },
                position: {
                    align: "right",
                    x: -10,
                    y: 10
                }
            }
        },
        title: {
            text: "Chart title",
            align: "center",
            margin: 15,
            style: {
                color: "#274b6d",
                fontSize: "16px"
            }
        },
        subtitle: {
            text: "",
            align: "center",
            style: {
                color: "#4d759e"
            }
        },
        plotOptions: {
            line: {
                allowPointSelect: !1,
                showCheckbox: !1,
                animation: {
                    duration: 1e3
                },
                events: {},
                lineWidth: 2,
                marker: {
                    enabled: !0,
                    lineWidth: 0,
                    radius: 4,
                    lineColor: "#FFFFFF",
                    states: {
                        hover: {
                            enabled: !0
                        },
                        select: {
                            fillColor: "#FFFFFF",
                            lineColor: "#000000",
                            lineWidth: 2
                        }
                    }
                },
                point: {
                    events: {}
                },
                dataLabels: x(L, {
                    align: "center",
                    enabled: !1,
                    formatter: function() {
                        return this.y === null ? "" : ya(this.y, -1);
                    },
                    verticalAlign: "bottom",
                    y: 0
                }),
                cropThreshold: 300,
                pointRange: 0,
                showInLegend: !0,
                states: {
                    hover: {
                        marker: {}
                    },
                    select: {
                        marker: {}
                    }
                },
                stickyTracking: !0
            }
        },
        labels: {
            style: {
                position: "absolute",
                color: "#3E576F"
            }
        },
        legend: {
            enabled: !0,
            align: "center",
            layout: "horizontal",
            labelFormatter: function() {
                return this.name;
            },
            borderWidth: 1,
            borderColor: "#909090",
            borderRadius: 5,
            navigation: {
                activeColor: "#274b6d",
                inactiveColor: "#CCC"
            },
            shadow: !1,
            itemStyle: {
                cursor: "pointer",
                color: "#274b6d",
                fontSize: "12px"
            },
            itemHoverStyle: {
                color: "#000"
            },
            itemHiddenStyle: {
                color: "#CCC"
            },
            itemCheckboxStyle: {
                position: "absolute",
                width: "13px",
                height: "13px"
            },
            symbolWidth: 16,
            symbolPadding: 5,
            verticalAlign: "bottom",
            x: 0,
            y: 0,
            title: {
                style: {
                    fontWeight: "bold"
                }
            }
        },
        loading: {
            labelStyle: {
                fontWeight: "bold",
                position: "relative",
                top: "1em"
            },
            style: {
                position: "absolute",
                backgroundColor: "white",
                opacity: .5,
                textAlign: "center"
            }
        },
        tooltip: {
            enabled: !0,
            animation: Y,
            backgroundColor: "rgba(255, 255, 255, .85)",
            borderWidth: 1,
            borderRadius: 3,
            dateTimeLabelFormats: {
                millisecond: "%A, %b %e, %H:%M:%S.%L",
                second: "%A, %b %e, %H:%M:%S",
                minute: "%A, %b %e, %H:%M",
                hour: "%A, %b %e, %H:%M",
                day: "%A, %b %e, %Y",
                week: "Week from %A, %b %e, %Y",
                month: "%B %Y",
                year: "%Y"
            },
            headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
            pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',
            shadow: !0,
            snap: Ob ? 25 : 10,
            style: {
                color: "#333333",
                cursor: "default",
                fontSize: "12px",
                padding: "8px",
                whiteSpace: "nowrap"
            }
        },
        credits: {
            enabled: !0,
            text: "Highcharts.com",
            href: "http://www.highcharts.com",
            position: {
                align: "right",
                x: -10,
                verticalAlign: "bottom",
                y: -5
            },
            style: {
                cursor: "pointer",
                color: "#909090",
                fontSize: "9px"
            }
        }
    };
    var X = O.plotOptions, W = X.line;
    Lb();
    var oa = function(a) {
        var b = [], c, d;
        (function(a) {
            a && a.stops ? d = Na(a.stops, function(a) {
                return oa(a[1]);
            }) : (c = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/.exec(a)) ? b = [ A(c[1]), A(c[2]), A(c[3]), parseFloat(c[4], 10) ] : (c = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(a)) ? b = [ A(c[1], 16), A(c[2], 16), A(c[3], 16), 1 ] : (c = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(a)) && (b = [ A(c[1]), A(c[2]), A(c[3]), 1 ]);
        })(a);
        return {
            get: function(c) {
                var f;
                d ? (f = x(a), f.stops = [].concat(f.stops), n(d, function(a, b) {
                    f.stops[b] = [ f.stops[b][0], a.get(c) ];
                })) : f = b && !isNaN(b[0]) ? c === "rgb" ? "rgb(" + b[0] + "," + b[1] + "," + b[2] + ")" : c === "a" ? b[3] : "rgba(" + b.join(",") + ")" : a;
                return f;
            },
            brighten: function(a) {
                if (d) n(d, function(b) {
                    b.brighten(a);
                }); else if (pa(a) && a !== 0) {
                    var c;
                    for (c = 0; c < 3; c++) b[c] += A(a * 255), b[c] < 0 && (b[c] = 0), b[c] > 255 && (b[c] = 255);
                }
                return this;
            },
            rgba: b,
            setOpacity: function(a) {
                b[3] = a;
                return this;
            }
        };
    };
    va.prototype = {
        init: function(a, b) {
            this.element = b === "span" ? T(b) : z.createElementNS(wa, b);
            this.renderer = a;
            this.attrSetters = {};
        },
        opacity: 1,
        animate: function(a, b, c) {
            b = p(b, Ca, !0);
            Wa(this);
            if (b) {
                b = x(b);
                if (c) b.complete = c;
                Ab(this, a, b);
            } else this.attr(a), c && c();
        },
        attr: function(a, b) {
            var c, d, e, f, g = this.element, h = g.nodeName.toLowerCase(), i = this.renderer, j, k = this.attrSetters, l = this.shadows, m, o, q = this;
            da(a) && t(b) && (c = a, a = {}, a[c] = b);
            if (da(a)) c = a, h === "circle" ? c = {
                x: "cx",
                y: "cy"
            }[c] || c : c === "strokeWidth" && (c = "stroke-width"), q = w(g, c) || this[c] || 0, 
            c !== "d" && c !== "visibility" && (q = parseFloat(q)); else {
                for (c in a) if (j = !1, d = a[c], e = k[c] && k[c].call(this, d, c), e !== !1) {
                    e !== v && (d = e);
                    if (c === "d") d && d.join && (d = d.join(" ")), /(NaN| {2}|^$)/.test(d) && (d = "M 0 0"); else if (c === "x" && h === "text") for (e = 0; e < g.childNodes.length; e++) f = g.childNodes[e], 
                    w(f, "x") === w(g, "x") && w(f, "x", d); else if (this.rotation && (c === "x" || c === "y")) o = !0; else if (c === "fill") d = i.color(d, g, c); else if (h === "circle" && (c === "x" || c === "y")) c = {
                        x: "cx",
                        y: "cy"
                    }[c] || c; else if (h === "rect" && c === "r") w(g, {
                        rx: d,
                        ry: d
                    }), j = !0; else if (c === "translateX" || c === "translateY" || c === "rotation" || c === "verticalAlign" || c === "scaleX" || c === "scaleY") j = o = !0; else if (c === "stroke") d = i.color(d, g, c); else if (c === "dashstyle") if (c = "stroke-dasharray", 
                    d = d && d.toLowerCase(), d === "solid") d = R; else {
                        if (d) {
                            d = d.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").split(",");
                            for (e = d.length; e--; ) d[e] = A(d[e]) * p(a["stroke-width"], this["stroke-width"]);
                            d = d.join(",");
                        }
                    } else if (c === "width") d = A(d); else if (c === "align") c = "text-anchor", d = {
                        left: "start",
                        center: "middle",
                        right: "end"
                    }[d]; else if (c === "title") e = g.getElementsByTagName("title")[0], e || (e = z.createElementNS(wa, "title"), 
                    g.appendChild(e)), e.textContent = d;
                    c === "strokeWidth" && (c = "stroke-width");
                    if (c === "stroke-width" || c === "stroke") {
                        this[c] = d;
                        if (this.stroke && this["stroke-width"]) w(g, "stroke", this.stroke), w(g, "stroke-width", this["stroke-width"]), 
                        this.hasStroke = !0; else if (c === "stroke-width" && d === 0 && this.hasStroke) g.removeAttribute("stroke"), 
                        this.hasStroke = !1;
                        j = !0;
                    }
                    this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(c) && (m || (this.symbolAttr(a), 
                    m = !0), j = !0);
                    if (l && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(c)) for (e = l.length; e--; ) w(l[e], c, c === "height" ? u(d - (l[e].cutHeight || 0), 0) : d);
                    if ((c === "width" || c === "height") && h === "rect" && d < 0) d = 0;
                    this[c] = d;
                    c === "text" ? (d !== this.textStr && delete this.bBox, this.textStr = d, this.added && i.buildText(this)) : j || w(g, c, d);
                }
                o && this.updateTransform();
            }
            return q;
        },
        addClass: function(a) {
            var b = this.element, c = w(b, "class") || "";
            c.indexOf(a) === -1 && w(b, "class", c + " " + a);
            return this;
        },
        symbolAttr: function(a) {
            var b = this;
            n("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","), function(c) {
                b[c] = p(a[c], b[c]);
            });
            b.attr({
                d: b.renderer.symbols[b.symbolName](b.x, b.y, b.width, b.height, b)
            });
        },
        clip: function(a) {
            return this.attr("clip-path", a ? "url(" + this.renderer.url + "#" + a.id + ")" : R);
        },
        crisp: function(a, b, c, d, e) {
            var f, g = {}, h = {}, i, a = a || this.strokeWidth || this.attr && this.attr("stroke-width") || 0;
            i = s(a) % 2 / 2;
            h.x = S(b || this.x || 0) + i;
            h.y = S(c || this.y || 0) + i;
            h.width = S((d || this.width || 0) - 2 * i);
            h.height = S((e || this.height || 0) - 2 * i);
            h.strokeWidth = a;
            for (f in h) this[f] !== h[f] && (this[f] = g[f] = h[f]);
            return g;
        },
        css: function(a) {
            var b = this.element, c = a && a.width && b.nodeName.toLowerCase() === "text", d, e = "", f = function(a, b) {
                return "-" + b.toLowerCase();
            };
            if (a && a.color) a.fill = a.color;
            this.styles = a = r(this.styles, a);
            Z && c && delete a.width;
            if (qa && !Y) c && delete a.width, M(this.element, a); else {
                for (d in a) e += d.replace(/([A-Z])/g, f) + ":" + a[d] + ";";
                w(b, "style", e);
            }
            c && this.added && this.renderer.buildText(this);
            return this;
        },
        on: function(a, b) {
            var c = this.element;
            if (hb && a === "click") c.ontouchstart = function(a) {
                a.preventDefault();
                b.call(c, a);
            };
            c["on" + a] = b;
            return this;
        },
        setRadialReference: function(a) {
            this.element.radialReference = a;
            return this;
        },
        translate: function(a, b) {
            return this.attr({
                translateX: a,
                translateY: b
            });
        },
        invert: function() {
            this.inverted = !0;
            this.updateTransform();
            return this;
        },
        htmlCss: function(a) {
            var b = this.element;
            if (b = a && b.tagName === "SPAN" && a.width) delete a.width, this.textWidth = b, 
            this.updateTransform();
            this.styles = r(this.styles, a);
            M(this.element, a);
            return this;
        },
        htmlGetBBox: function() {
            var a = this.element, b = this.bBox;
            if (!b) {
                if (a.nodeName === "text") a.style.position = "absolute";
                b = this.bBox = {
                    x: a.offsetLeft,
                    y: a.offsetTop,
                    width: a.offsetWidth,
                    height: a.offsetHeight
                };
            }
            return b;
        },
        htmlUpdateTransform: function() {
            if (this.added) {
                var a = this.renderer, b = this.element, c = this.translateX || 0, d = this.translateY || 0, e = this.x || 0, f = this.y || 0, g = this.textAlign || "left", h = {
                    left: 0,
                    center: .5,
                    right: 1
                }[g], i = g && g !== "left", j = this.shadows;
                M(b, {
                    marginLeft: c,
                    marginTop: d
                });
                j && n(j, function(a) {
                    M(a, {
                        marginLeft: c + 1,
                        marginTop: d + 1
                    });
                });
                this.inverted && n(b.childNodes, function(c) {
                    a.invertChild(c, b);
                });
                if (b.tagName === "SPAN") {
                    var k, l, j = this.rotation, m;
                    k = 0;
                    var o = 1, q = 0, ka;
                    m = A(this.textWidth);
                    var D = this.xCorr || 0, F = this.yCorr || 0, Tb = [ j, g, b.innerHTML, this.textWidth ].join(",");
                    if (Tb !== this.cTT) {
                        t(j) && (k = j * Ua, o = V(k), q = ba(k), this.setSpanRotation(j, q, o));
                        k = p(this.elemWidth, b.offsetWidth);
                        l = p(this.elemHeight, b.offsetHeight);
                        if (k > m && /[ \-]/.test(b.textContent || b.innerText)) M(b, {
                            width: m + "px",
                            display: "block",
                            whiteSpace: "normal"
                        }), k = m;
                        m = a.fontMetrics(b.style.fontSize).b;
                        D = o < 0 && -k;
                        F = q < 0 && -l;
                        ka = o * q < 0;
                        D += q * m * (ka ? 1 - h : h);
                        F -= o * m * (j ? ka ? h : 1 - h : 1);
                        i && (D -= k * h * (o < 0 ? -1 : 1), j && (F -= l * h * (q < 0 ? -1 : 1)), M(b, {
                            textAlign: g
                        }));
                        this.xCorr = D;
                        this.yCorr = F;
                    }
                    M(b, {
                        left: e + D + "px",
                        top: f + F + "px"
                    });
                    if (fb) l = b.offsetHeight;
                    this.cTT = Tb;
                }
            } else this.alignOnAdd = !0;
        },
        setSpanRotation: function(a) {
            var b = {};
            b[qa ? "-ms-transform" : fb ? "-webkit-transform" : gb ? "MozTransform" : Nb ? "-o-transform" : ""] = b.transform = "rotate(" + a + "deg)";
            M(this.element, b);
        },
        updateTransform: function() {
            var a = this.translateX || 0, b = this.translateY || 0, c = this.scaleX, d = this.scaleY, e = this.inverted, f = this.rotation;
            e && (a += this.attr("width"), b += this.attr("height"));
            a = [ "translate(" + a + "," + b + ")" ];
            e ? a.push("rotate(90) scale(-1,1)") : f && a.push("rotate(" + f + " " + (this.x || 0) + " " + (this.y || 0) + ")");
            (t(c) || t(d)) && a.push("scale(" + p(c, 1) + " " + p(d, 1) + ")");
            a.length && w(this.element, "transform", a.join(" "));
        },
        toFront: function() {
            var a = this.element;
            a.parentNode.appendChild(a);
            return this;
        },
        align: function(a, b, c) {
            var d, e, f, g, h = {};
            e = this.renderer;
            f = e.alignedObjects;
            if (a) {
                if (this.alignOptions = a, this.alignByTranslate = b, !c || da(c)) this.alignTo = d = c || "renderer", 
                fa(f, this), f.push(this), c = null;
            } else a = this.alignOptions, b = this.alignByTranslate, d = this.alignTo;
            c = p(c, e[d], e);
            d = a.align;
            e = a.verticalAlign;
            f = (c.x || 0) + (a.x || 0);
            g = (c.y || 0) + (a.y || 0);
            if (d === "right" || d === "center") f += (c.width - (a.width || 0)) / {
                right: 1,
                center: 2
            }[d];
            h[b ? "translateX" : "x"] = s(f);
            if (e === "bottom" || e === "middle") g += (c.height - (a.height || 0)) / ({
                bottom: 1,
                middle: 2
            }[e] || 1);
            h[b ? "translateY" : "y"] = s(g);
            this[this.placed ? "animate" : "attr"](h);
            this.placed = !0;
            this.alignAttr = h;
            return this;
        },
        getBBox: function() {
            var a = this.bBox, b = this.renderer, c, d = this.rotation;
            c = this.element;
            var e = this.styles, f = d * Ua;
            if (!a) {
                if (c.namespaceURI === wa || b.forExport) {
                    try {
                        a = c.getBBox ? r({}, c.getBBox()) : {
                            width: c.offsetWidth,
                            height: c.offsetHeight
                        };
                    } catch (g) {}
                    if (!a || a.width < 0) a = {
                        width: 0,
                        height: 0
                    };
                } else a = this.htmlGetBBox();
                if (b.isSVG) {
                    b = a.width;
                    c = a.height;
                    if (qa && e && e.fontSize === "11px" && c.toPrecision(3) === "22.7") a.height = c = 14;
                    if (d) a.width = P(c * ba(f)) + P(b * V(f)), a.height = P(c * V(f)) + P(b * ba(f));
                }
                this.bBox = a;
            }
            return a;
        },
        show: function() {
            return this.attr({
                visibility: "visible"
            });
        },
        hide: function() {
            return this.attr({
                visibility: "hidden"
            });
        },
        fadeOut: function(a) {
            var b = this;
            b.animate({
                opacity: 0
            }, {
                duration: a || 150,
                complete: function() {
                    b.hide();
                }
            });
        },
        add: function(a) {
            var b = this.renderer, c = a || b, d = c.element || b.box, e = d.childNodes, f = this.element, g = w(f, "zIndex"), h;
            if (a) this.parentGroup = a;
            this.parentInverted = a && a.inverted;
            this.textStr !== void 0 && b.buildText(this);
            if (g) c.handleZ = !0, g = A(g);
            if (c.handleZ) for (c = 0; c < e.length; c++) if (a = e[c], b = w(a, "zIndex"), 
            a !== f && (A(b) > g || !t(g) && t(b))) {
                d.insertBefore(f, a);
                h = !0;
                break;
            }
            h || d.appendChild(f);
            this.added = !0;
            C(this, "add");
            return this;
        },
        safeRemoveChild: function(a) {
            var b = a.parentNode;
            b && b.removeChild(a);
        },
        destroy: function() {
            var a = this, b = a.element || {}, c = a.shadows, d = a.renderer.isSVG && b.nodeName === "SPAN" && b.parentNode, e, f;
            b.onclick = b.onmouseout = b.onmouseover = b.onmousemove = b.point = null;
            Wa(a);
            if (a.clipPath) a.clipPath = a.clipPath.destroy();
            if (a.stops) {
                for (f = 0; f < a.stops.length; f++) a.stops[f] = a.stops[f].destroy();
                a.stops = null;
            }
            a.safeRemoveChild(b);
            for (c && n(c, function(b) {
                a.safeRemoveChild(b);
            }); d && d.childNodes.length === 0; ) b = d.parentNode, a.safeRemoveChild(d), d = b;
            a.alignTo && fa(a.renderer.alignedObjects, a);
            for (e in a) delete a[e];
            return null;
        },
        shadow: function(a, b, c) {
            var d = [], e, f, g = this.element, h, i, j, k;
            if (a) {
                i = p(a.width, 3);
                j = (a.opacity || .15) / i;
                k = this.parentInverted ? "(-1,-1)" : "(" + p(a.offsetX, 1) + ", " + p(a.offsetY, 1) + ")";
                for (e = 1; e <= i; e++) {
                    f = g.cloneNode(0);
                    h = i * 2 + 1 - 2 * e;
                    w(f, {
                        isShadow: "true",
                        stroke: a.color || "black",
                        "stroke-opacity": j * e,
                        "stroke-width": h,
                        transform: "translate" + k,
                        fill: R
                    });
                    if (c) w(f, "height", u(w(f, "height") - h, 0)), f.cutHeight = h;
                    b ? b.element.appendChild(f) : g.parentNode.insertBefore(f, g);
                    d.push(f);
                }
                this.shadows = d;
            }
            return this;
        }
    };
    var Fa = function() {
        this.init.apply(this, arguments);
    };
    Fa.prototype = {
        Element: va,
        init: function(a, b, c, d) {
            var e = location, f, g;
            f = this.createElement("svg").attr({
                version: "1.1"
            });
            g = f.element;
            a.appendChild(g);
            a.innerHTML.indexOf("xmlns") === -1 && w(g, "xmlns", wa);
            this.isSVG = !0;
            this.box = g;
            this.boxWrapper = f;
            this.alignedObjects = [];
            this.url = (gb || fb) && z.getElementsByTagName("base").length ? e.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "";
            this.createElement("desc").add().element.appendChild(z.createTextNode("Created with Highcharts 3.0.4"));
            this.defs = this.createElement("defs").add();
            this.forExport = d;
            this.gradients = {};
            this.setSize(b, c, !1);
            var h;
            if (gb && a.getBoundingClientRect) this.subPixelFix = b = function() {
                M(a, {
                    left: 0,
                    top: 0
                });
                h = a.getBoundingClientRect();
                M(a, {
                    left: ja(h.left) - h.left + "px",
                    top: ja(h.top) - h.top + "px"
                });
            }, b(), J(E, "resize", b);
        },
        isHidden: function() {
            return !this.boxWrapper.getBBox().width;
        },
        destroy: function() {
            var a = this.defs;
            this.box = null;
            this.boxWrapper = this.boxWrapper.destroy();
            Ja(this.gradients || {});
            this.gradients = null;
            if (a) this.defs = a.destroy();
            this.subPixelFix && aa(E, "resize", this.subPixelFix);
            return this.alignedObjects = null;
        },
        createElement: function(a) {
            var b = new this.Element();
            b.init(this, a);
            return b;
        },
        draw: function() {},
        buildText: function(a) {
            for (var b = a.element, c = this, d = c.forExport, e = p(a.textStr, "").toString().replace(/<(b|strong)>/g, '<span style="font-weight:bold">').replace(/<(i|em)>/g, '<span style="font-style:italic">').replace(/<a/g, "<span").replace(/<\/(b|strong|i|em|a)>/g, "</span>").split(/<br.*?>/g), f = b.childNodes, g = /style="([^"]+)"/, h = /href="(http[^"]+)"/, i = w(b, "x"), j = a.styles, k = j && j.width && A(j.width), l = j && j.lineHeight, m = f.length; m--; ) b.removeChild(f[m]);
            k && !a.added && this.box.appendChild(b);
            e[e.length - 1] === "" && e.pop();
            n(e, function(e, f) {
                var m, p = 0, e = e.replace(/<span/g, "|||<span").replace(/<\/span>/g, "</span>|||");
                m = e.split("|||");
                n(m, function(e) {
                    if (e !== "" || m.length === 1) {
                        var o = {}, n = z.createElementNS(wa, "tspan"), t;
                        g.test(e) && (t = e.match(g)[1].replace(/(;| |^)color([ :])/, "$1fill$2"), w(n, "style", t));
                        h.test(e) && !d && (w(n, "onclick", 'location.href="' + e.match(h)[1] + '"'), M(n, {
                            cursor: "pointer"
                        }));
                        e = (e.replace(/<(.|\n)*?>/g, "") || " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
                        if (e !== " " && (n.appendChild(z.createTextNode(e)), p ? o.dx = 0 : o.x = i, w(n, o), 
                        !p && f && (!Y && d && M(n, {
                            display: "block"
                        }), w(n, "dy", l || c.fontMetrics(/px$/.test(n.style.fontSize) ? n.style.fontSize : j.fontSize).h, fb && n.offsetHeight)), 
                        b.appendChild(n), p++, k)) for (var e = e.replace(/([^\^])-/g, "$1- ").split(" "), u, s = []; e.length || s.length; ) delete a.bBox, 
                        u = a.getBBox().width, o = u > k, !o || e.length === 1 ? (e = s, s = [], e.length && (n = z.createElementNS(wa, "tspan"), 
                        w(n, {
                            dy: l || 16,
                            x: i
                        }), t && w(n, "style", t), b.appendChild(n), u > k && (k = u))) : (n.removeChild(n.firstChild), 
                        s.unshift(e.pop())), e.length && n.appendChild(z.createTextNode(e.join(" ").replace(/- /g, "-")));
                    }
                });
            });
        },
        button: function(a, b, c, d, e, f, g) {
            var h = this.label(a, b, c, null, null, null, null, null, "button"), i = 0, j, k, l, m, o, a = {
                x1: 0,
                y1: 0,
                x2: 0,
                y2: 1
            }, e = x({
                "stroke-width": 1,
                stroke: "#CCCCCC",
                fill: {
                    linearGradient: a,
                    stops: [ [ 0, "#FEFEFE" ], [ 1, "#F6F6F6" ] ]
                },
                r: 2,
                padding: 5,
                style: {
                    color: "black"
                }
            }, e);
            l = e.style;
            delete e.style;
            f = x(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [ [ 0, "#FFF" ], [ 1, "#ACF" ] ]
                }
            }, f);
            m = f.style;
            delete f.style;
            g = x(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [ [ 0, "#9BD" ], [ 1, "#CDF" ] ]
                }
            }, g);
            o = g.style;
            delete g.style;
            J(h.element, qa ? "mouseover" : "mouseenter", function() {
                h.attr(f).css(m);
            });
            J(h.element, qa ? "mouseout" : "mouseleave", function() {
                j = [ e, f, g ][i];
                k = [ l, m, o ][i];
                h.attr(j).css(k);
            });
            h.setState = function(a) {
                (i = a) ? a === 2 && h.attr(g).css(o) : h.attr(e).css(l);
            };
            return h.on("click", function() {
                d.call(h);
            }).attr(e).css(r({
                cursor: "default"
            }, l));
        },
        crispLine: function(a, b) {
            a[1] === a[4] && (a[1] = a[4] = s(a[1]) - b % 2 / 2);
            a[2] === a[5] && (a[2] = a[5] = s(a[2]) + b % 2 / 2);
            return a;
        },
        path: function(a) {
            var b = {
                fill: R
            };
            Ha(a) ? b.d = a : U(a) && r(b, a);
            return this.createElement("path").attr(b);
        },
        circle: function(a, b, c) {
            a = U(a) ? a : {
                x: a,
                y: b,
                r: c
            };
            return this.createElement("circle").attr(a);
        },
        arc: function(a, b, c, d, e, f) {
            if (U(a)) b = a.y, c = a.r, d = a.innerR, e = a.start, f = a.end, a = a.x;
            a = this.symbol("arc", a || 0, b || 0, c || 0, c || 0, {
                innerR: d || 0,
                start: e || 0,
                end: f || 0
            });
            a.r = c;
            return a;
        },
        rect: function(a, b, c, d, e, f) {
            e = U(a) ? a.r : e;
            e = this.createElement("rect").attr({
                rx: e,
                ry: e,
                fill: R
            });
            return e.attr(U(a) ? a : e.crisp(f, a, b, u(c, 0), u(d, 0)));
        },
        setSize: function(a, b, c) {
            var d = this.alignedObjects, e = d.length;
            this.width = a;
            this.height = b;
            for (this.boxWrapper[p(c, !0) ? "animate" : "attr"]({
                width: a,
                height: b
            }); e--; ) d[e].align();
        },
        g: function(a) {
            var b = this.createElement("g");
            return t(a) ? b.attr({
                "class": "highcharts-" + a
            }) : b;
        },
        image: function(a, b, c, d, e) {
            var f = {
                preserveAspectRatio: R
            };
            arguments.length > 1 && r(f, {
                x: b,
                y: c,
                width: d,
                height: e
            });
            f = this.createElement("image").attr(f);
            f.element.setAttributeNS ? f.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", a) : f.element.setAttribute("hc-svg-href", a);
            return f;
        },
        symbol: function(a, b, c, d, e, f) {
            var g, h = this.symbols[a], h = h && h(s(b), s(c), d, e, f), i = /^url\((.*?)\)$/, j, k;
            if (h) g = this.path(h), r(g, {
                symbolName: a,
                x: b,
                y: c,
                width: d,
                height: e
            }), f && r(g, f); else if (i.test(a)) k = function(a, b) {
                a.element && (a.attr({
                    width: b[0],
                    height: b[1]
                }), a.alignByTranslate || a.translate(s((d - b[0]) / 2), s((e - b[1]) / 2)));
            }, j = a.match(i)[1], a = Pb[j], g = this.image(j).attr({
                x: b,
                y: c
            }), g.isImg = !0, a ? k(g, a) : (g.attr({
                width: 0,
                height: 0
            }), T("img", {
                onload: function() {
                    k(g, Pb[j] = [ this.width, this.height ]);
                },
                src: j
            }));
            return g;
        },
        symbols: {
            circle: function(a, b, c, d) {
                var e = .166 * c;
                return [ "M", a + c / 2, b, "C", a + c + e, b, a + c + e, b + d, a + c / 2, b + d, "C", a - e, b + d, a - e, b, a + c / 2, b, "Z" ];
            },
            square: function(a, b, c, d) {
                return [ "M", a, b, "L", a + c, b, a + c, b + d, a, b + d, "Z" ];
            },
            triangle: function(a, b, c, d) {
                return [ "M", a + c / 2, b, "L", a + c, b + d, a, b + d, "Z" ];
            },
            "triangle-down": function(a, b, c, d) {
                return [ "M", a, b, "L", a + c, b, a + c / 2, b + d, "Z" ];
            },
            diamond: function(a, b, c, d) {
                return [ "M", a + c / 2, b, "L", a + c, b + d / 2, a + c / 2, b + d, a, b + d / 2, "Z" ];
            },
            arc: function(a, b, c, d, e) {
                var f = e.start, c = e.r || c || d, g = e.end - .001, d = e.innerR, h = e.open, i = V(f), j = ba(f), k = V(g), g = ba(g), e = e.end - f < Ma ? 0 : 1;
                return [ "M", a + c * i, b + c * j, "A", c, c, 0, e, 1, a + c * k, b + c * g, h ? "M" : "L", a + d * k, b + d * g, "A", d, d, 0, e, 0, a + d * i, b + d * j, h ? "" : "Z" ];
            }
        },
        clipRect: function(a, b, c, d) {
            var e = "highcharts-" + yb++, f = this.createElement("clipPath").attr({
                id: e
            }).add(this.defs), a = this.rect(a, b, c, d, 0).add(f);
            a.id = e;
            a.clipPath = f;
            return a;
        },
        color: function(a, b, c) {
            var d = this, e, f = /^rgba/, g, h, i, j, k, l, m, o = [];
            a && a.linearGradient ? g = "linearGradient" : a && a.radialGradient && (g = "radialGradient");
            if (g) {
                c = a[g];
                h = d.gradients;
                j = a.stops;
                b = b.radialReference;
                Ha(c) && (a[g] = c = {
                    x1: c[0],
                    y1: c[1],
                    x2: c[2],
                    y2: c[3],
                    gradientUnits: "userSpaceOnUse"
                });
                g === "radialGradient" && b && !t(c.gradientUnits) && (c = x(c, {
                    cx: b[0] - b[2] / 2 + c.cx * b[2],
                    cy: b[1] - b[2] / 2 + c.cy * b[2],
                    r: c.r * b[2],
                    gradientUnits: "userSpaceOnUse"
                }));
                for (m in c) m !== "id" && o.push(m, c[m]);
                for (m in j) o.push(j[m]);
                o = o.join(",");
                h[o] ? a = h[o].id : (c.id = a = "highcharts-" + yb++, h[o] = i = d.createElement(g).attr(c).add(d.defs), 
                i.stops = [], n(j, function(a) {
                    f.test(a[1]) ? (e = oa(a[1]), k = e.get("rgb"), l = e.get("a")) : (k = a[1], l = 1);
                    a = d.createElement("stop").attr({
                        offset: a[0],
                        "stop-color": k,
                        "stop-opacity": l
                    }).add(i);
                    i.stops.push(a);
                }));
                return "url(" + d.url + "#" + a + ")";
            } else return f.test(a) ? (e = oa(a), w(b, c + "-opacity", e.get("a")), e.get("rgb")) : (b.removeAttribute(c + "-opacity"), 
            a);
        },
        text: function(a, b, c, d) {
            var e = O.chart.style, f = Z || !Y && this.forExport;
            if (d && !this.forExport) return this.html(a, b, c);
            b = s(p(b, 0));
            c = s(p(c, 0));
            a = this.createElement("text").attr({
                x: b,
                y: c,
                text: a
            }).css({
                fontFamily: e.fontFamily,
                fontSize: e.fontSize
            });
            f && a.css({
                position: "absolute"
            });
            a.x = b;
            a.y = c;
            return a;
        },
        html: function(a, b, c) {
            var d = O.chart.style, e = this.createElement("span"), f = e.attrSetters, g = e.element, h = e.renderer;
            f.text = function(a) {
                a !== g.innerHTML && delete this.bBox;
                g.innerHTML = a;
                return !1;
            };
            f.x = f.y = f.align = function(a, b) {
                b === "align" && (b = "textAlign");
                e[b] = a;
                e.htmlUpdateTransform();
                return !1;
            };
            e.attr({
                text: a,
                x: s(b),
                y: s(c)
            }).css({
                position: "absolute",
                whiteSpace: "nowrap",
                fontFamily: d.fontFamily,
                fontSize: d.fontSize
            });
            e.css = e.htmlCss;
            if (h.isSVG) e.add = function(a) {
                var b, c = h.box.parentNode, d = [];
                if (a) {
                    if (b = a.div, !b) {
                        for (;a; ) d.push(a), a = a.parentGroup;
                        n(d.reverse(), function(a) {
                            var d;
                            b = a.div = a.div || T(Ba, {
                                className: w(a.element, "class")
                            }, {
                                position: "absolute",
                                left: (a.translateX || 0) + "px",
                                top: (a.translateY || 0) + "px"
                            }, b || c);
                            d = b.style;
                            r(a.attrSetters, {
                                translateX: function(a) {
                                    d.left = a + "px";
                                },
                                translateY: function(a) {
                                    d.top = a + "px";
                                },
                                visibility: function(a, b) {
                                    d[b] = a;
                                }
                            });
                        });
                    }
                } else b = c;
                b.appendChild(g);
                e.added = !0;
                e.alignOnAdd && e.htmlUpdateTransform();
                return e;
            };
            return e;
        },
        fontMetrics: function(a) {
            var a = A(a || 11), a = a < 24 ? a + 4 : s(a * 1.2), b = s(a * .8);
            return {
                h: a,
                b: b
            };
        },
        label: function(a, b, c, d, e, f, g, h, i) {
            function j() {
                var a, b;
                a = p.element.style;
                F = (Oa === void 0 || Ga === void 0 || q.styles.textAlign) && p.getBBox();
                q.width = (Oa || F.width || 0) + 2 * ca + jb;
                q.height = (Ga || F.height || 0) + 2 * ca;
                w = ca + o.fontMetrics(a && a.fontSize).b;
                if (A) {
                    if (!D) a = s(-u * ca), b = h ? -w : 0, q.box = D = d ? o.symbol(d, a, b, q.width, q.height) : o.rect(a, b, q.width, q.height, 0, kb[Rb]), 
                    D.add(q);
                    D.isImg || D.attr(x({
                        width: q.width,
                        height: q.height
                    }, kb));
                    kb = null;
                }
            }
            function k() {
                var a = q.styles, a = a && a.textAlign, b = jb + ca * (1 - u), c;
                c = h ? 0 : w;
                if (t(Oa) && (a === "center" || a === "right")) b += {
                    center: .5,
                    right: 1
                }[a] * (Oa - F.width);
                (b !== p.x || c !== p.y) && p.attr({
                    x: b,
                    y: c
                });
                p.x = b;
                p.y = c;
            }
            function l(a, b) {
                D ? D.attr(a, b) : kb[a] = b;
            }
            function m() {
                p.add(q);
                q.attr({
                    text: a,
                    x: b,
                    y: c
                });
                D && t(e) && q.attr({
                    anchorX: e,
                    anchorY: f
                });
            }
            var o = this, q = o.g(i), p = o.text("", 0, 0, g).attr({
                zIndex: 1
            }), D, F, u = 0, ca = 3, jb = 0, Oa, Ga, G, H, B = 0, kb = {}, w, g = q.attrSetters, A;
            J(q, "add", m);
            g.width = function(a) {
                Oa = a;
                return !1;
            };
            g.height = function(a) {
                Ga = a;
                return !1;
            };
            g.padding = function(a) {
                t(a) && a !== ca && (ca = a, k());
                return !1;
            };
            g.paddingLeft = function(a) {
                t(a) && a !== jb && (jb = a, k());
                return !1;
            };
            g.align = function(a) {
                u = {
                    left: 0,
                    center: .5,
                    right: 1
                }[a];
                return !1;
            };
            g.text = function(a, b) {
                p.attr(b, a);
                j();
                k();
                return !1;
            };
            g[Rb] = function(a, b) {
                A = !0;
                B = a % 2 / 2;
                l(b, a);
                return !1;
            };
            g.stroke = g.fill = g.r = function(a, b) {
                b === "fill" && (A = !0);
                l(b, a);
                return !1;
            };
            g.anchorX = function(a, b) {
                e = a;
                l(b, a + B - G);
                return !1;
            };
            g.anchorY = function(a, b) {
                f = a;
                l(b, a - H);
                return !1;
            };
            g.x = function(a) {
                q.x = a;
                a -= u * ((Oa || F.width) + ca);
                G = s(a);
                q.attr("translateX", G);
                return !1;
            };
            g.y = function(a) {
                H = q.y = s(a);
                q.attr("translateY", H);
                return !1;
            };
            var z = q.css;
            return r(q, {
                css: function(a) {
                    if (a) {
                        var b = {}, a = x(a);
                        n("fontSize,fontWeight,fontFamily,color,lineHeight,width,textDecoration".split(","), function(c) {
                            a[c] !== v && (b[c] = a[c], delete a[c]);
                        });
                        p.css(b);
                    }
                    return z.call(q, a);
                },
                getBBox: function() {
                    return {
                        width: F.width + 2 * ca,
                        height: F.height + 2 * ca,
                        x: F.x - ca,
                        y: F.y - ca
                    };
                },
                shadow: function(a) {
                    D && D.shadow(a);
                    return q;
                },
                destroy: function() {
                    aa(q, "add", m);
                    aa(q.element, "mouseenter");
                    aa(q.element, "mouseleave");
                    p && (p = p.destroy());
                    D && (D = D.destroy());
                    va.prototype.destroy.call(q);
                    q = o = j = k = l = m = null;
                }
            });
        }
    };
    Va = Fa;
    var K;
    if (!Y && !Z) {
        Highcharts.VMLElement = K = {
            init: function(a, b) {
                var c = [ "<", b, ' filled="f" stroked="f"' ], d = [ "position: ", "absolute", ";" ], e = b === Ba;
                (b === "shape" || e) && d.push("left:0;top:0;width:1px;height:1px;");
                d.push("visibility: ", e ? "hidden" : "visible");
                c.push(' style="', d.join(""), '"/>');
                if (b) c = e || b === "span" || b === "img" ? c.join("") : a.prepVML(c), this.element = T(c);
                this.renderer = a;
                this.attrSetters = {};
            },
            add: function(a) {
                var b = this.renderer, c = this.element, d = b.box, d = a ? a.element || a : d;
                a && a.inverted && b.invertChild(c, d);
                d.appendChild(c);
                this.added = !0;
                this.alignOnAdd && !this.deferUpdateTransform && this.updateTransform();
                C(this, "add");
                return this;
            },
            updateTransform: va.prototype.htmlUpdateTransform,
            setSpanRotation: function(a, b, c) {
                M(this.element, {
                    filter: a ? [ "progid:DXImageTransform.Microsoft.Matrix(M11=", c, ", M12=", -b, ", M21=", b, ", M22=", c, ", sizingMethod='auto expand')" ].join("") : R
                });
            },
            attr: function(a, b) {
                var c, d, e, f = this.element || {}, g = f.style, h = f.nodeName, i = this.renderer, j = this.symbolName, k, l = this.shadows, m, o = this.attrSetters, q = this;
                da(a) && t(b) && (c = a, a = {}, a[c] = b);
                if (da(a)) c = a, q = c === "strokeWidth" || c === "stroke-width" ? this.strokeweight : this[c]; else for (c in a) if (d = a[c], 
                m = !1, e = o[c] && o[c].call(this, d, c), e !== !1 && d !== null) {
                    e !== v && (d = e);
                    if (j && /^(x|y|r|start|end|width|height|innerR|anchorX|anchorY)/.test(c)) k || (this.symbolAttr(a), 
                    k = !0), m = !0; else if (c === "d") {
                        d = d || [];
                        this.d = d.join(" ");
                        e = d.length;
                        m = [];
                        for (var p; e--; ) if (pa(d[e])) m[e] = s(d[e] * 10) - 5; else if (d[e] === "Z") m[e] = "x"; else if (m[e] = d[e], 
                        d.isArc && (d[e] === "wa" || d[e] === "at")) p = d[e] === "wa" ? 1 : -1, m[e + 5] === m[e + 7] && (m[e + 7] -= p), 
                        m[e + 6] === m[e + 8] && (m[e + 8] -= p);
                        d = m.join(" ") || "x";
                        f.path = d;
                        if (l) for (e = l.length; e--; ) l[e].path = l[e].cutOff ? this.cutOffPath(d, l[e].cutOff) : d;
                        m = !0;
                    } else if (c === "visibility") {
                        if (l) for (e = l.length; e--; ) l[e].style[c] = d;
                        h === "DIV" && (d = d === "hidden" ? "-999em" : 0, eb || (g[c] = d ? "visible" : "hidden"), 
                        c = "top");
                        g[c] = d;
                        m = !0;
                    } else if (c === "zIndex") d && (g[c] = d), m = !0; else if (na(c, [ "x", "y", "width", "height" ]) !== -1) this[c] = d, 
                    c === "x" || c === "y" ? c = {
                        x: "left",
                        y: "top"
                    }[c] : d = u(0, d), this.updateClipping ? (this[c] = d, this.updateClipping()) : g[c] = d, 
                    m = !0; else if (c === "class" && h === "DIV") f.className = d; else if (c === "stroke") d = i.color(d, f, c), 
                    c = "strokecolor"; else if (c === "stroke-width" || c === "strokeWidth") f.stroked = d ? !0 : !1, 
                    c = "strokeweight", this[c] = d, pa(d) && (d += "px"); else if (c === "dashstyle") (f.getElementsByTagName("stroke")[0] || T(i.prepVML([ "<stroke/>" ]), null, null, f))[c] = d || "solid", 
                    this.dashstyle = d, m = !0; else if (c === "fill") if (h === "SPAN") g.color = d; else {
                        if (h !== "IMG") f.filled = d !== R ? !0 : !1, d = i.color(d, f, c, this), c = "fillcolor";
                    } else if (c === "opacity") m = !0; else if (h === "shape" && c === "rotation") this[c] = f.style[c] = d, 
                    f.style.left = -s(ba(d * Ua) + 1) + "px", f.style.top = s(V(d * Ua)) + "px"; else if (c === "translateX" || c === "translateY" || c === "rotation") this[c] = d, 
                    this.updateTransform(), m = !0; else if (c === "text") this.bBox = null, f.innerHTML = d, 
                    m = !0;
                    m || (eb ? f[c] = d : w(f, c, d));
                }
                return q;
            },
            clip: function(a) {
                var b = this, c;
                a ? (c = a.members, fa(c, b), c.push(b), b.destroyClip = function() {
                    fa(c, b);
                }, a = a.getCSS(b)) : (b.destroyClip && b.destroyClip(), a = {
                    clip: eb ? "inherit" : "rect(auto)"
                });
                return b.css(a);
            },
            css: va.prototype.htmlCss,
            safeRemoveChild: function(a) {
                a.parentNode && Ta(a);
            },
            destroy: function() {
                this.destroyClip && this.destroyClip();
                return va.prototype.destroy.apply(this);
            },
            on: function(a, b) {
                this.element["on" + a] = function() {
                    var a = E.event;
                    a.target = a.srcElement;
                    b(a);
                };
                return this;
            },
            cutOffPath: function(a, b) {
                var c, a = a.split(/[ ,]/);
                c = a.length;
                if (c === 9 || c === 11) a[c - 4] = a[c - 2] = A(a[c - 2]) - 10 * b;
                return a.join(" ");
            },
            shadow: function(a, b, c) {
                var d = [], e, f = this.element, g = this.renderer, h, i = f.style, j, k = f.path, l, m, o, q;
                k && typeof k.value !== "string" && (k = "x");
                m = k;
                if (a) {
                    o = p(a.width, 3);
                    q = (a.opacity || .15) / o;
                    for (e = 1; e <= 3; e++) {
                        l = o * 2 + 1 - 2 * e;
                        c && (m = this.cutOffPath(k.value, l + .5));
                        j = [ '<shape isShadow="true" strokeweight="', l, '" filled="false" path="', m, '" coordsize="10 10" style="', f.style.cssText, '" />' ];
                        h = T(g.prepVML(j), null, {
                            left: A(i.left) + p(a.offsetX, 1),
                            top: A(i.top) + p(a.offsetY, 1)
                        });
                        if (c) h.cutOff = l + 1;
                        j = [ '<stroke color="', a.color || "black", '" opacity="', q * e, '"/>' ];
                        T(g.prepVML(j), null, null, h);
                        b ? b.element.appendChild(h) : f.parentNode.insertBefore(h, f);
                        d.push(h);
                    }
                    this.shadows = d;
                }
                return this;
            }
        };
        K = ga(va, K);
        var la = {
            Element: K,
            isIE8: Da.indexOf("MSIE 8.0") > -1,
            init: function(a, b, c) {
                var d, e;
                this.alignedObjects = [];
                d = this.createElement(Ba);
                e = d.element;
                e.style.position = "relative";
                a.appendChild(d.element);
                this.isVML = !0;
                this.box = e;
                this.boxWrapper = d;
                this.setSize(b, c, !1);
                if (!z.namespaces.hcv) z.namespaces.add("hcv", "urn:schemas-microsoft-com:vml"), 
                z.createStyleSheet().cssText = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } ";
            },
            isHidden: function() {
                return !this.box.offsetWidth;
            },
            clipRect: function(a, b, c, d) {
                var e = this.createElement(), f = U(a);
                return r(e, {
                    members: [],
                    left: f ? a.x : a,
                    top: f ? a.y : b,
                    width: f ? a.width : c,
                    height: f ? a.height : d,
                    getCSS: function(a) {
                        var b = a.element, c = b.nodeName, a = a.inverted, d = this.top - (c === "shape" ? b.offsetTop : 0), e = this.left, b = e + this.width, f = d + this.height, d = {
                            clip: "rect(" + s(a ? e : d) + "px," + s(a ? f : b) + "px," + s(a ? b : f) + "px," + s(a ? d : e) + "px)"
                        };
                        !a && eb && c === "DIV" && r(d, {
                            width: b + "px",
                            height: f + "px"
                        });
                        return d;
                    },
                    updateClipping: function() {
                        n(e.members, function(a) {
                            a.css(e.getCSS(a));
                        });
                    }
                });
            },
            color: function(a, b, c, d) {
                var e = this, f, g = /^rgba/, h, i, j = R;
                a && a.linearGradient ? i = "gradient" : a && a.radialGradient && (i = "pattern");
                if (i) {
                    var k, l, m = a.linearGradient || a.radialGradient, o, q, p, D, F, u = "", a = a.stops, t, s = [], v = function() {
                        h = [ '<fill colors="' + s.join(",") + '" opacity="', p, '" o:opacity2="', q, '" type="', i, '" ', u, 'focus="100%" method="any" />' ];
                        T(e.prepVML(h), null, null, b);
                    };
                    o = a[0];
                    t = a[a.length - 1];
                    o[0] > 0 && a.unshift([ 0, o[1] ]);
                    t[0] < 1 && a.push([ 1, t[1] ]);
                    n(a, function(a, b) {
                        g.test(a[1]) ? (f = oa(a[1]), k = f.get("rgb"), l = f.get("a")) : (k = a[1], l = 1);
                        s.push(a[0] * 100 + "% " + k);
                        b ? (p = l, D = k) : (q = l, F = k);
                    });
                    if (c === "fill") if (i === "gradient") c = m.x1 || m[0] || 0, a = m.y1 || m[1] || 0, 
                    o = m.x2 || m[2] || 0, m = m.y2 || m[3] || 0, u = 'angle="' + (90 - N.atan((m - a) / (o - c)) * 180 / Ma) + '"', 
                    v(); else {
                        var j = m.r, r = j * 2, G = j * 2, H = m.cx, B = m.cy, x = b.radialReference, w, j = function() {
                            x && (w = d.getBBox(), H += (x[0] - w.x) / w.width - .5, B += (x[1] - w.y) / w.height - .5, 
                            r *= x[2] / w.width, G *= x[2] / w.height);
                            u = 'src="' + O.global.VMLRadialGradientURL + '" size="' + r + "," + G + '" origin="0.5,0.5" position="' + H + "," + B + '" color2="' + F + '" ';
                            v();
                        };
                        d.added ? j() : J(d, "add", j);
                        j = D;
                    } else j = k;
                } else if (g.test(a) && b.tagName !== "IMG") f = oa(a), h = [ "<", c, ' opacity="', f.get("a"), '"/>' ], 
                T(this.prepVML(h), null, null, b), j = f.get("rgb"); else {
                    j = b.getElementsByTagName(c);
                    if (j.length) j[0].opacity = 1, j[0].type = "solid";
                    j = a;
                }
                return j;
            },
            prepVML: function(a) {
                var b = this.isIE8, a = a.join("");
                b ? (a = a.replace("/>", ' xmlns="urn:schemas-microsoft-com:vml" />'), a = a.indexOf('style="') === -1 ? a.replace("/>", ' style="display:inline-block;behavior:url(#default#VML);" />') : a.replace('style="', 'style="display:inline-block;behavior:url(#default#VML);')) : a = a.replace("<", "<hcv:");
                return a;
            },
            text: Fa.prototype.html,
            path: function(a) {
                var b = {
                    coordsize: "10 10"
                };
                Ha(a) ? b.d = a : U(a) && r(b, a);
                return this.createElement("shape").attr(b);
            },
            circle: function(a, b, c) {
                var d = this.symbol("circle");
                if (U(a)) c = a.r, b = a.y, a = a.x;
                d.isCircle = !0;
                return d.attr({
                    x: a,
                    y: b,
                    width: 2 * c,
                    height: 2 * c
                });
            },
            g: function(a) {
                var b;
                a && (b = {
                    className: "highcharts-" + a,
                    "class": "highcharts-" + a
                });
                return this.createElement(Ba).attr(b);
            },
            image: function(a, b, c, d, e) {
                var f = this.createElement("img").attr({
                    src: a
                });
                arguments.length > 1 && f.attr({
                    x: b,
                    y: c,
                    width: d,
                    height: e
                });
                return f;
            },
            rect: function(a, b, c, d, e, f) {
                if (U(a)) b = a.y, c = a.width, d = a.height, f = a.strokeWidth, a = a.x;
                var g = this.symbol("rect");
                g.r = e;
                return g.attr(g.crisp(f, a, b, u(c, 0), u(d, 0)));
            },
            invertChild: function(a, b) {
                var c = b.style;
                M(a, {
                    flip: "x",
                    left: A(c.width) - 1,
                    top: A(c.height) - 1,
                    rotation: -90
                });
            },
            symbols: {
                arc: function(a, b, c, d, e) {
                    var f = e.start, g = e.end, h = e.r || c || d, c = e.innerR, d = V(f), i = ba(f), j = V(g), k = ba(g);
                    if (g - f === 0) return [ "x" ];
                    f = [ "wa", a - h, b - h, a + h, b + h, a + h * d, b + h * i, a + h * j, b + h * k ];
                    e.open && !c && f.push("e", "M", a, b);
                    f.push("at", a - c, b - c, a + c, b + c, a + c * j, b + c * k, a + c * d, b + c * i, "x", "e");
                    f.isArc = !0;
                    return f;
                },
                circle: function(a, b, c, d, e) {
                    e && e.isCircle && (a -= c / 2, b -= d / 2);
                    return [ "wa", a, b, a + c, b + d, a + c, b + d / 2, a + c, b + d / 2, "e" ];
                },
                rect: function(a, b, c, d, e) {
                    var f = a + c, g = b + d, h;
                    !t(e) || !e.r ? f = Fa.prototype.symbols.square.apply(0, arguments) : (h = I(e.r, c, d), 
                    f = [ "M", a + h, b, "L", f - h, b, "wa", f - 2 * h, b, f, b + 2 * h, f - h, b, f, b + h, "L", f, g - h, "wa", f - 2 * h, g - 2 * h, f, g, f, g - h, f - h, g, "L", a + h, g, "wa", a, g - 2 * h, a + 2 * h, g, a + h, g, a, g - h, "L", a, b + h, "wa", a, b, a + 2 * h, b + 2 * h, a, b + h, a + h, b, "x", "e" ]);
                    return f;
                }
            }
        };
        Highcharts.VMLRenderer = K = function() {
            this.init.apply(this, arguments);
        };
        K.prototype = x(Fa.prototype, la);
        Va = K;
    }
    var Ub;
    if (Z) Highcharts.CanVGRenderer = K = function() {
        wa = "http://www.w3.org/1999/xhtml";
    }, K.prototype.symbols = {}, Ub = function() {
        function a() {
            var a = b.length, d;
            for (d = 0; d < a; d++) b[d]();
            b = [];
        }
        var b = [];
        return {
            push: function(c, d) {
                b.length === 0 && Wb(d, a);
                b.push(c);
            }
        };
    }(), Va = K;
    La.prototype = {
        addLabel: function() {
            var a = this.axis, b = a.options, c = a.chart, d = a.horiz, e = a.categories, f = a.series[0] && a.series[0].names, g = this.pos, h = b.labels, i = a.tickPositions, d = d && e && !h.step && !h.staggerLines && !h.rotation && c.plotWidth / i.length || !d && (c.optionsMarginLeft || c.chartWidth * .33), j = g === i[0], k = g === i[i.length - 1], f = e ? p(e[g], f && f[g], g) : g, e = this.label, i = i.info, l;
            a.isDatetimeAxis && i && (l = b.dateTimeLabelFormats[i.higherRanks[g] || i.unitName]);
            this.isFirst = j;
            this.isLast = k;
            b = a.labelFormatter.call({
                axis: a,
                chart: c,
                isFirst: j,
                isLast: k,
                dateTimeLabelFormat: l,
                value: a.isLog ? ia(ea(f)) : f
            });
            g = d && {
                width: u(1, s(d - 2 * (h.padding || 10))) + "px"
            };
            g = r(g, h.style);
            if (t(e)) e && e.attr({
                text: b
            }).css(g); else {
                d = {
                    align: a.labelAlign
                };
                if (pa(h.rotation)) d.rotation = h.rotation;
                this.label = t(b) && h.enabled ? c.renderer.text(b, 0, 0, h.useHTML).attr(d).css(g).add(a.labelGroup) : null;
            }
        },
        getLabelSize: function() {
            var a = this.label, b = this.axis;
            return a ? (this.labelBBox = a.getBBox())[b.horiz ? "height" : "width"] : 0;
        },
        getLabelSides: function() {
            var a = this.axis, b = this.labelBBox.width, a = b * {
                left: 0,
                center: .5,
                right: 1
            }[a.labelAlign] - a.options.labels.x;
            return [ -a, b - a ];
        },
        handleOverflow: function(a, b) {
            var c = !0, d = this.axis, e = d.chart, f = this.isFirst, g = this.isLast, h = b.x, i = d.reversed, j = d.tickPositions;
            if (f || g) {
                var k = this.getLabelSides(), l = k[0], k = k[1], e = e.plotLeft, m = e + d.len, j = (d = d.ticks[j[a + (f ? 1 : -1)]]) && d.label.xy && d.label.xy.x + d.getLabelSides()[f ? 0 : 1];
                f && !i || g && i ? h + l < e && (h = e - l, d && h + k > j && (c = !1)) : h + k > m && (h = m - k, 
                d && h + l < j && (c = !1));
                b.x = h;
            }
            return c;
        },
        getPosition: function(a, b, c, d) {
            var e = this.axis, f = e.chart, g = d && f.oldChartHeight || f.chartHeight;
            return {
                x: a ? e.translate(b + c, null, null, d) + e.transB : e.left + e.offset + (e.opposite ? (d && f.oldChartWidth || f.chartWidth) - e.right - e.left : 0),
                y: a ? g - e.bottom + e.offset - (e.opposite ? e.height : 0) : g - e.translate(b + c, null, null, d) - e.transB
            };
        },
        getLabelPosition: function(a, b, c, d, e, f, g, h) {
            var i = this.axis, j = i.transA, k = i.reversed, l = i.staggerLines, m = i.chart.renderer.fontMetrics(e.style.fontSize).b, o = e.rotation, a = a + e.x - (f && d ? f * j * (k ? -1 : 1) : 0), b = b + e.y - (f && !d ? f * j * (k ? 1 : -1) : 0);
            o && i.side === 2 && (b -= m - m * V(o * Ua));
            !t(e.y) && !o && (b += m - c.getBBox().height / 2);
            l && (b += g / (h || 1) % l * (i.labelOffset / l));
            return {
                x: a,
                y: b
            };
        },
        getMarkPath: function(a, b, c, d, e, f) {
            return f.crispLine([ "M", a, b, "L", a + (e ? 0 : -c), b + (e ? c : 0) ], d);
        },
        render: function(a, b, c) {
            var d = this.axis, e = d.options, f = d.chart.renderer, g = d.horiz, h = this.type, i = this.label, j = this.pos, k = e.labels, l = this.gridLine, m = h ? h + "Grid" : "grid", o = h ? h + "Tick" : "tick", q = e[m + "LineWidth"], n = e[m + "LineColor"], D = e[m + "LineDashStyle"], F = e[o + "Length"], m = e[o + "Width"] || 0, u = e[o + "Color"], t = e[o + "Position"], o = this.mark, s = k.step, r = !0, w = d.tickmarkOffset, G = this.getPosition(g, j, w, b), H = G.x, G = G.y, B = g && H === d.pos || !g && G === d.pos + d.len ? -1 : 1, x = d.staggerLines;
            this.isActive = !0;
            if (q) {
                j = d.getPlotLinePath(j + w, q * B, b, !0);
                if (l === v) {
                    l = {
                        stroke: n,
                        "stroke-width": q
                    };
                    if (D) l.dashstyle = D;
                    if (!h) l.zIndex = 1;
                    if (b) l.opacity = 0;
                    this.gridLine = l = q ? f.path(j).attr(l).add(d.gridGroup) : null;
                }
                if (!b && l && j) l[this.isNew ? "attr" : "animate"]({
                    d: j,
                    opacity: c
                });
            }
            if (m && F) t === "inside" && (F = -F), d.opposite && (F = -F), b = this.getMarkPath(H, G, F, m * B, g, f), 
            o ? o.animate({
                d: b,
                opacity: c
            }) : this.mark = f.path(b).attr({
                stroke: u,
                "stroke-width": m,
                opacity: c
            }).add(d.axisGroup);
            if (i && !isNaN(H)) i.xy = G = this.getLabelPosition(H, G, i, g, k, w, a, s), this.isFirst && !p(e.showFirstLabel, 1) || this.isLast && !p(e.showLastLabel, 1) ? r = !1 : !x && g && k.overflow === "justify" && !this.handleOverflow(a, G) && (r = !1), 
            s && a % s && (r = !1), r && !isNaN(G.y) ? (G.opacity = c, i[this.isNew ? "attr" : "animate"](G), 
            this.isNew = !1) : i.attr("y", -9999);
        },
        destroy: function() {
            Ja(this, this.axis);
        }
    };
    tb.prototype = {
        render: function() {
            var a = this, b = a.axis, c = b.horiz, d = (b.pointRange || 0) / 2, e = a.options, f = e.label, g = a.label, h = e.width, i = e.to, j = e.from, k = t(j) && t(i), l = e.value, m = e.dashStyle, o = a.svgElem, q = [], n, D = e.color, F = e.zIndex, s = e.events, r = b.chart.renderer;
            b.isLog && (j = ma(j), i = ma(i), l = ma(l));
            if (h) {
                if (q = b.getPlotLinePath(l, h), d = {
                    stroke: D,
                    "stroke-width": h
                }, m) d.dashstyle = m;
            } else if (k) {
                if (j = u(j, b.min - d), i = I(i, b.max + d), q = b.getPlotBandPath(j, i, e), d = {
                    fill: D
                }, e.borderWidth) d.stroke = e.borderColor, d["stroke-width"] = e.borderWidth;
            } else return;
            if (t(F)) d.zIndex = F;
            if (o) q ? o.animate({
                d: q
            }, null, o.onGetPath) : (o.hide(), o.onGetPath = function() {
                o.show();
            }); else if (q && q.length && (a.svgElem = o = r.path(q).attr(d).add(), s)) for (n in e = function(b) {
                o.on(b, function(c) {
                    s[b].apply(a, [ c ]);
                });
            }, s) e(n);
            if (f && t(f.text) && q && q.length && b.width > 0 && b.height > 0) {
                f = x({
                    align: c && k && "center",
                    x: c ? !k && 4 : 10,
                    verticalAlign: !c && k && "middle",
                    y: c ? k ? 16 : 10 : k ? 6 : -4,
                    rotation: c && !k && 90
                }, f);
                if (!g) a.label = g = r.text(f.text, 0, 0, f.useHTML).attr({
                    align: f.textAlign || f.align,
                    rotation: f.rotation,
                    zIndex: F
                }).css(f.style).add();
                b = [ q[1], q[4], p(q[6], q[1]) ];
                q = [ q[2], q[5], p(q[7], q[2]) ];
                c = Ia(b);
                k = Ia(q);
                g.align(f, !1, {
                    x: c,
                    y: k,
                    width: ta(b) - c,
                    height: ta(q) - k
                });
                g.show();
            } else g && g.hide();
            return a;
        },
        destroy: function() {
            fa(this.axis.plotLinesAndBands, this);
            delete this.axis;
            Ja(this);
        }
    };
    Mb.prototype = {
        destroy: function() {
            Ja(this, this.axis);
        },
        setTotal: function(a) {
            this.cum = this.total = a;
        },
        addValue: function(a) {
            this.setTotal(ia(this.total + a));
        },
        render: function(a) {
            var b = this.options, c = b.format, c = c ? Aa(c, this) : b.formatter.call(this);
            this.label ? this.label.attr({
                text: c,
                visibility: "hidden"
            }) : this.label = this.axis.chart.renderer.text(c, 0, 0, b.useHTML).css(b.style).attr({
                align: this.textAlign,
                rotation: b.rotation,
                visibility: "hidden"
            }).add(a);
        },
        cacheExtremes: function(a, b) {
            this.points[a.index] = b;
        },
        setOffset: function(a, b) {
            var c = this.axis, d = c.chart, e = d.inverted, f = this.isNegative, g = c.translate(this.percent ? 100 : this.total, 0, 0, 0, 1), c = c.translate(0), c = P(g - c), h = d.xAxis[0].translate(this.x) + a, i = d.plotHeight, f = {
                x: e ? f ? g : g - c : h,
                y: e ? i - h - b : f ? i - g - c : i - g,
                width: e ? c : b,
                height: e ? b : c
            };
            if (e = this.label) e.align(this.alignOptions, null, f), f = e.alignAttr, e.attr({
                visibility: this.options.crop === !1 || d.isInsidePlot(f.x, f.y) ? Y ? "inherit" : "visible" : "hidden"
            });
        }
    };
    db.prototype = {
        defaultOptions: {
            dateTimeLabelFormats: {
                millisecond: "%H:%M:%S.%L",
                second: "%H:%M:%S",
                minute: "%H:%M",
                hour: "%H:%M",
                day: "%e. %b",
                week: "%e. %b",
                month: "%b '%y",
                year: "%Y"
            },
            endOnTick: !1,
            gridLineColor: "#C0C0C0",
            labels: L,
            lineColor: "#C0D0E0",
            lineWidth: 1,
            minPadding: .01,
            maxPadding: .01,
            minorGridLineColor: "#E0E0E0",
            minorGridLineWidth: 1,
            minorTickColor: "#A0A0A0",
            minorTickLength: 2,
            minorTickPosition: "outside",
            startOfWeek: 1,
            startOnTick: !1,
            tickColor: "#C0D0E0",
            tickLength: 5,
            tickmarkPlacement: "between",
            tickPixelInterval: 100,
            tickPosition: "outside",
            tickWidth: 1,
            title: {
                align: "middle",
                style: {
                    color: "#4d759e",
                    fontWeight: "bold"
                }
            },
            type: "linear"
        },
        defaultYAxisOptions: {
            endOnTick: !0,
            gridLineWidth: 1,
            tickPixelInterval: 72,
            showLastLabel: !0,
            labels: {
                x: -8,
                y: 3
            },
            lineWidth: 0,
            maxPadding: .05,
            minPadding: .05,
            startOnTick: !0,
            tickWidth: 0,
            title: {
                rotation: 270,
                text: "Values"
            },
            stackLabels: {
                enabled: !1,
                formatter: function() {
                    return ya(this.total, -1);
                },
                style: L.style
            }
        },
        defaultLeftAxisOptions: {
            labels: {
                x: -8,
                y: null
            },
            title: {
                rotation: 270
            }
        },
        defaultRightAxisOptions: {
            labels: {
                x: 8,
                y: null
            },
            title: {
                rotation: 90
            }
        },
        defaultBottomAxisOptions: {
            labels: {
                x: 0,
                y: 14
            },
            title: {
                rotation: 0
            }
        },
        defaultTopAxisOptions: {
            labels: {
                x: 0,
                y: -5
            },
            title: {
                rotation: 0
            }
        },
        init: function(a, b) {
            var c = b.isX;
            this.horiz = a.inverted ? !c : c;
            this.xOrY = (this.isXAxis = c) ? "x" : "y";
            this.opposite = b.opposite;
            this.side = this.horiz ? this.opposite ? 0 : 2 : this.opposite ? 1 : 3;
            this.setOptions(b);
            var d = this.options, e = d.type;
            this.labelFormatter = d.labels.formatter || this.defaultLabelFormatter;
            this.userOptions = b;
            this.minPixelPadding = 0;
            this.chart = a;
            this.reversed = d.reversed;
            this.zoomEnabled = d.zoomEnabled !== !1;
            this.categories = d.categories || e === "category";
            this.isLog = e === "logarithmic";
            this.isDatetimeAxis = e === "datetime";
            this.isLinked = t(d.linkedTo);
            this.tickmarkOffset = this.categories && d.tickmarkPlacement === "between" ? .5 : 0;
            this.ticks = {};
            this.minorTicks = {};
            this.plotLinesAndBands = [];
            this.alternateBands = {};
            this.len = 0;
            this.minRange = this.userMinRange = d.minRange || d.maxZoom;
            this.range = d.range;
            this.offset = d.offset || 0;
            this.stacks = {};
            this.oldStacks = {};
            this.stacksMax = {};
            this._stacksTouched = 0;
            this.min = this.max = null;
            var f, d = this.options.events;
            na(this, a.axes) === -1 && (a.axes.push(this), a[c ? "xAxis" : "yAxis"].push(this));
            this.series = this.series || [];
            if (a.inverted && c && this.reversed === v) this.reversed = !0;
            this.removePlotLine = this.removePlotBand = this.removePlotBandOrLine;
            for (f in d) J(this, f, d[f]);
            if (this.isLog) this.val2lin = ma, this.lin2val = ea;
        },
        setOptions: function(a) {
            this.options = x(this.defaultOptions, this.isXAxis ? {} : this.defaultYAxisOptions, [ this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions ][this.side], x(O[this.isXAxis ? "xAxis" : "yAxis"], a));
        },
        update: function(a, b) {
            var c = this.chart, a = c.options[this.xOrY + "Axis"][this.options.index] = x(this.userOptions, a);
            this.destroy(!0);
            this._addedPlotLB = !1;
            this.init(c, r(a, {
                events: v
            }));
            c.isDirtyBox = !0;
            p(b, !0) && c.redraw();
        },
        remove: function(a) {
            var b = this.chart, c = this.xOrY + "Axis";
            n(this.series, function(a) {
                a.remove(!1);
            });
            fa(b.axes, this);
            fa(b[c], this);
            b.options[c].splice(this.options.index, 1);
            n(b[c], function(a, b) {
                a.options.index = b;
            });
            this.destroy();
            b.isDirtyBox = !0;
            p(a, !0) && b.redraw();
        },
        defaultLabelFormatter: function() {
            var a = this.axis, b = this.value, c = a.categories, d = this.dateTimeLabelFormat, e = O.lang.numericSymbols, f = e && e.length, g, h = a.options.labels.format, a = a.isLog ? b : a.tickInterval;
            if (h) g = Aa(h, this); else if (c) g = b; else if (d) g = Xa(d, b); else if (f && a >= 1e3) for (;f-- && g === v; ) c = Math.pow(1e3, f + 1), 
            a >= c && e[f] !== null && (g = ya(b / c, -1) + e[f]);
            g === v && (g = b >= 1e3 ? ya(b, 0) : ya(b, -1));
            return g;
        },
        getSeriesExtremes: function() {
            var a = this, b = a.chart;
            a.hasVisibleSeries = !1;
            a.dataMin = a.dataMax = null;
            a.stacksMax = {};
            a.buildStacks();
            n(a.series, function(c) {
                if (c.visible || !b.options.chart.ignoreHiddenSeries) {
                    var d = c.options, e;
                    e = d.threshold;
                    a.hasVisibleSeries = !0;
                    a.isLog && e <= 0 && (e = null);
                    if (a.isXAxis) {
                        if (e = c.xData, e.length) a.dataMin = I(p(a.dataMin, e[0]), Ia(e)), a.dataMax = u(p(a.dataMax, e[0]), ta(e));
                    } else {
                        d = d.stacking;
                        a.usePercentage = d === "percent";
                        if (a.usePercentage) a.dataMin = 0, a.dataMax = 99;
                        c.getExtremes();
                        d = c.dataMax;
                        c = c.dataMin;
                        if (!a.usePercentage && t(c) && t(d)) a.dataMin = I(p(a.dataMin, c), c), a.dataMax = u(p(a.dataMax, d), d);
                        if (t(e)) if (a.dataMin >= e) a.dataMin = e, a.ignoreMinPadding = !0; else if (a.dataMax < e) a.dataMax = e, 
                        a.ignoreMaxPadding = !0;
                    }
                }
            });
        },
        translate: function(a, b, c, d, e, f) {
            var g = this.len, h = 1, i = 0, j = d ? this.oldTransA : this.transA, d = d ? this.oldMin : this.min, k = this.minPixelPadding, e = (this.options.ordinal || this.isLog && e) && this.lin2val;
            if (!j) j = this.transA;
            c && (h *= -1, i = g);
            this.reversed && (h *= -1, i -= h * g);
            b ? (a = a * h + i, a -= k, a = a / j + d, e && (a = this.lin2val(a))) : (e && (a = this.val2lin(a)), 
            f === "between" && (f = .5), a = h * (a - d) * j + i + h * k + (pa(f) ? j * f * this.pointRange : 0));
            return a;
        },
        toPixels: function(a, b) {
            return this.translate(a, !1, !this.horiz, null, !0) + (b ? 0 : this.pos);
        },
        toValue: function(a, b) {
            return this.translate(a - (b ? 0 : this.pos), !0, !this.horiz, null, !0);
        },
        getPlotLinePath: function(a, b, c, d) {
            var e = this.chart, f = this.left, g = this.top, h, i, j, a = this.translate(a, null, null, c), k = c && e.oldChartHeight || e.chartHeight, l = c && e.oldChartWidth || e.chartWidth, m;
            h = this.transB;
            c = i = s(a + h);
            h = j = s(k - a - h);
            if (isNaN(a)) m = !0; else if (this.horiz) {
                if (h = g, j = k - this.bottom, c < f || c > f + this.width) m = !0;
            } else if (c = f, i = l - this.right, h < g || h > g + this.height) m = !0;
            return m && !d ? null : e.renderer.crispLine([ "M", c, h, "L", i, j ], b || 0);
        },
        getPlotBandPath: function(a, b) {
            var c = this.getPlotLinePath(b), d = this.getPlotLinePath(a);
            d && c ? d.push(c[4], c[5], c[1], c[2]) : d = null;
            return d;
        },
        getLinearTickPositions: function(a, b, c) {
            for (var d, b = ia(S(b / a) * a), c = ia(ja(c / a) * a), e = []; b <= c; ) {
                e.push(b);
                b = ia(b + a);
                if (b === d) break;
                d = b;
            }
            return e;
        },
        getLogTickPositions: function(a, b, c, d) {
            var e = this.options, f = this.len, g = [];
            if (!d) this._minorAutoInterval = null;
            if (a >= .5) a = s(a), g = this.getLinearTickPositions(a, b, c); else if (a >= .08) for (var f = S(b), h, i, j, k, l, e = a > .3 ? [ 1, 2, 4 ] : a > .15 ? [ 1, 2, 4, 6, 8 ] : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]; f < c + 1 && !l; f++) {
                i = e.length;
                for (h = 0; h < i && !l; h++) j = ma(ea(f) * e[h]), j > b && (!d || k <= c) && g.push(k), 
                k > c && (l = !0), k = j;
            } else if (b = ea(b), c = ea(c), a = e[d ? "minorTickInterval" : "tickInterval"], 
            a = p(a === "auto" ? null : a, this._minorAutoInterval, (c - b) * (e.tickPixelInterval / (d ? 5 : 1)) / ((d ? f / this.tickPositions.length : f) || 1)), 
            a = mb(a, null, lb(a)), g = Na(this.getLinearTickPositions(a, b, c), ma), !d) this._minorAutoInterval = a / 5;
            if (!d) this.tickInterval = a;
            return g;
        },
        getMinorTickPositions: function() {
            var a = this.options, b = this.tickPositions, c = this.minorTickInterval, d = [], e;
            if (this.isLog) {
                e = b.length;
                for (a = 1; a < e; a++) d = d.concat(this.getLogTickPositions(c, b[a - 1], b[a], !0));
            } else if (this.isDatetimeAxis && a.minorTickInterval === "auto") d = d.concat(Eb(Cb(c), this.min, this.max, a.startOfWeek)), 
            d[0] < this.min && d.shift(); else for (b = this.min + (b[0] - this.min) % c; b <= this.max; b += c) d.push(b);
            return d;
        },
        adjustForMinRange: function() {
            var a = this.options, b = this.min, c = this.max, d, e = this.dataMax - this.dataMin >= this.minRange, f, g, h, i, j;
            if (this.isXAxis && this.minRange === v && !this.isLog) t(a.min) || t(a.max) ? this.minRange = null : (n(this.series, function(a) {
                i = a.xData;
                for (g = j = a.xIncrement ? 1 : i.length - 1; g > 0; g--) if (h = i[g] - i[g - 1], 
                f === v || h < f) f = h;
            }), this.minRange = I(f * 5, this.dataMax - this.dataMin));
            if (c - b < this.minRange) {
                var k = this.minRange;
                d = (k - c + b) / 2;
                d = [ b - d, p(a.min, b - d) ];
                if (e) d[2] = this.dataMin;
                b = ta(d);
                c = [ b + k, p(a.max, b + k) ];
                if (e) c[2] = this.dataMax;
                c = Ia(c);
                c - b < k && (d[0] = c - k, d[1] = p(a.min, c - k), b = ta(d));
            }
            this.min = b;
            this.max = c;
        },
        setAxisTranslation: function(a) {
            var b = this.max - this.min, c = 0, d, e = 0, f = 0, g = this.linkedParent, h = this.transA;
            if (this.isXAxis) g ? (e = g.minPointOffset, f = g.pointRangePadding) : n(this.series, function(a) {
                var g = a.pointRange, h = a.options.pointPlacement, l = a.closestPointRange;
                g > b && (g = 0);
                c = u(c, g);
                e = u(e, da(h) ? 0 : g / 2);
                f = u(f, h === "on" ? 0 : g);
                !a.noSharedTooltip && t(l) && (d = t(d) ? I(d, l) : l);
            }), g = this.ordinalSlope && d ? this.ordinalSlope / d : 1, this.minPointOffset = e *= g, 
            this.pointRangePadding = f *= g, this.pointRange = I(c, b), this.closestPointRange = d;
            if (a) this.oldTransA = h;
            this.translationSlope = this.transA = h = this.len / (b + f || 1);
            this.transB = this.horiz ? this.left : this.bottom;
            this.minPixelPadding = h * e;
        },
        setTickPositions: function(a) {
            var b = this, c = b.chart, d = b.options, e = b.isLog, f = b.isDatetimeAxis, g = b.isXAxis, h = b.isLinked, i = b.options.tickPositioner, j = d.maxPadding, k = d.minPadding, l = d.tickInterval, m = d.minTickInterval, o = d.tickPixelInterval, q = b.categories;
            h ? (b.linkedParent = c[g ? "xAxis" : "yAxis"][d.linkedTo], c = b.linkedParent.getExtremes(), 
            b.min = p(c.min, c.dataMin), b.max = p(c.max, c.dataMax), d.type !== b.linkedParent.options.type && ua(11, 1)) : (b.min = p(b.userMin, d.min, b.dataMin), 
            b.max = p(b.userMax, d.max, b.dataMax));
            if (e) !a && I(b.min, p(b.dataMin, b.min)) <= 0 && ua(10, 1), b.min = ia(ma(b.min)), 
            b.max = ia(ma(b.max));
            if (b.range && (b.userMin = b.min = u(b.min, b.max - b.range), b.userMax = b.max, 
            a)) b.range = null;
            b.beforePadding && b.beforePadding();
            b.adjustForMinRange();
            if (!q && !b.usePercentage && !h && t(b.min) && t(b.max) && (c = b.max - b.min)) {
                if (!t(d.min) && !t(b.userMin) && k && (b.dataMin < 0 || !b.ignoreMinPadding)) b.min -= c * k;
                if (!t(d.max) && !t(b.userMax) && j && (b.dataMax > 0 || !b.ignoreMaxPadding)) b.max += c * j;
            }
            b.tickInterval = b.min === b.max || b.min === void 0 || b.max === void 0 ? 1 : h && !l && o === b.linkedParent.options.tickPixelInterval ? b.linkedParent.tickInterval : p(l, q ? 1 : (b.max - b.min) * o / (b.len || 1));
            g && !a && n(b.series, function(a) {
                a.processData(b.min !== b.oldMin || b.max !== b.oldMax);
            });
            b.setAxisTranslation(!0);
            b.beforeSetTickPositions && b.beforeSetTickPositions();
            if (b.postProcessTickInterval) b.tickInterval = b.postProcessTickInterval(b.tickInterval);
            if (b.pointRange) b.tickInterval = u(b.pointRange, b.tickInterval);
            if (!l && b.tickInterval < m) b.tickInterval = m;
            if (!f && !e && !l) b.tickInterval = mb(b.tickInterval, null, lb(b.tickInterval), d);
            b.minorTickInterval = d.minorTickInterval === "auto" && b.tickInterval ? b.tickInterval / 5 : d.minorTickInterval;
            b.tickPositions = a = d.tickPositions ? [].concat(d.tickPositions) : i && i.apply(b, [ b.min, b.max ]);
            if (!a) a = f ? (b.getNonLinearTimeTicks || Eb)(Cb(b.tickInterval, d.units), b.min, b.max, d.startOfWeek, b.ordinalPositions, b.closestPointRange, !0) : e ? b.getLogTickPositions(b.tickInterval, b.min, b.max) : b.getLinearTickPositions(b.tickInterval, b.min, b.max), 
            b.tickPositions = a;
            if (!h) e = a[0], f = a[a.length - 1], h = b.minPointOffset || 0, d.startOnTick ? b.min = e : b.min - h > e && a.shift(), 
            d.endOnTick ? b.max = f : b.max + h < f && a.pop(), a.length === 1 && (b.min -= .001, 
            b.max += .001);
        },
        setMaxTicks: function() {
            var a = this.chart, b = a.maxTicks || {}, c = this.tickPositions, d = this._maxTicksKey = [ this.xOrY, this.pos, this.len ].join("-");
            if (!this.isLinked && !this.isDatetimeAxis && c && c.length > (b[d] || 0) && this.options.alignTicks !== !1) b[d] = c.length;
            a.maxTicks = b;
        },
        adjustTickAmount: function() {
            var a = this._maxTicksKey, b = this.tickPositions, c = this.chart.maxTicks;
            if (c && c[a] && !this.isDatetimeAxis && !this.categories && !this.isLinked && this.options.alignTicks !== !1) {
                var d = this.tickAmount, e = b.length;
                this.tickAmount = a = c[a];
                if (e < a) {
                    for (;b.length < a; ) b.push(ia(b[b.length - 1] + this.tickInterval));
                    this.transA *= (e - 1) / (a - 1);
                    this.max = b[b.length - 1];
                }
                if (t(d) && a !== d) this.isDirty = !0;
            }
        },
        setScale: function() {
            var a = this.stacks, b, c, d, e;
            this.oldMin = this.min;
            this.oldMax = this.max;
            this.oldAxisLength = this.len;
            this.setAxisSize();
            e = this.len !== this.oldAxisLength;
            n(this.series, function(a) {
                if (a.isDirtyData || a.isDirty || a.xAxis.isDirty) d = !0;
            });
            if (e || d || this.isLinked || this.forceRedraw || this.userMin !== this.oldUserMin || this.userMax !== this.oldUserMax) {
                if (!this.isXAxis) for (b in a) for (c in a[b]) a[b][c].total = null;
                this.forceRedraw = !1;
                this.getSeriesExtremes();
                this.setTickPositions();
                this.oldUserMin = this.userMin;
                this.oldUserMax = this.userMax;
                if (!this.isDirty) this.isDirty = e || this.min !== this.oldMin || this.max !== this.oldMax;
            } else if (!this.isXAxis) {
                if (this.oldStacks) a = this.stacks = this.oldStacks;
                for (b in a) for (c in a[b]) a[b][c].cum = a[b][c].total;
            }
            this.setMaxTicks();
        },
        setExtremes: function(a, b, c, d, e) {
            var f = this, g = f.chart, c = p(c, !0), e = r(e, {
                min: a,
                max: b
            });
            C(f, "setExtremes", e, function() {
                f.userMin = a;
                f.userMax = b;
                f.isDirtyExtremes = !0;
                c && g.redraw(d);
            });
        },
        zoom: function(a, b) {
            this.allowZoomOutside || (t(this.dataMin) && a <= this.dataMin && (a = v), t(this.dataMax) && b >= this.dataMax && (b = v));
            this.displayBtn = a !== v || b !== v;
            this.setExtremes(a, b, !1, v, {
                trigger: "zoom"
            });
            return !0;
        },
        setAxisSize: function() {
            var a = this.chart, b = this.options, c = b.offsetLeft || 0, d = b.offsetRight || 0, e = this.horiz, f, g;
            this.left = g = p(b.left, a.plotLeft + c);
            this.top = f = p(b.top, a.plotTop);
            this.width = c = p(b.width, a.plotWidth - c + d);
            this.height = b = p(b.height, a.plotHeight);
            this.bottom = a.chartHeight - b - f;
            this.right = a.chartWidth - c - g;
            this.len = u(e ? c : b, 0);
            this.pos = e ? g : f;
        },
        getExtremes: function() {
            var a = this.isLog;
            return {
                min: a ? ia(ea(this.min)) : this.min,
                max: a ? ia(ea(this.max)) : this.max,
                dataMin: this.dataMin,
                dataMax: this.dataMax,
                userMin: this.userMin,
                userMax: this.userMax
            };
        },
        getThreshold: function(a) {
            var b = this.isLog, c = b ? ea(this.min) : this.min, b = b ? ea(this.max) : this.max;
            c > a || a === null ? a = c : b < a && (a = b);
            return this.translate(a, 0, 1, 0, 1);
        },
        addPlotBand: function(a) {
            this.addPlotBandOrLine(a, "plotBands");
        },
        addPlotLine: function(a) {
            this.addPlotBandOrLine(a, "plotLines");
        },
        addPlotBandOrLine: function(a, b) {
            var c = new tb(this, a).render(), d = this.userOptions;
            b && (d[b] = d[b] || [], d[b].push(a));
            this.plotLinesAndBands.push(c);
            return c;
        },
        autoLabelAlign: function(a) {
            a = (p(a, 0) - this.side * 90 + 720) % 360;
            return a > 15 && a < 165 ? "right" : a > 195 && a < 345 ? "left" : "center";
        },
        getOffset: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.options, e = a.tickPositions, f = a.ticks, g = a.horiz, h = a.side, i = b.inverted ? [ 1, 0, 3, 2 ][h] : h, j, k = 0, l, m = 0, o = d.title, q = d.labels, ka = 0, D = b.axisOffset, F = b.clipOffset, s = [ -1, 1, 1, -1 ][h], r, w = 1, x = p(q.maxStaggerLines, 5), Ga, G, H, B;
            a.hasData = j = a.hasVisibleSeries || t(a.min) && t(a.max) && !!e;
            a.showAxis = b = j || p(d.showEmpty, !0);
            a.staggerLines = a.horiz && q.staggerLines;
            if (!a.axisGroup) a.gridGroup = c.g("grid").attr({
                zIndex: d.gridZIndex || 1
            }).add(), a.axisGroup = c.g("axis").attr({
                zIndex: d.zIndex || 2
            }).add(), a.labelGroup = c.g("axis-labels").attr({
                zIndex: q.zIndex || 7
            }).add();
            if (j || a.isLinked) {
                a.labelAlign = p(q.align || a.autoLabelAlign(q.rotation));
                n(e, function(b) {
                    f[b] ? f[b].addLabel() : f[b] = new La(a, b);
                });
                if (a.horiz && !a.staggerLines && x && !q.rotation) {
                    for (r = a.reversed ? [].concat(e).reverse() : e; w < x; ) {
                        j = [];
                        Ga = !1;
                        for (q = 0; q < r.length; q++) G = r[q], H = (H = f[G].label && f[G].label.bBox) ? H.width : 0, 
                        B = q % w, H && (G = a.translate(G), j[B] !== v && G < j[B] && (Ga = !0), j[B] = G + H);
                        if (Ga) w++; else break;
                    }
                    if (w > 1) a.staggerLines = w;
                }
                n(e, function(b) {
                    if (h === 0 || h === 2 || {
                        1: "left",
                        3: "right"
                    }[h] === a.labelAlign) ka = u(f[b].getLabelSize(), ka);
                });
                if (a.staggerLines) ka *= a.staggerLines, a.labelOffset = ka;
            } else for (r in f) f[r].destroy(), delete f[r];
            if (o && o.text && o.enabled !== !1) {
                if (!a.axisTitle) a.axisTitle = c.text(o.text, 0, 0, o.useHTML).attr({
                    zIndex: 7,
                    rotation: o.rotation || 0,
                    align: o.textAlign || {
                        low: "left",
                        middle: "center",
                        high: "right"
                    }[o.align]
                }).css(o.style).add(a.axisGroup), a.axisTitle.isNew = !0;
                if (b) k = a.axisTitle.getBBox()[g ? "height" : "width"], m = p(o.margin, g ? 5 : 10), 
                l = o.offset;
                a.axisTitle[b ? "show" : "hide"]();
            }
            a.offset = s * p(d.offset, D[h]);
            a.axisTitleMargin = p(l, ka + m + (h !== 2 && ka && s * d.labels[g ? "y" : "x"]));
            D[h] = u(D[h], a.axisTitleMargin + k + s * a.offset);
            F[i] = u(F[i], d.lineWidth);
        },
        getLinePath: function(a) {
            var b = this.chart, c = this.opposite, d = this.offset, e = this.horiz, f = this.left + (c ? this.width : 0) + d;
            this.lineTop = d = b.chartHeight - this.bottom - (c ? this.height : 0) + d;
            c || (a *= -1);
            return b.renderer.crispLine([ "M", e ? this.left : f, e ? d : this.top, "L", e ? b.chartWidth - this.right : f, e ? d : b.chartHeight - this.bottom ], a);
        },
        getTitlePosition: function() {
            var a = this.horiz, b = this.left, c = this.top, d = this.len, e = this.options.title, f = a ? b : c, g = this.opposite, h = this.offset, i = A(e.style.fontSize || 12), d = {
                low: f + (a ? 0 : d),
                middle: f + d / 2,
                high: f + (a ? d : 0)
            }[e.align], b = (a ? c + this.height : b) + (a ? 1 : -1) * (g ? -1 : 1) * this.axisTitleMargin + (this.side === 2 ? i : 0);
            return {
                x: a ? d : b + (g ? this.width : 0) + h + (e.x || 0),
                y: a ? b - (g ? this.height : 0) + h : d + (e.y || 0)
            };
        },
        render: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.options, e = a.isLog, f = a.isLinked, g = a.tickPositions, h = a.axisTitle, i = a.stacks, j = a.ticks, k = a.minorTicks, l = a.alternateBands, m = d.stackLabels, o = d.alternateGridColor, q = a.tickmarkOffset, p = d.lineWidth, D, F = b.hasRendered && t(a.oldMin) && !isNaN(a.oldMin);
            D = a.hasData;
            var u = a.showAxis, s, r;
            n([ j, k, l ], function(a) {
                for (var b in a) a[b].isActive = !1;
            });
            if (D || f) if (a.minorTickInterval && !a.categories && n(a.getMinorTickPositions(), function(b) {
                k[b] || (k[b] = new La(a, b, "minor"));
                F && k[b].isNew && k[b].render(null, !0);
                k[b].render(null, !1, 1);
            }), g.length && (n(g.slice(1).concat([ g[0] ]), function(b, c) {
                c = c === g.length - 1 ? 0 : c + 1;
                if (!f || b >= a.min && b <= a.max) j[b] || (j[b] = new La(a, b)), F && j[b].isNew && j[b].render(c, !0), 
                j[b].render(c, !1, 1);
            }), q && a.min === 0 && (j[-1] || (j[-1] = new La(a, -1, null, !0)), j[-1].render(-1))), 
            o && n(g, function(b, c) {
                if (c % 2 === 0 && b < a.max) l[b] || (l[b] = new tb(a)), s = b + q, r = g[c + 1] !== v ? g[c + 1] + q : a.max, 
                l[b].options = {
                    from: e ? ea(s) : s,
                    to: e ? ea(r) : r,
                    color: o
                }, l[b].render(), l[b].isActive = !0;
            }), !a._addedPlotLB) n((d.plotLines || []).concat(d.plotBands || []), function(b) {
                a.addPlotBandOrLine(b);
            }), a._addedPlotLB = !0;
            n([ j, k, l ], function(a) {
                var c, d, e = [], f = Ca ? Ca.duration || 500 : 0, g = function() {
                    for (d = e.length; d--; ) a[e[d]] && !a[e[d]].isActive && (a[e[d]].destroy(), delete a[e[d]]);
                };
                for (c in a) if (!a[c].isActive) a[c].render(c, !1, 0), a[c].isActive = !1, e.push(c);
                a === l || !b.hasRendered || !f ? g() : f && setTimeout(g, f);
            });
            if (p) D = a.getLinePath(p), a.axisLine ? a.axisLine.animate({
                d: D
            }) : a.axisLine = c.path(D).attr({
                stroke: d.lineColor,
                "stroke-width": p,
                zIndex: 7
            }).add(a.axisGroup), a.axisLine[u ? "show" : "hide"]();
            if (h && u) h[h.isNew ? "attr" : "animate"](a.getTitlePosition()), h.isNew = !1;
            if (m && m.enabled) {
                var w, x, d = a.stackTotalGroup;
                if (!d) a.stackTotalGroup = d = c.g("stack-labels").attr({
                    visibility: "visible",
                    zIndex: 6
                }).add();
                d.translate(b.plotLeft, b.plotTop);
                for (w in i) for (x in c = i[w], c) c[x].render(d);
            }
            a.isDirty = !1;
        },
        removePlotBandOrLine: function(a) {
            for (var b = this.plotLinesAndBands, c = this.options, d = this.userOptions, e = b.length; e--; ) b[e].id === a && b[e].destroy();
            n([ c.plotLines || [], d.plotLines || [], c.plotBands || [], d.plotBands || [] ], function(b) {
                for (e = b.length; e--; ) b[e].id === a && fa(b, b[e]);
            });
        },
        setTitle: function(a, b) {
            this.update({
                title: a
            }, b);
        },
        redraw: function() {
            var a = this.chart.pointer;
            a.reset && a.reset(!0);
            this.render();
            n(this.plotLinesAndBands, function(a) {
                a.render();
            });
            n(this.series, function(a) {
                a.isDirty = !0;
            });
        },
        buildStacks: function() {
            this.isXAxis || n(this.series, function(a) {
                a.setStackedPoints();
            });
        },
        setCategories: function(a, b) {
            this.update({
                categories: a
            }, b);
        },
        destroy: function(a) {
            var b = this, c = b.stacks, d, e = b.plotLinesAndBands;
            a || aa(b);
            for (d in c) Ja(c[d]), c[d] = null;
            n([ b.ticks, b.minorTicks, b.alternateBands ], function(a) {
                Ja(a);
            });
            for (a = e.length; a--; ) e[a].destroy();
            n("stackTotalGroup,axisLine,axisGroup,gridGroup,labelGroup,axisTitle".split(","), function(a) {
                b[a] && (b[a] = b[a].destroy());
            });
        }
    };
    ub.prototype = {
        init: function(a, b) {
            var c = b.borderWidth, d = b.style, e = A(d.padding);
            this.chart = a;
            this.options = b;
            this.crosshairs = [];
            this.now = {
                x: 0,
                y: 0
            };
            this.isHidden = !0;
            this.label = a.renderer.label("", 0, 0, b.shape, null, null, b.useHTML, null, "tooltip").attr({
                padding: e,
                fill: b.backgroundColor,
                "stroke-width": c,
                r: b.borderRadius,
                zIndex: 8
            }).css(d).css({
                padding: 0
            }).hide().add();
            Z || this.label.shadow(b.shadow);
            this.shared = b.shared;
        },
        destroy: function() {
            n(this.crosshairs, function(a) {
                a && a.destroy();
            });
            if (this.label) this.label = this.label.destroy();
            clearTimeout(this.hideTimer);
            clearTimeout(this.tooltipTimeout);
        },
        move: function(a, b, c, d) {
            var e = this, f = e.now, g = e.options.animation !== !1 && !e.isHidden;
            r(f, {
                x: g ? (2 * f.x + a) / 3 : a,
                y: g ? (f.y + b) / 2 : b,
                anchorX: g ? (2 * f.anchorX + c) / 3 : c,
                anchorY: g ? (f.anchorY + d) / 2 : d
            });
            e.label.attr(f);
            if (g && (P(a - f.x) > 1 || P(b - f.y) > 1)) clearTimeout(this.tooltipTimeout), 
            this.tooltipTimeout = setTimeout(function() {
                e && e.move(a, b, c, d);
            }, 32);
        },
        hide: function() {
            var a = this, b;
            clearTimeout(this.hideTimer);
            if (!this.isHidden) b = this.chart.hoverPoints, this.hideTimer = setTimeout(function() {
                a.label.fadeOut();
                a.isHidden = !0;
            }, p(this.options.hideDelay, 500)), b && n(b, function(a) {
                a.setState();
            }), this.chart.hoverPoints = null;
        },
        hideCrosshairs: function() {
            n(this.crosshairs, function(a) {
                a && a.hide();
            });
        },
        getAnchor: function(a, b) {
            var c, d = this.chart, e = d.inverted, f = d.plotTop, g = 0, h = 0, i, a = ha(a);
            c = a[0].tooltipPos;
            this.followPointer && b && (b.chartX === v && (b = d.pointer.normalize(b)), c = [ b.chartX - d.plotLeft, b.chartY - f ]);
            c || (n(a, function(a) {
                i = a.series.yAxis;
                g += a.plotX;
                h += (a.plotLow ? (a.plotLow + a.plotHigh) / 2 : a.plotY) + (!e && i ? i.top - f : 0);
            }), g /= a.length, h /= a.length, c = [ e ? d.plotWidth - h : g, this.shared && !e && a.length > 1 && b ? b.chartY - f : e ? d.plotHeight - g : h ]);
            return Na(c, s);
        },
        getPosition: function(a, b, c) {
            var d = this.chart, e = d.plotLeft, f = d.plotTop, g = d.plotWidth, h = d.plotHeight, i = p(this.options.distance, 12), j = c.plotX, c = c.plotY, d = j + e + (d.inverted ? i : -a - i), k = c - b + f + 15, l;
            d < 7 && (d = e + u(j, 0) + i);
            d + a > e + g && (d -= d + a - (e + g), k = c - b + f - i, l = !0);
            k < f + 5 && (k = f + 5, l && c >= k && c <= k + b && (k = c + f + i));
            k + b > f + h && (k = u(f, f + h - b - i));
            return {
                x: d,
                y: k
            };
        },
        defaultFormatter: function(a) {
            var b = this.points || ha(this), c = b[0].series, d;
            d = [ c.tooltipHeaderFormatter(b[0]) ];
            n(b, function(a) {
                c = a.series;
                d.push(c.tooltipFormatter && c.tooltipFormatter(a) || a.point.tooltipFormatter(c.tooltipOptions.pointFormat));
            });
            d.push(a.options.footerFormat || "");
            return d.join("");
        },
        refresh: function(a, b) {
            var c = this.chart, d = this.label, e = this.options, f, g, h, i = {}, j, k = [];
            j = e.formatter || this.defaultFormatter;
            var i = c.hoverPoints, l, m = e.crosshairs;
            h = this.shared;
            clearTimeout(this.hideTimer);
            this.followPointer = ha(a)[0].series.tooltipOptions.followPointer;
            g = this.getAnchor(a, b);
            f = g[0];
            g = g[1];
            h && (!a.series || !a.series.noSharedTooltip) ? (c.hoverPoints = a, i && n(i, function(a) {
                a.setState();
            }), n(a, function(a) {
                a.setState("hover");
                k.push(a.getLabelConfig());
            }), i = {
                x: a[0].category,
                y: a[0].y
            }, i.points = k, a = a[0]) : i = a.getLabelConfig();
            j = j.call(i, this);
            i = a.series;
            h = h || !i.isCartesian || i.tooltipOutsidePlot || c.isInsidePlot(f, g);
            j === !1 || !h ? this.hide() : (this.isHidden && (Wa(d), d.attr("opacity", 1).show()), 
            d.attr({
                text: j
            }), l = e.borderColor || a.color || i.color || "#606060", d.attr({
                stroke: l
            }), this.updatePosition({
                plotX: f,
                plotY: g
            }), this.isHidden = !1);
            if (m) {
                m = ha(m);
                for (d = m.length; d--; ) if (i = a.series, e = i[d ? "yAxis" : "xAxis"], m[d] && e) if (h = d ? p(a.stackY, a.y) : a.x, 
                e.isLog && (h = ma(h)), i.modifyValue && (h = i.modifyValue(h)), e = e.getPlotLinePath(h, 1), 
                this.crosshairs[d]) this.crosshairs[d].attr({
                    d: e,
                    visibility: "visible"
                }); else {
                    h = {
                        "stroke-width": m[d].width || 1,
                        stroke: m[d].color || "#C0C0C0",
                        zIndex: m[d].zIndex || 2
                    };
                    if (m[d].dashStyle) h.dashstyle = m[d].dashStyle;
                    this.crosshairs[d] = c.renderer.path(e).attr(h).add();
                }
            }
            C(c, "tooltipRefresh", {
                text: j,
                x: f + c.plotLeft,
                y: g + c.plotTop,
                borderColor: l
            });
        },
        updatePosition: function(a) {
            var b = this.chart, c = this.label, c = (this.options.positioner || this.getPosition).call(this, c.width, c.height, a);
            this.move(s(c.x), s(c.y), a.plotX + b.plotLeft, a.plotY + b.plotTop);
        }
    };
    vb.prototype = {
        init: function(a, b) {
            var c = Z ? "" : b.chart.zoomType, d = a.inverted, e;
            this.options = b;
            this.chart = a;
            this.zoomX = e = /x/.test(c);
            this.zoomY = c = /y/.test(c);
            this.zoomHor = e && !d || c && d;
            this.zoomVert = c && !d || e && d;
            this.pinchDown = [];
            this.lastValidTouch = {};
            if (b.tooltip.enabled) a.tooltip = new ub(a, b.tooltip);
            this.setDOMEvents();
        },
        normalize: function(a) {
            var b, c, a = a || E.event;
            if (!a.target) a.target = a.srcElement;
            a = Sb(a);
            c = a.touches ? a.touches.item(0) : a;
            this.chartPosition = b = Xb(this.chart.container);
            return r(a, {
                chartX: s(p(c.pageX, c.clientX) - b.left),
                chartY: s(p(c.pageY, c.clientY) - b.top)
            });
        },
        getCoordinates: function(a) {
            var b = {
                xAxis: [],
                yAxis: []
            };
            n(this.chart.axes, function(c) {
                b[c.isXAxis ? "xAxis" : "yAxis"].push({
                    axis: c,
                    value: c.toValue(a[c.horiz ? "chartX" : "chartY"])
                });
            });
            return b;
        },
        getIndex: function(a) {
            var b = this.chart;
            return b.inverted ? b.plotHeight + b.plotTop - a.chartY : a.chartX - b.plotLeft;
        },
        runPointActions: function(a) {
            var b = this.chart, c = b.series, d = b.tooltip, e, f = b.hoverPoint, g = b.hoverSeries, h, i, j = b.chartWidth, k = this.getIndex(a);
            if (d && this.options.tooltip.shared && (!g || !g.noSharedTooltip)) {
                e = [];
                h = c.length;
                for (i = 0; i < h; i++) if (c[i].visible && c[i].options.enableMouseTracking !== !1 && !c[i].noSharedTooltip && c[i].tooltipPoints.length && (b = c[i].tooltipPoints[k], 
                b.series)) b._dist = P(k - b.clientX), j = I(j, b._dist), e.push(b);
                for (h = e.length; h--; ) e[h]._dist > j && e.splice(h, 1);
                if (e.length && e[0].clientX !== this.hoverX) d.refresh(e, a), this.hoverX = e[0].clientX;
            }
            if (g && g.tracker) {
                if ((b = g.tooltipPoints[k]) && b !== f) b.onMouseOver(a);
            } else d && d.followPointer && !d.isHidden && (a = d.getAnchor([ {} ], a), d.updatePosition({
                plotX: a[0],
                plotY: a[1]
            }));
        },
        reset: function(a) {
            var b = this.chart, c = b.hoverSeries, d = b.hoverPoint, e = b.tooltip, b = e && e.shared ? b.hoverPoints : d;
            (a = a && e && b) && ha(b)[0].plotX === v && (a = !1);
            if (a) e.refresh(b); else {
                if (d) d.onMouseOut();
                if (c) c.onMouseOut();
                e && (e.hide(), e.hideCrosshairs());
                this.hoverX = null;
            }
        },
        scaleGroups: function(a, b) {
            var c = this.chart, d;
            n(c.series, function(e) {
                d = a || e.getPlotBox();
                e.xAxis && e.xAxis.zoomEnabled && (e.group.attr(d), e.markerGroup && (e.markerGroup.attr(d), 
                e.markerGroup.clip(b ? c.clipRect : null)), e.dataLabelsGroup && e.dataLabelsGroup.attr(d));
            });
            c.clipRect.attr(b || c.clipBox);
        },
        pinchTranslateDirection: function(a, b, c, d, e, f, g) {
            var h = this.chart, i = a ? "x" : "y", j = a ? "X" : "Y", k = "chart" + j, l = a ? "width" : "height", m = h["plot" + (a ? "Left" : "Top")], o, q, p = 1, n = h.inverted, u = h.bounds[a ? "h" : "v"], s = b.length === 1, t = b[0][k], r = c[0][k], w = !s && b[1][k], v = !s && c[1][k], x, c = function() {
                !s && P(t - w) > 20 && (p = P(r - v) / P(t - w));
                q = (m - r) / p + t;
                o = h["plot" + (a ? "Width" : "Height")] / p;
            };
            c();
            b = q;
            b < u.min ? (b = u.min, x = !0) : b + o > u.max && (b = u.max - o, x = !0);
            x ? (r -= .8 * (r - g[i][0]), s || (v -= .8 * (v - g[i][1])), c()) : g[i] = [ r, v ];
            n || (f[i] = q - m, f[l] = o);
            f = n ? 1 / p : p;
            e[l] = o;
            e[i] = b;
            d[n ? a ? "scaleY" : "scaleX" : "scale" + j] = p;
            d["translate" + j] = f * m + (r - f * t);
        },
        pinch: function(a) {
            var b = this, c = b.chart, d = b.pinchDown, e = c.tooltip && c.tooltip.options.followTouchMove, f = a.touches, g = f.length, h = b.lastValidTouch, i = b.zoomHor || b.pinchHor, j = b.zoomVert || b.pinchVert, k = i || j, l = b.selectionMarker, m = {}, o = {};
            a.type === "touchstart" && (e || k) && a.preventDefault();
            Na(f, function(a) {
                return b.normalize(a);
            });
            if (a.type === "touchstart") n(f, function(a, b) {
                d[b] = {
                    chartX: a.chartX,
                    chartY: a.chartY
                };
            }), h.x = [ d[0].chartX, d[1] && d[1].chartX ], h.y = [ d[0].chartY, d[1] && d[1].chartY ], 
            n(c.axes, function(a) {
                if (a.zoomEnabled) {
                    var b = c.bounds[a.horiz ? "h" : "v"], d = a.minPixelPadding, e = a.toPixels(a.dataMin), f = a.toPixels(a.dataMax), g = I(e, f), e = u(e, f);
                    b.min = I(a.pos, g - d);
                    b.max = u(a.pos + a.len, e + d);
                }
            }); else if (d.length) {
                if (!l) b.selectionMarker = l = r({
                    destroy: xa
                }, c.plotBox);
                i && b.pinchTranslateDirection(!0, d, f, m, l, o, h);
                j && b.pinchTranslateDirection(!1, d, f, m, l, o, h);
                b.hasPinched = k;
                b.scaleGroups(m, o);
                !k && e && g === 1 && this.runPointActions(b.normalize(a));
            }
        },
        dragStart: function(a) {
            var b = this.chart;
            b.mouseIsDown = a.type;
            b.cancelClick = !1;
            b.mouseDownX = this.mouseDownX = a.chartX;
            this.mouseDownY = a.chartY;
        },
        drag: function(a) {
            var b = this.chart, c = b.options.chart, d = a.chartX, a = a.chartY, e = this.zoomHor, f = this.zoomVert, g = b.plotLeft, h = b.plotTop, i = b.plotWidth, j = b.plotHeight, k, l = this.mouseDownX, m = this.mouseDownY;
            d < g ? d = g : d > g + i && (d = g + i);
            a < h ? a = h : a > h + j && (a = h + j);
            this.hasDragged = Math.sqrt(Math.pow(l - d, 2) + Math.pow(m - a, 2));
            if (this.hasDragged > 10) {
                k = b.isInsidePlot(l - g, m - h);
                if (b.hasCartesianSeries && (this.zoomX || this.zoomY) && k && !this.selectionMarker) this.selectionMarker = b.renderer.rect(g, h, e ? 1 : i, f ? 1 : j, 0).attr({
                    fill: c.selectionMarkerFill || "rgba(69,114,167,0.25)",
                    zIndex: 7
                }).add();
                this.selectionMarker && e && (e = d - l, this.selectionMarker.attr({
                    width: P(e),
                    x: (e > 0 ? 0 : e) + l
                }));
                this.selectionMarker && f && (e = a - m, this.selectionMarker.attr({
                    height: P(e),
                    y: (e > 0 ? 0 : e) + m
                }));
                k && !this.selectionMarker && c.panning && b.pan(d);
            }
        },
        drop: function(a) {
            var b = this.chart, c = this.hasPinched;
            if (this.selectionMarker) {
                var d = {
                    xAxis: [],
                    yAxis: [],
                    originalEvent: a.originalEvent || a
                }, e = this.selectionMarker, f = e.x, g = e.y, h;
                if (this.hasDragged || c) n(b.axes, function(a) {
                    if (a.zoomEnabled) {
                        var b = a.horiz, c = a.toValue(b ? f : g), b = a.toValue(b ? f + e.width : g + e.height);
                        !isNaN(c) && !isNaN(b) && (d[a.xOrY + "Axis"].push({
                            axis: a,
                            min: I(c, b),
                            max: u(c, b)
                        }), h = !0);
                    }
                }), h && C(b, "selection", d, function(a) {
                    b.zoom(r(a, c ? {
                        animation: !1
                    } : null));
                });
                this.selectionMarker = this.selectionMarker.destroy();
                c && this.scaleGroups();
            }
            if (b) M(b.container, {
                cursor: b._cursor
            }), b.cancelClick = this.hasDragged > 10, b.mouseIsDown = this.hasDragged = this.hasPinched = !1, 
            this.pinchDown = [];
        },
        onContainerMouseDown: function(a) {
            a = this.normalize(a);
            a.preventDefault && a.preventDefault();
            this.dragStart(a);
        },
        onDocumentMouseUp: function(a) {
            this.drop(a);
        },
        onDocumentMouseMove: function(a) {
            var b = this.chart, c = this.chartPosition, d = b.hoverSeries, a = Sb(a);
            c && d && d.isCartesian && !b.isInsidePlot(a.pageX - c.left - b.plotLeft, a.pageY - c.top - b.plotTop) && this.reset();
        },
        onContainerMouseLeave: function() {
            this.reset();
            this.chartPosition = null;
        },
        onContainerMouseMove: function(a) {
            var b = this.chart, a = this.normalize(a);
            a.returnValue = !1;
            b.mouseIsDown === "mousedown" && this.drag(a);
            b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) && !b.openMenu && this.runPointActions(a);
        },
        inClass: function(a, b) {
            for (var c; a; ) {
                if (c = w(a, "class")) if (c.indexOf(b) !== -1) return !0; else if (c.indexOf("highcharts-container") !== -1) return !1;
                a = a.parentNode;
            }
        },
        onTrackerMouseOut: function(a) {
            var b = this.chart.hoverSeries;
            if (b && !b.options.stickyTracking && !this.inClass(a.toElement || a.relatedTarget, "highcharts-tooltip")) b.onMouseOut();
        },
        onContainerClick: function(a) {
            var b = this.chart, c = b.hoverPoint, d = b.plotLeft, e = b.plotTop, f = b.inverted, g, h, i, a = this.normalize(a);
            a.cancelBubble = !0;
            if (!b.cancelClick) c && this.inClass(a.target, "highcharts-tracker") ? (g = this.chartPosition, 
            h = c.plotX, i = c.plotY, r(c, {
                pageX: g.left + d + (f ? b.plotWidth - i : h),
                pageY: g.top + e + (f ? b.plotHeight - h : i)
            }), C(c.series, "click", r(a, {
                point: c
            })), b.hoverPoint && c.firePointEvent("click", a)) : (r(a, this.getCoordinates(a)), 
            b.isInsidePlot(a.chartX - d, a.chartY - e) && C(b, "click", a));
        },
        onContainerTouchStart: function(a) {
            var b = this.chart;
            a.touches.length === 1 ? (a = this.normalize(a), b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) ? (this.runPointActions(a), 
            this.pinch(a)) : this.reset()) : a.touches.length === 2 && this.pinch(a);
        },
        onContainerTouchMove: function(a) {
            (a.touches.length === 1 || a.touches.length === 2) && this.pinch(a);
        },
        onDocumentTouchEnd: function(a) {
            this.drop(a);
        },
        setDOMEvents: function() {
            var a = this, b = a.chart.container, c;
            this._events = c = [ [ b, "onmousedown", "onContainerMouseDown" ], [ b, "onmousemove", "onContainerMouseMove" ], [ b, "onclick", "onContainerClick" ], [ b, "mouseleave", "onContainerMouseLeave" ], [ z, "mousemove", "onDocumentMouseMove" ], [ z, "mouseup", "onDocumentMouseUp" ] ];
            hb && c.push([ b, "ontouchstart", "onContainerTouchStart" ], [ b, "ontouchmove", "onContainerTouchMove" ], [ z, "touchend", "onDocumentTouchEnd" ]);
            n(c, function(b) {
                a["_" + b[2]] = function(c) {
                    a[b[2]](c);
                };
                b[1].indexOf("on") === 0 ? b[0][b[1]] = a["_" + b[2]] : J(b[0], b[1], a["_" + b[2]]);
            });
        },
        destroy: function() {
            var a = this;
            n(a._events, function(b) {
                b[1].indexOf("on") === 0 ? b[0][b[1]] = null : aa(b[0], b[1], a["_" + b[2]]);
            });
            delete a._events;
            clearInterval(a.tooltipTimeout);
        }
    };
    wb.prototype = {
        init: function(a, b) {
            var c = this, d = b.itemStyle, e = p(b.padding, 8), f = b.itemMarginTop || 0;
            this.options = b;
            if (b.enabled) c.baseline = A(d.fontSize) + 3 + f, c.itemStyle = d, c.itemHiddenStyle = x(d, b.itemHiddenStyle), 
            c.itemMarginTop = f, c.padding = e, c.initialItemX = e, c.initialItemY = e - 5, 
            c.maxItemWidth = 0, c.chart = a, c.itemHeight = 0, c.lastLineHeight = 0, c.render(), 
            J(c.chart, "endResize", function() {
                c.positionCheckboxes();
            });
        },
        colorizeItem: function(a, b) {
            var c = this.options, d = a.legendItem, e = a.legendLine, f = a.legendSymbol, g = this.itemHiddenStyle.color, c = b ? c.itemStyle.color : g, h = b ? a.color : g, g = a.options && a.options.marker, i = {
                stroke: h,
                fill: h
            }, j;
            d && d.css({
                fill: c,
                color: c
            });
            e && e.attr({
                stroke: h
            });
            if (f) {
                if (g && f.isMarker) for (j in g = a.convertAttribs(g), g) d = g[j], d !== v && (i[j] = d);
                f.attr(i);
            }
        },
        positionItem: function(a) {
            var b = this.options, c = b.symbolPadding, b = !b.rtl, d = a._legendItemPos, e = d[0], d = d[1], f = a.checkbox;
            a.legendGroup && a.legendGroup.translate(b ? e : this.legendWidth - e - 2 * c - 4, d);
            if (f) f.x = e, f.y = d;
        },
        destroyItem: function(a) {
            var b = a.checkbox;
            n([ "legendItem", "legendLine", "legendSymbol", "legendGroup" ], function(b) {
                a[b] && (a[b] = a[b].destroy());
            });
            b && Ta(a.checkbox);
        },
        destroy: function() {
            var a = this.group, b = this.box;
            if (b) this.box = b.destroy();
            if (a) this.group = a.destroy();
        },
        positionCheckboxes: function(a) {
            var b = this.group.alignAttr, c, d = this.clipHeight || this.legendHeight;
            if (b) c = b.translateY, n(this.allItems, function(e) {
                var f = e.checkbox, g;
                f && (g = c + f.y + (a || 0) + 3, M(f, {
                    left: b.translateX + e.legendItemWidth + f.x - 20 + "px",
                    top: g + "px",
                    display: g > c - 6 && g < c + d - 6 ? "" : R
                }));
            });
        },
        renderTitle: function() {
            var a = this.padding, b = this.options.title, c = 0;
            if (b.text) {
                if (!this.title) this.title = this.chart.renderer.label(b.text, a - 3, a - 4, null, null, null, null, null, "legend-title").attr({
                    zIndex: 1
                }).css(b.style).add(this.group);
                a = this.title.getBBox();
                c = a.height;
                this.offsetWidth = a.width;
                this.contentGroup.attr({
                    translateY: c
                });
            }
            this.titleHeight = c;
        },
        renderItem: function(a) {
            var B;
            var b = this, c = b.chart, d = c.renderer, e = b.options, f = e.layout === "horizontal", g = e.symbolWidth, h = e.symbolPadding, i = b.itemStyle, j = b.itemHiddenStyle, k = b.padding, l = f ? p(e.itemDistance, 8) : 0, m = !e.rtl, o = e.width, q = e.itemMarginBottom || 0, n = b.itemMarginTop, s = b.initialItemX, t = a.legendItem, r = a.series || a, w = r.options, v = w.showCheckbox, A = e.useHTML;
            if (!t && (a.legendGroup = d.g("legend-item").attr({
                zIndex: 1
            }).add(b.scrollGroup), r.drawLegendSymbol(b, a), a.legendItem = t = d.text(e.labelFormat ? Aa(e.labelFormat, a) : e.labelFormatter.call(a), m ? g + h : -h, b.baseline, A).css(x(a.visible ? i : j)).attr({
                align: m ? "left" : "right",
                zIndex: 2
            }).add(a.legendGroup), (A ? t : a.legendGroup).on("mouseover", function() {
                a.setState("hover");
                t.css(b.options.itemHoverStyle);
            }).on("mouseout", function() {
                t.css(a.visible ? i : j);
                a.setState();
            }).on("click", function(b) {
                var c = function() {
                    a.setVisible();
                }, b = {
                    browserEvent: b
                };
                a.firePointEvent ? a.firePointEvent("legendItemClick", b, c) : C(a, "legendItemClick", b, c);
            }), b.colorizeItem(a, a.visible), w && v)) a.checkbox = T("input", {
                type: "checkbox",
                checked: a.selected,
                defaultChecked: a.selected
            }, e.itemCheckboxStyle, c.container), J(a.checkbox, "click", function(b) {
                C(a, "checkboxClick", {
                    checked: b.target.checked
                }, function() {
                    a.select();
                });
            });
            d = t.getBBox();
            B = a.legendItemWidth = e.itemWidth || g + h + d.width + l + (v ? 20 : 0), e = B;
            b.itemHeight = g = d.height;
            if (f && b.itemX - s + e > (o || c.chartWidth - 2 * k - s)) b.itemX = s, b.itemY += n + b.lastLineHeight + q, 
            b.lastLineHeight = 0;
            b.maxItemWidth = u(b.maxItemWidth, e);
            b.lastItemY = n + b.itemY + q;
            b.lastLineHeight = u(g, b.lastLineHeight);
            a._legendItemPos = [ b.itemX, b.itemY ];
            f ? b.itemX += e : (b.itemY += n + g + q, b.lastLineHeight = g);
            b.offsetWidth = o || u((f ? b.itemX - s - l : e) + k, b.offsetWidth);
        },
        render: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.group, e, f, g, h, i = a.box, j = a.options, k = a.padding, l = j.borderWidth, m = j.backgroundColor;
            a.itemX = a.initialItemX;
            a.itemY = a.initialItemY;
            a.offsetWidth = 0;
            a.lastItemY = 0;
            if (!d) a.group = d = c.g("legend").attr({
                zIndex: 7
            }).add(), a.contentGroup = c.g().attr({
                zIndex: 1
            }).add(d), a.scrollGroup = c.g().add(a.contentGroup);
            a.renderTitle();
            e = [];
            n(b.series, function(a) {
                var b = a.options;
                b.showInLegend && !t(b.linkedTo) && (e = e.concat(a.legendItems || (b.legendType === "point" ? a.data : a)));
            });
            Kb(e, function(a, b) {
                return (a.options && a.options.legendIndex || 0) - (b.options && b.options.legendIndex || 0);
            });
            j.reversed && e.reverse();
            a.allItems = e;
            a.display = f = !!e.length;
            n(e, function(b) {
                a.renderItem(b);
            });
            g = j.width || a.offsetWidth;
            h = a.lastItemY + a.lastLineHeight + a.titleHeight;
            h = a.handleOverflow(h);
            if (l || m) {
                g += k;
                h += k;
                if (i) {
                    if (g > 0 && h > 0) i[i.isNew ? "attr" : "animate"](i.crisp(null, null, null, g, h)), 
                    i.isNew = !1;
                } else a.box = i = c.rect(0, 0, g, h, j.borderRadius, l || 0).attr({
                    stroke: j.borderColor,
                    "stroke-width": l || 0,
                    fill: m || R
                }).add(d).shadow(j.shadow), i.isNew = !0;
                i[f ? "show" : "hide"]();
            }
            a.legendWidth = g;
            a.legendHeight = h;
            n(e, function(b) {
                a.positionItem(b);
            });
            f && d.align(r({
                width: g,
                height: h
            }, j), !0, "spacingBox");
            b.isResizing || this.positionCheckboxes();
        },
        handleOverflow: function(a) {
            var b = this, c = this.chart, d = c.renderer, e = this.options, f = e.y, f = c.spacingBox.height + (e.verticalAlign === "top" ? -f : f) - this.padding, g = e.maxHeight, h = this.clipRect, i = e.navigation, j = p(i.animation, !0), k = i.arrowSize || 12, l = this.nav;
            e.layout === "horizontal" && (f /= 2);
            g && (f = I(f, g));
            if (a > f && !e.useHTML) {
                this.clipHeight = c = f - 20 - this.titleHeight;
                this.pageCount = ja(a / c);
                this.currentPage = p(this.currentPage, 1);
                this.fullHeight = a;
                if (!h) h = b.clipRect = d.clipRect(0, 0, 9999, 0), b.contentGroup.clip(h);
                h.attr({
                    height: c
                });
                if (!l) this.nav = l = d.g().attr({
                    zIndex: 1
                }).add(this.group), this.up = d.symbol("triangle", 0, 0, k, k).on("click", function() {
                    b.scroll(-1, j);
                }).add(l), this.pager = d.text("", 15, 10).css(i.style).add(l), this.down = d.symbol("triangle-down", 0, 0, k, k).on("click", function() {
                    b.scroll(1, j);
                }).add(l);
                b.scroll(0);
                a = f;
            } else if (l) h.attr({
                height: c.chartHeight
            }), l.hide(), this.scrollGroup.attr({
                translateY: 1
            }), this.clipHeight = 0;
            return a;
        },
        scroll: function(a, b) {
            var c = this.pageCount, d = this.currentPage + a, e = this.clipHeight, f = this.options.navigation, g = f.activeColor, h = f.inactiveColor, f = this.pager, i = this.padding;
            d > c && (d = c);
            if (d > 0) b !== v && Ka(b, this.chart), this.nav.attr({
                translateX: i,
                translateY: e + 7 + this.titleHeight,
                visibility: "visible"
            }), this.up.attr({
                fill: d === 1 ? h : g
            }).css({
                cursor: d === 1 ? "default" : "pointer"
            }), f.attr({
                text: d + "/" + this.pageCount
            }), this.down.attr({
                x: 18 + this.pager.getBBox().width,
                fill: d === c ? h : g
            }).css({
                cursor: d === c ? "default" : "pointer"
            }), e = -I(e * (d - 1), this.fullHeight - e + i) + 1, this.scrollGroup.animate({
                translateY: e
            }), f.attr({
                text: d + "/" + c
            }), this.currentPage = d, this.positionCheckboxes(e);
        }
    };
    xb.prototype = {
        init: function(a, b) {
            var c, d = a.series;
            a.series = null;
            c = x(O, a);
            c.series = a.series = d;
            var d = c.chart, e = d.margin, e = U(e) ? e : [ e, e, e, e ];
            this.optionsMarginTop = p(d.marginTop, e[0]);
            this.optionsMarginRight = p(d.marginRight, e[1]);
            this.optionsMarginBottom = p(d.marginBottom, e[2]);
            this.optionsMarginLeft = p(d.marginLeft, e[3]);
            e = d.events;
            this.bounds = {
                h: {},
                v: {}
            };
            this.callback = b;
            this.isResizing = 0;
            this.options = c;
            this.axes = [];
            this.series = [];
            this.hasCartesianSeries = d.showAxes;
            var f = this, g;
            f.index = Ea.length;
            Ea.push(f);
            d.reflow !== !1 && J(f, "load", function() {
                f.initReflow();
            });
            if (e) for (g in e) J(f, g, e[g]);
            f.xAxis = [];
            f.yAxis = [];
            f.animation = Z ? !1 : p(d.animation, !0);
            f.pointCount = 0;
            f.counters = new Jb();
            f.firstRender();
        },
        initSeries: function(a) {
            var b = this.options.chart;
            (b = $[a.type || b.type || b.defaultSeriesType]) || ua(17, !0);
            b = new b();
            b.init(this, a);
            return b;
        },
        addSeries: function(a, b, c) {
            var d, e = this;
            a && (b = p(b, !0), C(e, "addSeries", {
                options: a
            }, function() {
                d = e.initSeries(a);
                e.isDirtyLegend = !0;
                b && e.redraw(c);
            }));
            return d;
        },
        addAxis: function(a, b, c, d) {
            var e = b ? "xAxis" : "yAxis", f = this.options;
            new db(this, x(a, {
                index: this[e].length,
                isX: b
            }));
            f[e] = ha(f[e] || {});
            f[e].push(a);
            p(c, !0) && this.redraw(d);
        },
        isInsidePlot: function(a, b, c) {
            var d = c ? b : a, a = c ? a : b;
            return d >= 0 && d <= this.plotWidth && a >= 0 && a <= this.plotHeight;
        },
        adjustTickAmounts: function() {
            this.options.chart.alignTicks !== !1 && n(this.axes, function(a) {
                a.adjustTickAmount();
            });
            this.maxTicks = null;
        },
        redraw: function(a) {
            var b = this.axes, c = this.series, d = this.pointer, e = this.legend, f = this.isDirtyLegend, g, h, i = this.isDirtyBox, j = c.length, k = j, l = this.renderer, m = l.isHidden(), o = [];
            Ka(a, this);
            m && this.cloneRenderTo();
            for (this.layOutTitles(); k--; ) if (a = c[k], a.options.stacking && (g = !0, a.isDirty)) {
                h = !0;
                break;
            }
            if (h) for (k = j; k--; ) if (a = c[k], a.options.stacking) a.isDirty = !0;
            n(c, function(a) {
                a.isDirty && a.options.legendType === "point" && (f = !0);
            });
            if (f && e.options.enabled) e.render(), this.isDirtyLegend = !1;
            g && this.getStacks();
            if (this.hasCartesianSeries) {
                if (!this.isResizing) this.maxTicks = null, n(b, function(a) {
                    a.setScale();
                });
                this.adjustTickAmounts();
                this.getMargins();
                n(b, function(a) {
                    if (a.isDirtyExtremes) a.isDirtyExtremes = !1, o.push(function() {
                        C(a, "afterSetExtremes", a.getExtremes());
                    });
                    if (a.isDirty || i || g) a.redraw(), i = !0;
                });
            }
            i && this.drawChartBox();
            n(c, function(a) {
                a.isDirty && a.visible && (!a.isCartesian || a.xAxis) && a.redraw();
            });
            d && d.reset && d.reset(!0);
            l.draw();
            C(this, "redraw");
            m && this.cloneRenderTo(!0);
            n(o, function(a) {
                a.call();
            });
        },
        showLoading: function(a) {
            var b = this.options, c = this.loadingDiv, d = b.loading;
            if (!c) this.loadingDiv = c = T(Ba, {
                className: "highcharts-loading"
            }, r(d.style, {
                zIndex: 10,
                display: R
            }), this.container), this.loadingSpan = T("span", null, d.labelStyle, c);
            this.loadingSpan.innerHTML = a || b.lang.loading;
            if (!this.loadingShown) M(c, {
                opacity: 0,
                display: "",
                left: this.plotLeft + "px",
                top: this.plotTop + "px",
                width: this.plotWidth + "px",
                height: this.plotHeight + "px"
            }), Ab(c, {
                opacity: d.style.opacity
            }, {
                duration: d.showDuration || 0
            }), this.loadingShown = !0;
        },
        hideLoading: function() {
            var a = this.options, b = this.loadingDiv;
            b && Ab(b, {
                opacity: 0
            }, {
                duration: a.loading.hideDuration || 100,
                complete: function() {
                    M(b, {
                        display: R
                    });
                }
            });
            this.loadingShown = !1;
        },
        get: function(a) {
            var b = this.axes, c = this.series, d, e;
            for (d = 0; d < b.length; d++) if (b[d].options.id === a) return b[d];
            for (d = 0; d < c.length; d++) if (c[d].options.id === a) return c[d];
            for (d = 0; d < c.length; d++) {
                e = c[d].points || [];
                for (b = 0; b < e.length; b++) if (e[b].id === a) return e[b];
            }
            return null;
        },
        getAxes: function() {
            var a = this, b = this.options, c = b.xAxis = ha(b.xAxis || {}), b = b.yAxis = ha(b.yAxis || {});
            n(c, function(a, b) {
                a.index = b;
                a.isX = !0;
            });
            n(b, function(a, b) {
                a.index = b;
            });
            c = c.concat(b);
            n(c, function(b) {
                new db(a, b);
            });
            a.adjustTickAmounts();
        },
        getSelectedPoints: function() {
            var a = [];
            n(this.series, function(b) {
                a = a.concat(sb(b.points || [], function(a) {
                    return a.selected;
                }));
            });
            return a;
        },
        getSelectedSeries: function() {
            return sb(this.series, function(a) {
                return a.selected;
            });
        },
        getStacks: function() {
            var a = this;
            n(a.yAxis, function(a) {
                if (a.stacks && a.hasVisibleSeries) a.oldStacks = a.stacks;
            });
            n(a.series, function(b) {
                if (b.options.stacking && (b.visible === !0 || a.options.chart.ignoreHiddenSeries === !1)) b.stackKey = b.type + p(b.options.stack, "");
            });
        },
        showResetZoom: function() {
            var a = this, b = O.lang, c = a.options.chart.resetZoomButton, d = c.theme, e = d.states, f = c.relativeTo === "chart" ? null : "plotBox";
            this.resetZoomButton = a.renderer.button(b.resetZoom, null, null, function() {
                a.zoomOut();
            }, d, e && e.hover).attr({
                align: c.position.align,
                title: b.resetZoomTitle
            }).add().align(c.position, !1, f);
        },
        zoomOut: function() {
            var a = this;
            C(a, "selection", {
                resetSelection: !0
            }, function() {
                a.zoom();
            });
        },
        zoom: function(a) {
            var b, c = this.pointer, d = !1, e;
            !a || a.resetSelection ? n(this.axes, function(a) {
                b = a.zoom();
            }) : n(a.xAxis.concat(a.yAxis), function(a) {
                var e = a.axis, h = e.isXAxis;
                if (c[h ? "zoomX" : "zoomY"] || c[h ? "pinchX" : "pinchY"]) b = e.zoom(a.min, a.max), 
                e.displayBtn && (d = !0);
            });
            e = this.resetZoomButton;
            if (d && !e) this.showResetZoom(); else if (!d && U(e)) this.resetZoomButton = e.destroy();
            b && this.redraw(p(this.options.chart.animation, a && a.animation, this.pointCount < 100));
        },
        pan: function(a) {
            var b = this.xAxis[0], c = this.mouseDownX, d = b.pointRange / 2, e = b.getExtremes(), f = b.translate(c - a, !0) + d, c = b.translate(c + this.plotWidth - a, !0) - d;
            (d = this.hoverPoints) && n(d, function(a) {
                a.setState();
            });
            b.series.length && f > I(e.dataMin, e.min) && c < u(e.dataMax, e.max) && b.setExtremes(f, c, !0, !1, {
                trigger: "pan"
            });
            this.mouseDownX = a;
            M(this.container, {
                cursor: "move"
            });
        },
        setTitle: function(a, b) {
            var f;
            var c = this, d = c.options, e;
            e = d.title = x(d.title, a);
            f = d.subtitle = x(d.subtitle, b), d = f;
            n([ [ "title", a, e ], [ "subtitle", b, d ] ], function(a) {
                var b = a[0], d = c[b], e = a[1], a = a[2];
                d && e && (c[b] = d = d.destroy());
                a && a.text && !d && (c[b] = c.renderer.text(a.text, 0, 0, a.useHTML).attr({
                    align: a.align,
                    "class": "highcharts-" + b,
                    zIndex: a.zIndex || 4
                }).css(a.style).add());
            });
            c.layOutTitles();
        },
        layOutTitles: function() {
            var a = 0, b = this.title, c = this.subtitle, d = this.options, e = d.title, d = d.subtitle, f = this.spacingBox.width - 44;
            if (b && (b.css({
                width: (e.width || f) + "px"
            }).align(r({
                y: 15
            }, e), !1, "spacingBox"), !e.floating && !e.verticalAlign)) a = b.getBBox().height, 
            a >= 18 && a <= 25 && (a = 15);
            c && (c.css({
                width: (d.width || f) + "px"
            }).align(r({
                y: a + e.margin
            }, d), !1, "spacingBox"), !d.floating && !d.verticalAlign && (a = ja(a + c.getBBox().height)));
            this.titleOffset = a;
        },
        getChartSize: function() {
            var a = this.options.chart, b = this.renderToClone || this.renderTo;
            this.containerWidth = ib(b, "width");
            this.containerHeight = ib(b, "height");
            this.chartWidth = u(0, a.width || this.containerWidth || 600);
            this.chartHeight = u(0, p(a.height, this.containerHeight > 19 ? this.containerHeight : 400));
        },
        cloneRenderTo: function(a) {
            var b = this.renderToClone, c = this.container;
            a ? b && (this.renderTo.appendChild(c), Ta(b), delete this.renderToClone) : (c && c.parentNode === this.renderTo && this.renderTo.removeChild(c), 
            this.renderToClone = b = this.renderTo.cloneNode(0), M(b, {
                position: "absolute",
                top: "-9999px",
                display: "block"
            }), z.body.appendChild(b), c && b.appendChild(c));
        },
        getContainer: function() {
            var a, b = this.options.chart, c, d, e;
            this.renderTo = a = b.renderTo;
            e = "highcharts-" + yb++;
            if (da(a)) this.renderTo = a = z.getElementById(a);
            a || ua(13, !0);
            c = A(w(a, "data-highcharts-chart"));
            !isNaN(c) && Ea[c] && Ea[c].destroy();
            w(a, "data-highcharts-chart", this.index);
            a.innerHTML = "";
            a.offsetWidth || this.cloneRenderTo();
            this.getChartSize();
            c = this.chartWidth;
            d = this.chartHeight;
            this.container = a = T(Ba, {
                className: "highcharts-container" + (b.className ? " " + b.className : ""),
                id: e
            }, r({
                position: "relative",
                overflow: "hidden",
                width: c + "px",
                height: d + "px",
                textAlign: "left",
                lineHeight: "normal",
                zIndex: 0,
                "-webkit-tap-highlight-color": "rgba(0,0,0,0)"
            }, b.style), this.renderToClone || a);
            this._cursor = a.style.cursor;
            this.renderer = b.forExport ? new Fa(a, c, d, !0) : new Va(a, c, d);
            Z && this.renderer.create(this, a, c, d);
        },
        getMargins: function() {
            var a = this.options.chart, b = a.spacingTop, c = a.spacingRight, d = a.spacingBottom, a = a.spacingLeft, e, f = this.legend, g = this.optionsMarginTop, h = this.optionsMarginLeft, i = this.optionsMarginRight, j = this.optionsMarginBottom, k = this.options.legend, l = p(k.margin, 10), m = k.x, o = k.y, q = k.align, s = k.verticalAlign, r = this.titleOffset;
            this.resetMargins();
            e = this.axisOffset;
            if (r && !t(g)) this.plotTop = u(this.plotTop, r + this.options.title.margin + b);
            if (f.display && !k.floating) if (q === "right") {
                if (!t(i)) this.marginRight = u(this.marginRight, f.legendWidth - m + l + c);
            } else if (q === "left") {
                if (!t(h)) this.plotLeft = u(this.plotLeft, f.legendWidth + m + l + a);
            } else if (s === "top") {
                if (!t(g)) this.plotTop = u(this.plotTop, f.legendHeight + o + l + b);
            } else if (s === "bottom" && !t(j)) this.marginBottom = u(this.marginBottom, f.legendHeight - o + l + d);
            this.extraBottomMargin && (this.marginBottom += this.extraBottomMargin);
            this.extraTopMargin && (this.plotTop += this.extraTopMargin);
            this.hasCartesianSeries && n(this.axes, function(a) {
                a.getOffset();
            });
            t(h) || (this.plotLeft += e[3]);
            t(g) || (this.plotTop += e[0]);
            t(j) || (this.marginBottom += e[2]);
            t(i) || (this.marginRight += e[1]);
            this.setChartSize();
        },
        initReflow: function() {
            function a(a) {
                var g = c.width || ib(d, "width"), h = c.height || ib(d, "height"), a = a ? a.target : E;
                if (!b.hasUserSize && g && h && (a === E || a === z)) {
                    if (g !== b.containerWidth || h !== b.containerHeight) clearTimeout(e), b.reflowTimeout = e = setTimeout(function() {
                        if (b.container) b.setSize(g, h, !1), b.hasUserSize = null;
                    }, 100);
                    b.containerWidth = g;
                    b.containerHeight = h;
                }
            }
            var b = this, c = b.options.chart, d = b.renderTo, e;
            J(E, "resize", a);
            J(b, "destroy", function() {
                aa(E, "resize", a);
            });
        },
        setSize: function(a, b, c) {
            var d = this, e, f, g;
            d.isResizing += 1;
            g = function() {
                d && C(d, "endResize", null, function() {
                    d.isResizing -= 1;
                });
            };
            Ka(c, d);
            d.oldChartHeight = d.chartHeight;
            d.oldChartWidth = d.chartWidth;
            if (t(a)) d.chartWidth = e = u(0, s(a)), d.hasUserSize = !!e;
            if (t(b)) d.chartHeight = f = u(0, s(b));
            M(d.container, {
                width: e + "px",
                height: f + "px"
            });
            d.setChartSize(!0);
            d.renderer.setSize(e, f, c);
            d.maxTicks = null;
            n(d.axes, function(a) {
                a.isDirty = !0;
                a.setScale();
            });
            n(d.series, function(a) {
                a.isDirty = !0;
            });
            d.isDirtyLegend = !0;
            d.isDirtyBox = !0;
            d.getMargins();
            d.redraw(c);
            d.oldChartHeight = null;
            C(d, "resize");
            Ca === !1 ? g() : setTimeout(g, Ca && Ca.duration || 500);
        },
        setChartSize: function(a) {
            var b = this.inverted, c = this.renderer, d = this.chartWidth, e = this.chartHeight, f = this.options.chart, g = f.spacingTop, h = f.spacingRight, i = f.spacingBottom, j = f.spacingLeft, k = this.clipOffset, l, m, o, q;
            this.plotLeft = l = s(this.plotLeft);
            this.plotTop = m = s(this.plotTop);
            this.plotWidth = o = u(0, s(d - l - this.marginRight));
            this.plotHeight = q = u(0, s(e - m - this.marginBottom));
            this.plotSizeX = b ? q : o;
            this.plotSizeY = b ? o : q;
            this.plotBorderWidth = b = f.plotBorderWidth || 0;
            this.spacingBox = c.spacingBox = {
                x: j,
                y: g,
                width: d - j - h,
                height: e - g - i
            };
            this.plotBox = c.plotBox = {
                x: l,
                y: m,
                width: o,
                height: q
            };
            c = ja(u(b, k[3]) / 2);
            d = ja(u(b, k[0]) / 2);
            this.clipBox = {
                x: c,
                y: d,
                width: S(this.plotSizeX - u(b, k[1]) / 2 - c),
                height: S(this.plotSizeY - u(b, k[2]) / 2 - d)
            };
            a || n(this.axes, function(a) {
                a.setAxisSize();
                a.setAxisTranslation();
            });
        },
        resetMargins: function() {
            var a = this.options.chart, b = a.spacingRight, c = a.spacingBottom, d = a.spacingLeft;
            this.plotTop = p(this.optionsMarginTop, a.spacingTop);
            this.marginRight = p(this.optionsMarginRight, b);
            this.marginBottom = p(this.optionsMarginBottom, c);
            this.plotLeft = p(this.optionsMarginLeft, d);
            this.axisOffset = [ 0, 0, 0, 0 ];
            this.clipOffset = [ 0, 0, 0, 0 ];
        },
        drawChartBox: function() {
            var a = this.options.chart, b = this.renderer, c = this.chartWidth, d = this.chartHeight, e = this.chartBackground, f = this.plotBackground, g = this.plotBorder, h = this.plotBGImage, i = a.borderWidth || 0, j = a.backgroundColor, k = a.plotBackgroundColor, l = a.plotBackgroundImage, m = a.plotBorderWidth || 0, o, q = this.plotLeft, p = this.plotTop, n = this.plotWidth, s = this.plotHeight, t = this.plotBox, u = this.clipRect, r = this.clipBox;
            o = i + (a.shadow ? 8 : 0);
            if (i || j) if (e) e.animate(e.crisp(null, null, null, c - o, d - o)); else {
                e = {
                    fill: j || R
                };
                if (i) e.stroke = a.borderColor, e["stroke-width"] = i;
                this.chartBackground = b.rect(o / 2, o / 2, c - o, d - o, a.borderRadius, i).attr(e).add().shadow(a.shadow);
            }
            if (k) f ? f.animate(t) : this.plotBackground = b.rect(q, p, n, s, 0).attr({
                fill: k
            }).add().shadow(a.plotShadow);
            if (l) h ? h.animate(t) : this.plotBGImage = b.image(l, q, p, n, s).add();
            u ? u.animate({
                width: r.width,
                height: r.height
            }) : this.clipRect = b.clipRect(r);
            if (m) g ? g.animate(g.crisp(null, q, p, n, s)) : this.plotBorder = b.rect(q, p, n, s, 0, m).attr({
                stroke: a.plotBorderColor,
                "stroke-width": m,
                zIndex: 1
            }).add();
            this.isDirtyBox = !1;
        },
        propFromSeries: function() {
            var a = this, b = a.options.chart, c, d = a.options.series, e, f;
            n([ "inverted", "angular", "polar" ], function(g) {
                c = $[b.type || b.defaultSeriesType];
                f = a[g] || b[g] || c && c.prototype[g];
                for (e = d && d.length; !f && e--; ) (c = $[d[e].type]) && c.prototype[g] && (f = !0);
                a[g] = f;
            });
        },
        render: function() {
            var a = this, b = a.axes, c = a.renderer, d = a.options, e = d.labels, f = d.credits, g;
            a.setTitle();
            a.legend = new wb(a, d.legend);
            a.getStacks();
            n(b, function(a) {
                a.setScale();
            });
            a.getMargins();
            a.maxTicks = null;
            n(b, function(a) {
                a.setTickPositions(!0);
                a.setMaxTicks();
            });
            a.adjustTickAmounts();
            a.getMargins();
            a.drawChartBox();
            a.hasCartesianSeries && n(b, function(a) {
                a.render();
            });
            if (!a.seriesGroup) a.seriesGroup = c.g("series-group").attr({
                zIndex: 3
            }).add();
            n(a.series, function(a) {
                a.translate();
                a.setTooltipPoints();
                a.render();
            });
            e.items && n(e.items, function(b) {
                var d = r(e.style, b.style), f = A(d.left) + a.plotLeft, g = A(d.top) + a.plotTop + 12;
                delete d.left;
                delete d.top;
                c.text(b.html, f, g).attr({
                    zIndex: 2
                }).css(d).add();
            });
            if (f.enabled && !a.credits) g = f.href, a.credits = c.text(f.text, 0, 0).on("click", function() {
                if (g) location.href = g;
            }).attr({
                align: f.position.align,
                zIndex: 8
            }).css(f.style).add().align(f.position);
            a.hasRendered = !0;
        },
        destroy: function() {
            var a = this, b = a.axes, c = a.series, d = a.container, e, f = d && d.parentNode;
            C(a, "destroy");
            Ea[a.index] = v;
            a.renderTo.removeAttribute("data-highcharts-chart");
            aa(a);
            for (e = b.length; e--; ) b[e] = b[e].destroy();
            for (e = c.length; e--; ) c[e] = c[e].destroy();
            n("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","), function(b) {
                var c = a[b];
                c && c.destroy && (a[b] = c.destroy());
            });
            if (d) d.innerHTML = "", aa(d), f && Ta(d);
            for (e in a) delete a[e];
        },
        isReadyToRender: function() {
            var a = this;
            return !Y && E == E.top && z.readyState !== "complete" || Z && !E.canvg ? (Z ? Ub.push(function() {
                a.firstRender();
            }, a.options.global.canvasToolsURL) : z.attachEvent("onreadystatechange", function() {
                z.detachEvent("onreadystatechange", a.firstRender);
                z.readyState === "complete" && a.firstRender();
            }), !1) : !0;
        },
        firstRender: function() {
            var a = this, b = a.options, c = a.callback;
            if (a.isReadyToRender()) a.getContainer(), C(a, "init"), a.resetMargins(), a.setChartSize(), 
            a.propFromSeries(), a.getAxes(), n(b.series || [], function(b) {
                a.initSeries(b);
            }), C(a, "beforeRender"), a.pointer = new vb(a, b), a.render(), a.renderer.draw(), 
            c && c.apply(a, [ a ]), n(a.callbacks, function(b) {
                b.apply(a, [ a ]);
            }), a.cloneRenderTo(!0), C(a, "load");
        }
    };
    xb.prototype.callbacks = [];
    var Pa = function() {};
    Pa.prototype = {
        init: function(a, b, c) {
            this.series = a;
            this.applyOptions(b, c);
            this.pointAttr = {};
            if (a.options.colorByPoint && (b = a.options.colors || a.chart.options.colors, this.color = this.color || b[a.colorCounter++], 
            a.colorCounter === b.length)) a.colorCounter = 0;
            a.chart.pointCount++;
            return this;
        },
        applyOptions: function(a, b) {
            var c = this.series, d = c.pointValKey, a = Pa.prototype.optionsToObject.call(this, a);
            r(this, a);
            this.options = this.options ? r(this.options, a) : a;
            if (d) this.y = this[d];
            if (this.x === v && c) this.x = b === v ? c.autoIncrement() : b;
            return this;
        },
        optionsToObject: function(a) {
            var b, c = this.series, d = c.pointArrayMap || [ "y" ], e = d.length, f = 0, g = 0;
            if (typeof a === "number" || a === null) b = {
                y: a
            }; else if (Ha(a)) {
                b = {};
                if (a.length > e) {
                    c = typeof a[0];
                    if (c === "string") b.name = a[0]; else if (c === "number") b.x = a[0];
                    f++;
                }
                for (;g < e; ) b[d[g++]] = a[f++];
            } else if (typeof a === "object") {
                b = a;
                if (a.dataLabels) c._hasPointLabels = !0;
                if (a.marker) c._hasPointMarkers = !0;
            }
            return b;
        },
        destroy: function() {
            var a = this.series.chart, b = a.hoverPoints, c;
            a.pointCount--;
            if (b && (this.setState(), fa(b, this), !b.length)) a.hoverPoints = null;
            if (this === a.hoverPoint) this.onMouseOut();
            if (this.graphic || this.dataLabel) aa(this), this.destroyElements();
            this.legendItem && a.legend.destroyItem(this);
            for (c in this) this[c] = null;
        },
        destroyElements: function() {
            for (var a = "graphic,dataLabel,dataLabelUpper,group,connector,shadowGroup".split(","), b, c = 6; c--; ) b = a[c], 
            this[b] && (this[b] = this[b].destroy());
        },
        getLabelConfig: function() {
            return {
                x: this.category,
                y: this.y,
                key: this.name || this.category,
                series: this.series,
                point: this,
                percentage: this.percentage,
                total: this.total || this.stackTotal
            };
        },
        select: function(a, b) {
            var c = this, d = c.series, e = d.chart, a = p(a, !c.selected);
            c.firePointEvent(a ? "select" : "unselect", {
                accumulate: b
            }, function() {
                c.selected = c.options.selected = a;
                d.options.data[na(c, d.data)] = c.options;
                c.setState(a && "select");
                b || n(e.getSelectedPoints(), function(a) {
                    if (a.selected && a !== c) a.selected = a.options.selected = !1, d.options.data[na(a, d.data)] = a.options, 
                    a.setState(""), a.firePointEvent("unselect");
                });
            });
        },
        onMouseOver: function(a) {
            var b = this.series, c = b.chart, d = c.tooltip, e = c.hoverPoint;
            if (e && e !== this) e.onMouseOut();
            this.firePointEvent("mouseOver");
            d && (!d.shared || b.noSharedTooltip) && d.refresh(this, a);
            this.setState("hover");
            c.hoverPoint = this;
        },
        onMouseOut: function() {
            var a = this.series.chart, b = a.hoverPoints;
            if (!b || na(this, b) === -1) this.firePointEvent("mouseOut"), this.setState(), 
            a.hoverPoint = null;
        },
        tooltipFormatter: function(a) {
            var b = this.series, c = b.tooltipOptions, d = p(c.valueDecimals, ""), e = c.valuePrefix || "", f = c.valueSuffix || "";
            n(b.pointArrayMap || [ "y" ], function(b) {
                b = "{point." + b;
                if (e || f) a = a.replace(b + "}", e + b + "}" + f);
                a = a.replace(b + "}", b + ":,." + d + "f}");
            });
            return Aa(a, {
                point: this,
                series: this.series
            });
        },
        update: function(a, b, c) {
            var d = this, e = d.series, f = d.graphic, g, h = e.data, i = e.chart, j = e.options, b = p(b, !0);
            d.firePointEvent("update", {
                options: a
            }, function() {
                d.applyOptions(a);
                U(a) && (e.getAttribs(), f && f.attr(d.pointAttr[e.state]));
                g = na(d, h);
                e.xData[g] = d.x;
                e.yData[g] = e.toYData ? e.toYData(d) : d.y;
                e.zData[g] = d.z;
                j.data[g] = d.options;
                e.isDirty = e.isDirtyData = i.isDirtyBox = !0;
                j.legendType === "point" && i.legend.destroyItem(d);
                b && i.redraw(c);
            });
        },
        remove: function(a, b) {
            var c = this, d = c.series, e = d.chart, f, g = d.data;
            Ka(b, e);
            a = p(a, !0);
            c.firePointEvent("remove", null, function() {
                f = na(c, g);
                g.splice(f, 1);
                d.options.data.splice(f, 1);
                d.xData.splice(f, 1);
                d.yData.splice(f, 1);
                d.zData.splice(f, 1);
                c.destroy();
                d.isDirty = !0;
                d.isDirtyData = !0;
                a && e.redraw();
            });
        },
        firePointEvent: function(a, b, c) {
            var d = this, e = this.series.options;
            (e.point.events[a] || d.options && d.options.events && d.options.events[a]) && this.importEvents();
            a === "click" && e.allowPointSelect && (c = function(a) {
                d.select(null, a.ctrlKey || a.metaKey || a.shiftKey);
            });
            C(this, a, b, c);
        },
        importEvents: function() {
            if (!this.hasImportedEvents) {
                var a = x(this.series.options.point, this.options).events, b;
                this.events = a;
                for (b in a) J(this, b, a[b]);
                this.hasImportedEvents = !0;
            }
        },
        setState: function(a) {
            var b = this.plotX, c = this.plotY, d = this.series, e = d.options.states, f = X[d.type].marker && d.options.marker, g = f && !f.enabled, h = f && f.states[a], i = h && h.enabled === !1, j = d.stateMarkerGraphic, k = this.marker || {}, l = d.chart, m = this.pointAttr, a = a || "";
            if (!(a === this.state || this.selected && a !== "select" || e[a] && e[a].enabled === !1 || a && (i || g && !h.enabled))) {
                if (this.graphic) e = f && this.graphic.symbolName && m[a].r, this.graphic.attr(x(m[a], e ? {
                    x: b - e,
                    y: c - e,
                    width: 2 * e,
                    height: 2 * e
                } : {})); else {
                    if (a && h) e = h.radius, k = k.symbol || d.symbol, j && j.currentSymbol !== k && (j = j.destroy()), 
                    j ? j.attr({
                        x: b - e,
                        y: c - e
                    }) : (d.stateMarkerGraphic = j = l.renderer.symbol(k, b - e, c - e, 2 * e, 2 * e).attr(m[a]).add(d.markerGroup), 
                    j.currentSymbol = k);
                    if (j) j[a && l.isInsidePlot(b, c) ? "show" : "hide"]();
                }
                this.state = a;
            }
        }
    };
    var Q = function() {};
    Q.prototype = {
        isCartesian: !0,
        type: "line",
        pointClass: Pa,
        sorted: !0,
        requireSorting: !0,
        pointAttrToOptions: {
            stroke: "lineColor",
            "stroke-width": "lineWidth",
            fill: "fillColor",
            r: "radius"
        },
        colorCounter: 0,
        init: function(a, b) {
            var c, d, e = a.series;
            this.chart = a;
            this.options = b = this.setOptions(b);
            this.bindAxes();
            r(this, {
                name: b.name,
                state: "",
                pointAttr: {},
                visible: b.visible !== !1,
                selected: b.selected === !0
            });
            if (Z) b.animation = !1;
            d = b.events;
            for (c in d) J(this, c, d[c]);
            if (d && d.click || b.point && b.point.events && b.point.events.click || b.allowPointSelect) a.runTrackerClick = !0;
            this.getColor();
            this.getSymbol();
            this.setData(b.data, !1);
            if (this.isCartesian) a.hasCartesianSeries = !0;
            e.push(this);
            this._i = e.length - 1;
            Kb(e, function(a, b) {
                return p(a.options.index, a._i) - p(b.options.index, a._i);
            });
            n(e, function(a, b) {
                a.index = b;
                a.name = a.name || "Series " + (b + 1);
            });
            c = b.linkedTo;
            this.linkedSeries = [];
            if (da(c) && (c = c === ":previous" ? e[this.index - 1] : a.get(c))) c.linkedSeries.push(this), 
            this.linkedParent = c;
        },
        bindAxes: function() {
            var a = this, b = a.options, c = a.chart, d;
            a.isCartesian && n([ "xAxis", "yAxis" ], function(e) {
                n(c[e], function(c) {
                    d = c.options;
                    if (b[e] === d.index || b[e] !== v && b[e] === d.id || b[e] === v && d.index === 0) c.series.push(a), 
                    a[e] = c, c.isDirty = !0;
                });
                a[e] || ua(18, !0);
            });
        },
        autoIncrement: function() {
            var a = this.options, b = this.xIncrement, b = p(b, a.pointStart, 0);
            this.pointInterval = p(this.pointInterval, a.pointInterval, 1);
            this.xIncrement = b + this.pointInterval;
            return b;
        },
        getSegments: function() {
            var a = -1, b = [], c, d = this.points, e = d.length;
            if (e) if (this.options.connectNulls) {
                for (c = e; c--; ) d[c].y === null && d.splice(c, 1);
                d.length && (b = [ d ]);
            } else n(d, function(c, g) {
                c.y === null ? (g > a + 1 && b.push(d.slice(a + 1, g)), a = g) : g === e - 1 && b.push(d.slice(a + 1, g + 1));
            });
            this.segments = b;
        },
        setOptions: function(a) {
            var b = this.chart.options, c = b.plotOptions, d = c[this.type];
            this.userOptions = a;
            a = x(d, c.series, a);
            this.tooltipOptions = x(b.tooltip, a.tooltip);
            d.marker === null && delete a.marker;
            return a;
        },
        getColor: function() {
            var a = this.options, b = this.userOptions, c = this.chart.options.colors, d = this.chart.counters, e;
            e = a.color || X[this.type].color;
            if (!e && !a.colorByPoint) t(b._colorIndex) ? a = b._colorIndex : (b._colorIndex = d.color, 
            a = d.color++), e = c[a];
            this.color = e;
            d.wrapColor(c.length);
        },
        getSymbol: function() {
            var a = this.userOptions, b = this.options.marker, c = this.chart, d = c.options.symbols, c = c.counters;
            this.symbol = b.symbol;
            if (!this.symbol) t(a._symbolIndex) ? a = a._symbolIndex : (a._symbolIndex = c.symbol, 
            a = c.symbol++), this.symbol = d[a];
            if (/^url/.test(this.symbol)) b.radius = 0;
            c.wrapSymbol(d.length);
        },
        drawLegendSymbol: function(a) {
            var b = this.options, c = b.marker, d = a.options, e;
            e = d.symbolWidth;
            var f = this.chart.renderer, g = this.legendGroup, a = a.baseline - s(f.fontMetrics(d.itemStyle.fontSize).b * .3);
            if (b.lineWidth) {
                d = {
                    "stroke-width": b.lineWidth
                };
                if (b.dashStyle) d.dashstyle = b.dashStyle;
                this.legendLine = f.path([ "M", 0, a, "L", e, a ]).attr(d).add(g);
            }
            if (c && c.enabled) b = c.radius, this.legendSymbol = e = f.symbol(this.symbol, e / 2 - b, a - b, 2 * b, 2 * b).add(g), 
            e.isMarker = !0;
        },
        addPoint: function(a, b, c, d) {
            var e = this.options, f = this.data, g = this.graph, h = this.area, i = this.chart, j = this.xData, k = this.yData, l = this.zData, m = this.names, o = g && g.shift || 0, q = e.data;
            Ka(d, i);
            c && n([ g, h, this.graphNeg, this.areaNeg ], function(a) {
                if (a) a.shift = o + 1;
            });
            if (h) h.isArea = !0;
            b = p(b, !0);
            d = {
                series: this
            };
            this.pointClass.prototype.applyOptions.apply(d, [ a ]);
            j.push(d.x);
            k.push(this.toYData ? this.toYData(d) : d.y);
            l.push(d.z);
            if (m) m[d.x] = d.name;
            q.push(a);
            e.legendType === "point" && this.generatePoints();
            c && (f[0] && f[0].remove ? f[0].remove(!1) : (f.shift(), j.shift(), k.shift(), 
            l.shift(), q.shift()));
            this.isDirtyData = this.isDirty = !0;
            b && (this.getAttribs(), i.redraw());
        },
        setData: function(a, b) {
            var c = this.points, d = this.options, e = this.chart, f = null, g = this.xAxis, h = g && g.categories && !g.categories.length ? [] : null, i;
            this.xIncrement = null;
            this.pointRange = g && g.categories ? 1 : d.pointRange;
            this.colorCounter = 0;
            var j = [], k = [], l = [], m = a ? a.length : [];
            i = p(d.turboThreshold, 1e3);
            var o = this.pointArrayMap, o = o && o.length, q = !!this.toYData;
            if (i && m > i) {
                for (i = 0; f === null && i < m; ) f = a[i], i++;
                if (pa(f)) {
                    f = p(d.pointStart, 0);
                    d = p(d.pointInterval, 1);
                    for (i = 0; i < m; i++) j[i] = f, k[i] = a[i], f += d;
                    this.xIncrement = f;
                } else if (Ha(f)) if (o) for (i = 0; i < m; i++) d = a[i], j[i] = d[0], k[i] = d.slice(1, o + 1); else for (i = 0; i < m; i++) d = a[i], 
                j[i] = d[0], k[i] = d[1];
            } else for (i = 0; i < m; i++) if (a[i] !== v && (d = {
                series: this
            }, this.pointClass.prototype.applyOptions.apply(d, [ a[i] ]), j[i] = d.x, k[i] = q ? this.toYData(d) : d.y, 
            l[i] = d.z, h && d.name)) h[d.x] = d.name;
            da(k[0]) && ua(14, !0);
            this.data = [];
            this.options.data = a;
            this.xData = j;
            this.yData = k;
            this.zData = l;
            this.names = h;
            for (i = c && c.length || 0; i--; ) c[i] && c[i].destroy && c[i].destroy();
            if (g) g.minRange = g.userMinRange;
            this.isDirty = this.isDirtyData = e.isDirtyBox = !0;
            p(b, !0) && e.redraw(!1);
        },
        remove: function(a, b) {
            var c = this, d = c.chart, a = p(a, !0);
            if (!c.isRemoving) c.isRemoving = !0, C(c, "remove", null, function() {
                c.destroy();
                d.isDirtyLegend = d.isDirtyBox = !0;
                a && d.redraw(b);
            });
            c.isRemoving = !1;
        },
        processData: function(a) {
            var b = this.xData, c = this.yData, d = b.length, e;
            e = 0;
            var f, g, h = this.xAxis, i = this.options, j = i.cropThreshold, k = this.isCartesian;
            if (k && !this.isDirty && !h.isDirty && !this.yAxis.isDirty && !a) return !1;
            if (k && this.sorted && (!j || d > j || this.forceCrop)) if (a = h.min, h = h.max, 
            b[d - 1] < a || b[0] > h) b = [], c = []; else if (b[0] < a || b[d - 1] > h) e = this.cropData(this.xData, this.yData, a, h), 
            b = e.xData, c = e.yData, e = e.start, f = !0;
            for (h = b.length - 1; h >= 0; h--) d = b[h] - b[h - 1], d > 0 && (g === v || d < g) ? g = d : d < 0 && this.requireSorting && ua(15);
            this.cropped = f;
            this.cropStart = e;
            this.processedXData = b;
            this.processedYData = c;
            if (i.pointRange === null) this.pointRange = g || 1;
            this.closestPointRange = g;
        },
        cropData: function(a, b, c, d) {
            var e = a.length, f = 0, g = e, h;
            for (h = 0; h < e; h++) if (a[h] >= c) {
                f = u(0, h - 1);
                break;
            }
            for (;h < e; h++) if (a[h] > d) {
                g = h + 1;
                break;
            }
            return {
                xData: a.slice(f, g),
                yData: b.slice(f, g),
                start: f,
                end: g
            };
        },
        generatePoints: function() {
            var a = this.options.data, b = this.data, c, d = this.processedXData, e = this.processedYData, f = this.pointClass, g = d.length, h = this.cropStart || 0, i, j = this.hasGroupedData, k, l = [], m;
            if (!b && !j) b = [], b.length = a.length, b = this.data = b;
            for (m = 0; m < g; m++) i = h + m, j ? l[m] = new f().init(this, [ d[m] ].concat(ha(e[m]))) : (b[i] ? k = b[i] : a[i] !== v && (b[i] = k = new f().init(this, a[i], d[m])), 
            l[m] = k);
            if (b && (g !== (c = b.length) || j)) for (m = 0; m < c; m++) if (m === h && !j && (m += g), 
            b[m]) b[m].destroyElements(), b[m].plotX = v;
            this.data = b;
            this.points = l;
        },
        setStackedPoints: function() {
            if (this.options.stacking && !(this.visible !== !0 && this.chart.options.chart.ignoreHiddenSeries !== !1)) {
                var a = this.processedXData, b = this.processedYData, c = b.length, d = this.options, e = d.threshold, f = d.stack, d = d.stacking, g = this.stackKey, h = "-" + g, i = this.yAxis, j = i.stacks, k = i.oldStacks, l = i.stacksMax, m, o, p, n, s, t;
                for (s = 0; s < c; s++) {
                    o = a[s];
                    t = b[s];
                    n = (m = t < e) ? h : g;
                    l[n] || (l[n] = t);
                    j[n] || (j[n] = {});
                    if (!j[n][o]) k[n] && k[n][o] ? (j[n][o] = k[n][o], j[n][o].total = null) : j[n][o] = new Mb(i, i.options.stackLabels, m, o, f, d);
                    p = j[n][o];
                    o = p.total;
                    p.addValue(t);
                    p.cacheExtremes(this, [ o, o + t ]);
                    if (p.total > l[n] && !m) l[n] = p.total; else if (p.total < l[n] && m) l[n] = p.total;
                }
                i.oldStacks = {};
            }
        },
        getExtremes: function() {
            var a = this.xAxis, b = this.yAxis, c = this.stackKey, d = this.options, e = d.threshold, f = this.processedXData, g = this.processedYData, h = g.length, i = [], j = 0, k = a.min, a = a.max, l, m, o;
            d.stacking && (m = b.stacksMax["-" + c] || e, o = b.stacksMax[c] || e);
            if (!t(m) || !t(o)) {
                for (d = 0; d < h; d++) if (l = f[d], c = g[d], e = c !== null && c !== v && (!b.isLog || c.length || c > 0), 
                l = this.getExtremesFromAll || this.cropped || (f[d + 1] || l) >= k && (f[d - 1] || l) <= a, 
                e && l) if (e = c.length) for (;e--; ) c[e] !== null && (i[j++] = c[e]); else i[j++] = c;
                m = p(m, Ia(i));
                o = p(o, ta(i));
            }
            this.dataMin = m;
            this.dataMax = o;
        },
        translate: function() {
            this.processedXData || this.processData();
            this.generatePoints();
            for (var a = this.options, b = a.stacking, c = this.xAxis, d = c.categories, e = this.yAxis, f = this.points, g = f.length, h = !!this.modifyValue, i = a.pointPlacement, j = i === "between" || pa(i), k = a.threshold, a = 0; a < g; a++) {
                var l = f[a], m = l.x, o = l.y, n = l.low, u = e.stacks[(o < k ? "-" : "") + this.stackKey], r;
                if (e.isLog && o <= 0) l.y = o = null;
                l.plotX = c.translate(m, 0, 0, 0, 1, i);
                if (b && this.visible && u && u[m]) u = u[m], r = u.total, u.cum = n = u.cum - o, 
                o = n + o, u.cum === 0 && (n = p(k, e.min)), e.isLog && n <= 0 && (n = null), b === "percent" && (n = r ? n * 100 / r : 0, 
                o = r ? o * 100 / r : 0), l.percentage = r ? l.y * 100 / r : 0, l.total = l.stackTotal = r, 
                l.stackY = o, u.setOffset(this.pointXOffset || 0, this.barW || 0);
                l.yBottom = t(n) ? e.translate(n, 0, 1, 0, 1) : null;
                h && (o = this.modifyValue(o, l));
                l.plotY = typeof o === "number" && o !== Infinity ? s(e.translate(o, 0, 1, 0, 1) * 10) / 10 : v;
                l.clientX = j ? c.translate(m, 0, 0, 0, 1) : l.plotX;
                l.negative = l.y < (k || 0);
                l.category = d && d[l.x] !== v ? d[l.x] : l.x;
            }
            this.getSegments();
        },
        setTooltipPoints: function(a) {
            var b = [], c, d, e = (c = this.xAxis) ? c.tooltipLen || c.len : this.chart.plotSizeX, f, g, h, i = [];
            if (this.options.enableMouseTracking !== !1) {
                if (a) this.tooltipPoints = null;
                n(this.segments || this.points, function(a) {
                    b = b.concat(a);
                });
                c && c.reversed && (b = b.reverse());
                this.orderTooltipPoints && this.orderTooltipPoints(b);
                a = b.length;
                for (h = 0; h < a; h++) {
                    f = b[h];
                    g = b[h + 1];
                    c = b[h - 1] ? d + 1 : 0;
                    for (d = b[h + 1] ? I(u(0, S((f.clientX + (g ? g.wrappedClientX || g.clientX : e)) / 2)), e) : e; c >= 0 && c <= d; ) i[c++] = f;
                }
                this.tooltipPoints = i;
            }
        },
        tooltipHeaderFormatter: function(a) {
            var b = this.tooltipOptions, c = b.xDateFormat, d = b.dateTimeLabelFormats, e = this.xAxis, f = e && e.options.type === "datetime", b = b.headerFormat, e = e && e.closestPointRange, g;
            if (f && !c) if (e) for (g in y) {
                if (y[g] >= e) {
                    c = d[g];
                    break;
                }
            } else c = d.day;
            f && c && pa(a.key) && (b = b.replace("{point.key}", "{point.key:" + c + "}"));
            return Aa(b, {
                point: a,
                series: this
            });
        },
        onMouseOver: function() {
            var a = this.chart, b = a.hoverSeries;
            if (b && b !== this) b.onMouseOut();
            this.options.events.mouseOver && C(this, "mouseOver");
            this.setState("hover");
            a.hoverSeries = this;
        },
        onMouseOut: function() {
            var a = this.options, b = this.chart, c = b.tooltip, d = b.hoverPoint;
            if (d) d.onMouseOut();
            this && a.events.mouseOut && C(this, "mouseOut");
            c && !a.stickyTracking && (!c.shared || this.noSharedTooltip) && c.hide();
            this.setState();
            b.hoverSeries = null;
        },
        animate: function(a) {
            var b = this, c = b.chart, d = c.renderer, e;
            e = b.options.animation;
            var f = c.clipBox, g = c.inverted, h;
            if (e && !U(e)) e = X[b.type].animation;
            h = "_sharedClip" + e.duration + e.easing;
            if (a) a = c[h], e = c[h + "m"], a || (c[h] = a = d.clipRect(r(f, {
                width: 0
            })), c[h + "m"] = e = d.clipRect(-99, g ? -c.plotLeft : -c.plotTop, 99, g ? c.chartWidth : c.chartHeight)), 
            b.group.clip(a), b.markerGroup.clip(e), b.sharedClipKey = h; else {
                if (a = c[h]) a.animate({
                    width: c.plotSizeX
                }, e), c[h + "m"].animate({
                    width: c.plotSizeX + 99
                }, e);
                b.animate = null;
                b.animationTimeout = setTimeout(function() {
                    b.afterAnimate();
                }, e.duration);
            }
        },
        afterAnimate: function() {
            var a = this.chart, b = this.sharedClipKey, c = this.group;
            c && this.options.clip !== !1 && (c.clip(a.clipRect), this.markerGroup.clip());
            setTimeout(function() {
                b && a[b] && (a[b] = a[b].destroy(), a[b + "m"] = a[b + "m"].destroy());
            }, 100);
        },
        drawPoints: function() {
            var a, b = this.points, c = this.chart, d, e, f, g, h, i, j, k, l = this.options.marker, m, o = this.markerGroup;
            if (l.enabled || this._hasPointMarkers) for (f = b.length; f--; ) if (g = b[f], 
            d = S(g.plotX), e = g.plotY, k = g.graphic, i = g.marker || {}, a = l.enabled && i.enabled === v || i.enabled, 
            m = c.isInsidePlot(s(d), e, c.inverted), a && e !== v && !isNaN(e) && g.y !== null) if (a = g.pointAttr[g.selected ? "select" : ""], 
            h = a.r, i = p(i.symbol, this.symbol), j = i.indexOf("url") === 0, k) k.attr({
                visibility: m ? Y ? "inherit" : "visible" : "hidden"
            }).animate(r({
                x: d - h,
                y: e - h
            }, k.symbolName ? {
                width: 2 * h,
                height: 2 * h
            } : {})); else {
                if (m && (h > 0 || j)) g.graphic = c.renderer.symbol(i, d - h, e - h, 2 * h, 2 * h).attr(a).add(o);
            } else if (k) g.graphic = k.destroy();
        },
        convertAttribs: function(a, b, c, d) {
            var e = this.pointAttrToOptions, f, g, h = {}, a = a || {}, b = b || {}, c = c || {}, d = d || {};
            for (f in e) g = e[f], h[f] = p(a[g], b[f], c[f], d[f]);
            return h;
        },
        getAttribs: function() {
            var a = this, b = a.options, c = X[a.type].marker ? b.marker : b, d = c.states, e = d.hover, f, g = a.color, h = {
                stroke: g,
                fill: g
            }, i = a.points || [], j = [], k, l = a.pointAttrToOptions, m = b.negativeColor, o;
            b.marker ? (e.radius = e.radius || c.radius + 2, e.lineWidth = e.lineWidth || c.lineWidth + 1) : e.color = e.color || oa(e.color || g).brighten(e.brightness).get();
            j[""] = a.convertAttribs(c, h);
            n([ "hover", "select" ], function(b) {
                j[b] = a.convertAttribs(d[b], j[""]);
            });
            a.pointAttr = j;
            for (g = i.length; g--; ) {
                h = i[g];
                if ((c = h.options && h.options.marker || h.options) && c.enabled === !1) c.radius = 0;
                if (h.negative && m) h.color = h.fillColor = m;
                f = b.colorByPoint || h.color;
                if (h.options) for (o in l) t(c[l[o]]) && (f = !0);
                if (f) {
                    c = c || {};
                    k = [];
                    d = c.states || {};
                    f = d.hover = d.hover || {};
                    if (!b.marker) f.color = oa(f.color || h.color).brighten(f.brightness || e.brightness).get();
                    k[""] = a.convertAttribs(r({
                        color: h.color
                    }, c), j[""]);
                    k.hover = a.convertAttribs(d.hover, j.hover, k[""]);
                    k.select = a.convertAttribs(d.select, j.select, k[""]);
                    if (h.negative && b.marker && m) k[""].fill = k.hover.fill = k.select.fill = a.convertAttribs({
                        fillColor: m
                    }).fill;
                } else k = j;
                h.pointAttr = k;
            }
        },
        update: function(a, b) {
            var c = this.chart, d = this.type, a = x(this.userOptions, {
                animation: !1,
                index: this.index,
                pointStart: this.xData[0]
            }, {
                data: this.options.data
            }, a);
            this.remove(!1);
            r(this, $[a.type || d].prototype);
            this.init(c, a);
            p(b, !0) && c.redraw(!1);
        },
        destroy: function() {
            var a = this, b = a.chart, c = /AppleWebKit\/533/.test(Da), d, e, f = a.data || [], g, h, i;
            C(a, "destroy");
            aa(a);
            n([ "xAxis", "yAxis" ], function(b) {
                if (i = a[b]) fa(i.series, a), i.isDirty = i.forceRedraw = !0;
            });
            a.legendItem && a.chart.legend.destroyItem(a);
            for (e = f.length; e--; ) (g = f[e]) && g.destroy && g.destroy();
            a.points = null;
            clearTimeout(a.animationTimeout);
            n("area,graph,dataLabelsGroup,group,markerGroup,tracker,graphNeg,areaNeg,posClip,negClip".split(","), function(b) {
                a[b] && (d = c && b === "group" ? "hide" : "destroy", a[b][d]());
            });
            if (b.hoverSeries === a) b.hoverSeries = null;
            fa(b.series, a);
            for (h in a) delete a[h];
        },
        drawDataLabels: function() {
            var a = this, b = a.options.dataLabels, c = a.points, d, e, f, g;
            if (b.enabled || a._hasPointLabels) a.dlProcessOptions && a.dlProcessOptions(b), 
            g = a.plotGroup("dataLabelsGroup", "data-labels", a.visible ? "visible" : "hidden", b.zIndex || 6), 
            e = b, n(c, function(c) {
                var i, j = c.dataLabel, k, l, m = c.connector, o = !0;
                d = c.options && c.options.dataLabels;
                i = e.enabled || d && d.enabled;
                if (j && !i) c.dataLabel = j.destroy(); else if (i) {
                    b = x(e, d);
                    i = b.rotation;
                    k = c.getLabelConfig();
                    f = b.format ? Aa(b.format, k) : b.formatter.call(k, b);
                    b.style.color = p(b.color, b.style.color, a.color, "black");
                    if (j) if (t(f)) j.attr({
                        text: f
                    }), o = !1; else {
                        if (c.dataLabel = j = j.destroy(), m) c.connector = m.destroy();
                    } else if (t(f)) {
                        j = {
                            fill: b.backgroundColor,
                            stroke: b.borderColor,
                            "stroke-width": b.borderWidth,
                            r: b.borderRadius || 0,
                            rotation: i,
                            padding: b.padding,
                            zIndex: 1
                        };
                        for (l in j) j[l] === v && delete j[l];
                        j = c.dataLabel = a.chart.renderer[i ? "text" : "label"](f, 0, -999, null, null, null, b.useHTML).attr(j).css(b.style).add(g).shadow(b.shadow);
                    }
                    j && a.alignDataLabel(c, j, b, null, o);
                }
            });
        },
        alignDataLabel: function(a, b, c, d, e) {
            var f = this.chart, g = f.inverted, h = p(a.plotX, -999), i = p(a.plotY, -999), a = b.getBBox(), d = r({
                x: g ? f.plotWidth - i : h,
                y: s(g ? f.plotHeight - h : i),
                width: 0,
                height: 0
            }, d);
            r(c, {
                width: a.width,
                height: a.height
            });
            c.rotation ? (d = {
                align: c.align,
                x: d.x + c.x + d.width / 2,
                y: d.y + c.y + d.height / 2
            }, b[e ? "attr" : "animate"](d)) : (b.align(c, null, d), d = b.alignAttr);
            b.attr({
                visibility: c.crop === !1 || f.isInsidePlot(d.x, d.y) && f.isInsidePlot(d.x + a.width, d.y + a.height) ? f.renderer.isSVG ? "inherit" : "visible" : "hidden"
            });
        },
        getSegmentPath: function(a) {
            var b = this, c = [], d = b.options.step;
            n(a, function(e, f) {
                var g = e.plotX, h = e.plotY, i;
                b.getPointSpline ? c.push.apply(c, b.getPointSpline(a, e, f)) : (c.push(f ? "L" : "M"), 
                d && f && (i = a[f - 1], d === "right" ? c.push(i.plotX, h) : d === "center" ? c.push((i.plotX + g) / 2, i.plotY, (i.plotX + g) / 2, h) : c.push(g, i.plotY)), 
                c.push(e.plotX, e.plotY));
            });
            return c;
        },
        getGraphPath: function() {
            var a = this, b = [], c, d = [];
            n(a.segments, function(e) {
                c = a.getSegmentPath(e);
                e.length > 1 ? b = b.concat(c) : d.push(e[0]);
            });
            a.singlePoints = d;
            return a.graphPath = b;
        },
        drawGraph: function() {
            var a = this, b = this.options, c = [ [ "graph", b.lineColor || this.color ] ], d = b.lineWidth, e = b.dashStyle, f = this.getGraphPath(), g = b.negativeColor;
            g && c.push([ "graphNeg", g ]);
            n(c, function(c, g) {
                var j = c[0], k = a[j];
                if (k) Wa(k), k.animate({
                    d: f
                }); else if (d && f.length) {
                    k = {
                        stroke: c[1],
                        "stroke-width": d,
                        zIndex: 1
                    };
                    if (e) k.dashstyle = e;
                    a[j] = a.chart.renderer.path(f).attr(k).add(a.group).shadow(!g && b.shadow);
                }
            });
        },
        clipNeg: function() {
            var a = this.options, b = this.chart, c = b.renderer, d = a.negativeColor || a.negativeFillColor, e, f = this.graph, g = this.area, h = this.posClip, i = this.negClip;
            e = b.chartWidth;
            var j = b.chartHeight, k = u(e, j), l = this.yAxis;
            if (d && (f || g)) {
                d = s(l.toPixels(a.threshold || 0, !0));
                a = {
                    x: 0,
                    y: 0,
                    width: k,
                    height: d
                };
                k = {
                    x: 0,
                    y: d,
                    width: k,
                    height: k
                };
                if (b.inverted) a.height = k.y = b.plotWidth - d, c.isVML && (a = {
                    x: b.plotWidth - d - b.plotLeft,
                    y: 0,
                    width: e,
                    height: j
                }, k = {
                    x: d + b.plotLeft - e,
                    y: 0,
                    width: b.plotLeft + d,
                    height: e
                });
                l.reversed ? (b = k, e = a) : (b = a, e = k);
                h ? (h.animate(b), i.animate(e)) : (this.posClip = h = c.clipRect(b), this.negClip = i = c.clipRect(e), 
                f && this.graphNeg && (f.clip(h), this.graphNeg.clip(i)), g && (g.clip(h), this.areaNeg.clip(i)));
            }
        },
        invertGroups: function() {
            function a() {
                var a = {
                    width: b.yAxis.len,
                    height: b.xAxis.len
                };
                n([ "group", "markerGroup" ], function(c) {
                    b[c] && b[c].attr(a).invert();
                });
            }
            var b = this, c = b.chart;
            if (b.xAxis) J(c, "resize", a), J(b, "destroy", function() {
                aa(c, "resize", a);
            }), a(), b.invertGroups = a;
        },
        plotGroup: function(a, b, c, d, e) {
            var f = this[a], g = !f;
            g && (this[a] = f = this.chart.renderer.g(b).attr({
                visibility: c,
                zIndex: d || .1
            }).add(e));
            f[g ? "attr" : "animate"](this.getPlotBox());
            return f;
        },
        getPlotBox: function() {
            return {
                translateX: this.xAxis ? this.xAxis.left : this.chart.plotLeft,
                translateY: this.yAxis ? this.yAxis.top : this.chart.plotTop,
                scaleX: 1,
                scaleY: 1
            };
        },
        render: function() {
            var a = this.chart, b, c = this.options, d = c.animation && !!this.animate && a.renderer.isSVG, e = this.visible ? "visible" : "hidden", f = c.zIndex, g = this.hasRendered, h = a.seriesGroup;
            b = this.plotGroup("group", "series", e, f, h);
            this.markerGroup = this.plotGroup("markerGroup", "markers", e, f, h);
            d && this.animate(!0);
            this.getAttribs();
            b.inverted = this.isCartesian ? a.inverted : !1;
            this.drawGraph && (this.drawGraph(), this.clipNeg());
            this.drawDataLabels();
            this.drawPoints();
            this.options.enableMouseTracking !== !1 && this.drawTracker();
            a.inverted && this.invertGroups();
            c.clip !== !1 && !this.sharedClipKey && !g && b.clip(a.clipRect);
            d ? this.animate() : g || this.afterAnimate();
            this.isDirty = this.isDirtyData = !1;
            this.hasRendered = !0;
        },
        redraw: function() {
            var a = this.chart, b = this.isDirtyData, c = this.group, d = this.xAxis, e = this.yAxis;
            c && (a.inverted && c.attr({
                width: a.plotWidth,
                height: a.plotHeight
            }), c.animate({
                translateX: p(d && d.left, a.plotLeft),
                translateY: p(e && e.top, a.plotTop)
            }));
            this.translate();
            this.setTooltipPoints(!0);
            this.render();
            b && C(this, "updatedData");
        },
        setState: function(a) {
            var b = this.options, c = this.graph, d = this.graphNeg, e = b.states, b = b.lineWidth, a = a || "";
            if (this.state !== a) this.state = a, e[a] && e[a].enabled === !1 || (a && (b = e[a].lineWidth || b + 1), 
            c && !c.dashstyle && (a = {
                "stroke-width": b
            }, c.attr(a), d && d.attr(a)));
        },
        setVisible: function(a, b) {
            var c = this, d = c.chart, e = c.legendItem, f, g = d.options.chart.ignoreHiddenSeries, h = c.visible;
            f = (c.visible = a = c.userOptions.visible = a === v ? !h : a) ? "show" : "hide";
            n([ "group", "dataLabelsGroup", "markerGroup", "tracker" ], function(a) {
                if (c[a]) c[a][f]();
            });
            if (d.hoverSeries === c) c.onMouseOut();
            e && d.legend.colorizeItem(c, a);
            c.isDirty = !0;
            c.options.stacking && n(d.series, function(a) {
                if (a.options.stacking && a.visible) a.isDirty = !0;
            });
            n(c.linkedSeries, function(b) {
                b.setVisible(a, !1);
            });
            if (g) d.isDirtyBox = !0;
            b !== !1 && d.redraw();
            C(c, f);
        },
        show: function() {
            this.setVisible(!0);
        },
        hide: function() {
            this.setVisible(!1);
        },
        select: function(a) {
            this.selected = a = a === v ? !this.selected : a;
            if (this.checkbox) this.checkbox.checked = a;
            C(this, a ? "select" : "unselect");
        },
        drawTracker: function() {
            var a = this, b = a.options, c = b.trackByArea, d = [].concat(c ? a.areaPath : a.graphPath), e = d.length, f = a.chart, g = f.pointer, h = f.renderer, i = f.options.tooltip.snap, j = a.tracker, k = b.cursor, k = k && {
                cursor: k
            }, l = a.singlePoints, m, o = function() {
                if (f.hoverSeries !== a) a.onMouseOver();
            };
            if (e && !c) for (m = e + 1; m--; ) d[m] === "M" && d.splice(m + 1, 0, d[m + 1] - i, d[m + 2], "L"), 
            (m && d[m] === "M" || m === e) && d.splice(m, 0, "L", d[m - 2] + i, d[m - 1]);
            for (m = 0; m < l.length; m++) e = l[m], d.push("M", e.plotX - i, e.plotY, "L", e.plotX + i, e.plotY);
            if (j) j.attr({
                d: d
            }); else if (a.tracker = j = h.path(d).attr({
                "class": "highcharts-tracker",
                "stroke-linejoin": "round",
                visibility: a.visible ? "visible" : "hidden",
                stroke: Qb,
                fill: c ? Qb : R,
                "stroke-width": b.lineWidth + (c ? 0 : 2 * i),
                zIndex: 2
            }).addClass("highcharts-tracker").on("mouseover", o).on("mouseout", function(a) {
                g.onTrackerMouseOut(a);
            }).css(k).add(a.markerGroup), hb) j.on("touchstart", o);
        }
    };
    L = ga(Q);
    $.line = L;
    X.area = x(W, {
        threshold: 0
    });
    L = ga(Q, {
        type: "area",
        getSegments: function() {
            var a = [], b = [], c = [], d = this.xAxis, e = this.yAxis, f = e.stacks[this.stackKey], g = {}, h, i, j = this.points, k, l, m;
            if (this.options.stacking && !this.cropped) {
                for (l = 0; l < j.length; l++) g[j[l].x] = j[l];
                for (m in f) c.push(+m);
                c.sort(function(a, b) {
                    return a - b;
                });
                n(c, function(a) {
                    g[a] ? b.push(g[a]) : (h = d.translate(a), k = f[a].percent ? f[a].total ? f[a].cum * 100 / f[a].total : 0 : f[a].cum, 
                    i = e.toPixels(k, !0), b.push({
                        y: null,
                        plotX: h,
                        clientX: h,
                        plotY: i,
                        yBottom: i,
                        onMouseOver: xa
                    }));
                });
                b.length && a.push(b);
            } else Q.prototype.getSegments.call(this), a = this.segments;
            this.segments = a;
        },
        getSegmentPath: function(a) {
            var b = Q.prototype.getSegmentPath.call(this, a), c = [].concat(b), d, e = this.options;
            b.length === 3 && c.push("L", b[1], b[2]);
            if (e.stacking && !this.closedStacks) for (d = a.length - 1; d >= 0; d--) d < a.length - 1 && e.step && c.push(a[d + 1].plotX, a[d].yBottom), 
            c.push(a[d].plotX, a[d].yBottom); else this.closeSegment(c, a);
            this.areaPath = this.areaPath.concat(c);
            return b;
        },
        closeSegment: function(a, b) {
            var c = this.yAxis.getThreshold(this.options.threshold);
            a.push("L", b[b.length - 1].plotX, c, "L", b[0].plotX, c);
        },
        drawGraph: function() {
            this.areaPath = [];
            Q.prototype.drawGraph.apply(this);
            var a = this, b = this.areaPath, c = this.options, d = c.negativeColor, e = c.negativeFillColor, f = [ [ "area", this.color, c.fillColor ] ];
            (d || e) && f.push([ "areaNeg", d, e ]);
            n(f, function(d) {
                var e = d[0], f = a[e];
                f ? f.animate({
                    d: b
                }) : a[e] = a.chart.renderer.path(b).attr({
                    fill: p(d[2], oa(d[1]).setOpacity(p(c.fillOpacity, .75)).get()),
                    zIndex: 0
                }).add(a.group);
            });
        },
        drawLegendSymbol: function(a, b) {
            b.legendSymbol = this.chart.renderer.rect(0, a.baseline - 11, a.options.symbolWidth, 12, 2).attr({
                zIndex: 3
            }).add(b.legendGroup);
        }
    });
    $.area = L;
    X.spline = x(W);
    K = ga(Q, {
        type: "spline",
        getPointSpline: function(a, b, c) {
            var d = b.plotX, e = b.plotY, f = a[c - 1], g = a[c + 1], h, i, j, k;
            if (f && g) {
                a = f.plotY;
                j = g.plotX;
                var g = g.plotY, l;
                h = (1.5 * d + f.plotX) / 2.5;
                i = (1.5 * e + a) / 2.5;
                j = (1.5 * d + j) / 2.5;
                k = (1.5 * e + g) / 2.5;
                l = (k - i) * (j - d) / (j - h) + e - k;
                i += l;
                k += l;
                i > a && i > e ? (i = u(a, e), k = 2 * e - i) : i < a && i < e && (i = I(a, e), 
                k = 2 * e - i);
                k > g && k > e ? (k = u(g, e), i = 2 * e - k) : k < g && k < e && (k = I(g, e), 
                i = 2 * e - k);
                b.rightContX = j;
                b.rightContY = k;
            }
            c ? (b = [ "C", f.rightContX || f.plotX, f.rightContY || f.plotY, h || d, i || e, d, e ], 
            f.rightContX = f.rightContY = null) : b = [ "M", d, e ];
            return b;
        }
    });
    $.spline = K;
    X.areaspline = x(X.area);
    la = L.prototype;
    K = ga(K, {
        type: "areaspline",
        closedStacks: !0,
        getSegmentPath: la.getSegmentPath,
        closeSegment: la.closeSegment,
        drawGraph: la.drawGraph,
        drawLegendSymbol: la.drawLegendSymbol
    });
    $.areaspline = K;
    X.column = x(W, {
        borderColor: "#FFFFFF",
        borderWidth: 1,
        borderRadius: 0,
        groupPadding: .2,
        marker: null,
        pointPadding: .1,
        minPointLength: 0,
        cropThreshold: 50,
        pointRange: null,
        states: {
            hover: {
                brightness: .1,
                shadow: !1
            },
            select: {
                color: "#C0C0C0",
                borderColor: "#000000",
                shadow: !1
            }
        },
        dataLabels: {
            align: null,
            verticalAlign: null,
            y: null
        },
        stickyTracking: !1,
        threshold: 0
    });
    K = ga(Q, {
        type: "column",
        tooltipOutsidePlot: !0,
        pointAttrToOptions: {
            stroke: "borderColor",
            "stroke-width": "borderWidth",
            fill: "color",
            r: "borderRadius"
        },
        trackerGroups: [ "group", "dataLabelsGroup" ],
        init: function() {
            Q.prototype.init.apply(this, arguments);
            var a = this, b = a.chart;
            b.hasRendered && n(b.series, function(b) {
                if (b.type === a.type) b.isDirty = !0;
            });
        },
        getColumnMetrics: function() {
            var a = this, b = a.options, c = a.xAxis, d = a.yAxis, e = c.reversed, f, g = {}, h, i = 0;
            b.grouping === !1 ? i = 1 : n(a.chart.series, function(b) {
                var c = b.options, e = b.yAxis;
                if (b.type === a.type && b.visible && d.len === e.len && d.pos === e.pos) c.stacking ? (f = b.stackKey, 
                g[f] === v && (g[f] = i++), h = g[f]) : c.grouping !== !1 && (h = i++), b.columnIndex = h;
            });
            var c = I(P(c.transA) * (c.ordinalSlope || b.pointRange || c.closestPointRange || 1), c.len), j = c * b.groupPadding, k = (c - 2 * j) / i, l = b.pointWidth, b = t(l) ? (k - l) / 2 : k * b.pointPadding, l = p(l, k - 2 * b);
            return a.columnMetrics = {
                width: l,
                offset: b + (j + ((e ? i - (a.columnIndex || 0) : a.columnIndex) || 0) * k - c / 2) * (e ? -1 : 1)
            };
        },
        translate: function() {
            var a = this.chart, b = this.options, c = b.borderWidth, d = this.yAxis, e = this.translatedThreshold = d.getThreshold(b.threshold), f = p(b.minPointLength, 5), b = this.getColumnMetrics(), g = b.width, h = this.barW = ja(u(g, 1 + 2 * c)), i = this.pointXOffset = b.offset;
            Q.prototype.translate.apply(this);
            n(this.points, function(b) {
                var k = I(u(-999, b.plotY), d.len + 999), l = p(b.yBottom, e), m = b.plotX + i, o = ja(I(k, l)), k = ja(u(k, l) - o);
                P(k) < f && f && (k = f, o = s(P(o - e) > f ? l - f : e - (d.translate(b.y, 0, 1, 0, 1) <= e ? f : 0)));
                b.barX = m;
                b.pointWidth = g;
                b.shapeType = "rect";
                b.shapeArgs = b = a.renderer.Element.prototype.crisp.call(0, c, m, o, h, k);
                c % 2 && (b.y -= 1, b.height += 1);
            });
        },
        getSymbol: xa,
        drawLegendSymbol: L.prototype.drawLegendSymbol,
        drawGraph: xa,
        drawPoints: function() {
            var a = this, b = a.options, c = a.chart.renderer, d;
            n(a.points, function(e) {
                var f = e.plotY, g = e.graphic;
                if (f !== v && !isNaN(f) && e.y !== null) d = e.shapeArgs, g ? (Wa(g), g.animate(x(d))) : e.graphic = c[e.shapeType](d).attr(e.pointAttr[e.selected ? "select" : ""]).add(a.group).shadow(b.shadow, null, b.stacking && !b.borderRadius); else if (g) e.graphic = g.destroy();
            });
        },
        drawTracker: function() {
            var a = this, b = a.chart, c = b.pointer, d = a.options.cursor, e = d && {
                cursor: d
            }, f = function(c) {
                var d = c.target, e;
                if (b.hoverSeries !== a) a.onMouseOver();
                for (;d && !e; ) e = d.point, d = d.parentNode;
                if (e !== v && e !== b.hoverPoint) e.onMouseOver(c);
            };
            n(a.points, function(a) {
                if (a.graphic) a.graphic.element.point = a;
                if (a.dataLabel) a.dataLabel.element.point = a;
            });
            a._hasTracking ? a._hasTracking = !0 : n(a.trackerGroups, function(b) {
                if (a[b] && (a[b].addClass("highcharts-tracker").on("mouseover", f).on("mouseout", function(a) {
                    c.onTrackerMouseOut(a);
                }).css(e), hb)) a[b].on("touchstart", f);
            });
        },
        alignDataLabel: function(a, b, c, d, e) {
            var f = this.chart, g = f.inverted, h = a.dlBox || a.shapeArgs, i = a.below || a.plotY > p(this.translatedThreshold, f.plotSizeY), j = p(c.inside, !!this.options.stacking);
            if (h && (d = x(h), g && (d = {
                x: f.plotWidth - d.y - d.height,
                y: f.plotHeight - d.x - d.width,
                width: d.height,
                height: d.width
            }), !j)) g ? (d.x += i ? 0 : d.width, d.width = 0) : (d.y += i ? d.height : 0, d.height = 0);
            c.align = p(c.align, !g || j ? "center" : i ? "right" : "left");
            c.verticalAlign = p(c.verticalAlign, g || j ? "middle" : i ? "top" : "bottom");
            Q.prototype.alignDataLabel.call(this, a, b, c, d, e);
        },
        animate: function(a) {
            var b = this.yAxis, c = this.options, d = this.chart.inverted, e = {};
            if (Y) a ? (e.scaleY = .001, a = I(b.pos + b.len, u(b.pos, b.toPixels(c.threshold))), 
            d ? e.translateX = a - b.len : e.translateY = a, this.group.attr(e)) : (e.scaleY = 1, 
            e[d ? "translateX" : "translateY"] = b.pos, this.group.animate(e, this.options.animation), 
            this.animate = null);
        },
        remove: function() {
            var a = this, b = a.chart;
            b.hasRendered && n(b.series, function(b) {
                if (b.type === a.type) b.isDirty = !0;
            });
            Q.prototype.remove.apply(a, arguments);
        }
    });
    $.column = K;
    X.bar = x(X.column);
    la = ga(K, {
        type: "bar",
        inverted: !0
    });
    $.bar = la;
    X.scatter = x(W, {
        lineWidth: 0,
        tooltip: {
            headerFormat: '<span style="font-size: 10px; color:{series.color}">{series.name}</span><br/>',
            pointFormat: "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>",
            followPointer: !0
        },
        stickyTracking: !1
    });
    la = ga(Q, {
        type: "scatter",
        sorted: !1,
        requireSorting: !1,
        noSharedTooltip: !0,
        trackerGroups: [ "markerGroup" ],
        drawTracker: K.prototype.drawTracker,
        setTooltipPoints: xa
    });
    $.scatter = la;
    X.pie = x(W, {
        borderColor: "#FFFFFF",
        borderWidth: 1,
        center: [ null, null ],
        clip: !1,
        colorByPoint: !0,
        dataLabels: {
            distance: 30,
            enabled: !0,
            formatter: function() {
                return this.point.name;
            }
        },
        ignoreHiddenPoint: !0,
        legendType: "point",
        marker: null,
        size: null,
        showInLegend: !1,
        slicedOffset: 10,
        states: {
            hover: {
                brightness: .1,
                shadow: !1
            }
        },
        stickyTracking: !1,
        tooltip: {
            followPointer: !0
        }
    });
    W = {
        type: "pie",
        isCartesian: !1,
        pointClass: ga(Pa, {
            init: function() {
                Pa.prototype.init.apply(this, arguments);
                var a = this, b;
                if (a.y < 0) a.y = null;
                r(a, {
                    visible: a.visible !== !1,
                    name: p(a.name, "Slice")
                });
                b = function(b) {
                    a.slice(b.type === "select");
                };
                J(a, "select", b);
                J(a, "unselect", b);
                return a;
            },
            setVisible: function(a) {
                var b = this, c = b.series, d = c.chart, e;
                b.visible = b.options.visible = a = a === v ? !b.visible : a;
                c.options.data[na(b, c.data)] = b.options;
                e = a ? "show" : "hide";
                n([ "graphic", "dataLabel", "connector", "shadowGroup" ], function(a) {
                    if (b[a]) b[a][e]();
                });
                b.legendItem && d.legend.colorizeItem(b, a);
                if (!c.isDirty && c.options.ignoreHiddenPoint) c.isDirty = !0, d.redraw();
            },
            slice: function(a, b, c) {
                var d = this.series;
                Ka(c, d.chart);
                p(b, !0);
                this.sliced = this.options.sliced = a = t(a) ? a : !this.sliced;
                d.options.data[na(this, d.data)] = this.options;
                a = a ? this.slicedTranslation : {
                    translateX: 0,
                    translateY: 0
                };
                this.graphic.animate(a);
                this.shadowGroup && this.shadowGroup.animate(a);
            }
        }),
        requireSorting: !1,
        noSharedTooltip: !0,
        trackerGroups: [ "group", "dataLabelsGroup" ],
        pointAttrToOptions: {
            stroke: "borderColor",
            "stroke-width": "borderWidth",
            fill: "color"
        },
        getColor: xa,
        animate: function(a) {
            var b = this, c = b.points, d = b.startAngleRad;
            if (!a) n(c, function(a) {
                var c = a.graphic, a = a.shapeArgs;
                c && (c.attr({
                    r: b.center[3] / 2,
                    start: d,
                    end: d
                }), c.animate({
                    r: a.r,
                    start: a.start,
                    end: a.end
                }, b.options.animation));
            }), b.animate = null;
        },
        setData: function(a, b) {
            Q.prototype.setData.call(this, a, !1);
            this.processData();
            this.generatePoints();
            p(b, !0) && this.chart.redraw();
        },
        generatePoints: function() {
            var a, b = 0, c, d, e, f = this.options.ignoreHiddenPoint;
            Q.prototype.generatePoints.call(this);
            c = this.points;
            d = c.length;
            for (a = 0; a < d; a++) e = c[a], b += f && !e.visible ? 0 : e.y;
            this.total = b;
            for (a = 0; a < d; a++) e = c[a], e.percentage = e.y / b * 100, e.total = b;
        },
        getCenter: function() {
            var a = this.options, b = this.chart, c = 2 * (a.slicedOffset || 0), d, e = b.plotWidth - 2 * c, f = b.plotHeight - 2 * c, b = a.center, a = [ p(b[0], "50%"), p(b[1], "50%"), a.size || "100%", a.innerSize || 0 ], g = I(e, f), h;
            return Na(a, function(a, b) {
                h = /%$/.test(a);
                d = b < 2 || b === 2 && h;
                return (h ? [ e, f, g, g ][b] * A(a) / 100 : a) + (d ? c : 0);
            });
        },
        translate: function(a) {
            this.generatePoints();
            var b = 0, c = this.options, d = c.slicedOffset, e = d + c.borderWidth, f, g, h, i = this.startAngleRad = Ma / 180 * ((c.startAngle || 0) % 360 - 90), j = this.points, k = 2 * Ma, l = c.dataLabels.distance, c = c.ignoreHiddenPoint, m, o = j.length, n;
            if (!a) this.center = a = this.getCenter();
            this.getX = function(b, c) {
                h = N.asin((b - a[1]) / (a[2] / 2 + l));
                return a[0] + (c ? -1 : 1) * V(h) * (a[2] / 2 + l);
            };
            for (m = 0; m < o; m++) {
                n = j[m];
                f = s((i + b * k) * 1e3) / 1e3;
                if (!c || n.visible) b += n.percentage / 100;
                g = s((i + b * k) * 1e3) / 1e3;
                n.shapeType = "arc";
                n.shapeArgs = {
                    x: a[0],
                    y: a[1],
                    r: a[2] / 2,
                    innerR: a[3] / 2,
                    start: f,
                    end: g
                };
                h = (g + f) / 2;
                h > .75 * k && (h -= 2 * Ma);
                n.slicedTranslation = {
                    translateX: s(V(h) * d),
                    translateY: s(ba(h) * d)
                };
                f = V(h) * a[2] / 2;
                g = ba(h) * a[2] / 2;
                n.tooltipPos = [ a[0] + f * .7, a[1] + g * .7 ];
                n.half = h < k / 4 ? 0 : 1;
                n.angle = h;
                e = I(e, l / 2);
                n.labelPos = [ a[0] + f + V(h) * l, a[1] + g + ba(h) * l, a[0] + f + V(h) * e, a[1] + g + ba(h) * e, a[0] + f, a[1] + g, l < 0 ? "center" : n.half ? "right" : "left", h ];
            }
            this.setTooltipPoints();
        },
        drawGraph: null,
        drawPoints: function() {
            var a = this, b = a.chart.renderer, c, d, e = a.options.shadow, f, g;
            if (e && !a.shadowGroup) a.shadowGroup = b.g("shadow").add(a.group);
            n(a.points, function(h) {
                d = h.graphic;
                g = h.shapeArgs;
                f = h.shadowGroup;
                if (e && !f) f = h.shadowGroup = b.g("shadow").add(a.shadowGroup);
                c = h.sliced ? h.slicedTranslation : {
                    translateX: 0,
                    translateY: 0
                };
                f && f.attr(c);
                d ? d.animate(r(g, c)) : h.graphic = d = b.arc(g).setRadialReference(a.center).attr(h.pointAttr[h.selected ? "select" : ""]).attr({
                    "stroke-linejoin": "round"
                }).attr(c).add(a.group).shadow(e, f);
                h.visible === !1 && h.setVisible(!1);
            });
        },
        drawDataLabels: function() {
            var a = this, b = a.data, c, d = a.chart, e = a.options.dataLabels, f = p(e.connectorPadding, 10), g = p(e.connectorWidth, 1), h = d.plotWidth, d = d.plotHeight, i, j, k = p(e.softConnector, !0), l = e.distance, m = a.center, o = m[2] / 2, q = m[1], t = l > 0, r, w, v, x, A = [ [], [] ], z, y, G, H, B, C = [ 0, 0, 0, 0 ], I = function(a, b) {
                return b.y - a.y;
            }, M = function(a, b) {
                a.sort(function(a, c) {
                    return a.angle !== void 0 && (c.angle - a.angle) * b;
                });
            };
            if (a.visible && (e.enabled || a._hasPointLabels)) {
                Q.prototype.drawDataLabels.apply(a);
                n(b, function(a) {
                    a.dataLabel && A[a.half].push(a);
                });
                for (H = 0; !x && b[H]; ) x = b[H] && b[H].dataLabel && (b[H].dataLabel.getBBox().height || 21), 
                H++;
                for (H = 2; H--; ) {
                    var b = [], L = [], J = A[H], K = J.length, E;
                    M(J, H - .5);
                    if (l > 0) {
                        for (B = q - o - l; B <= q + o + l; B += x) b.push(B);
                        w = b.length;
                        if (K > w) {
                            c = [].concat(J);
                            c.sort(I);
                            for (B = K; B--; ) c[B].rank = B;
                            for (B = K; B--; ) J[B].rank >= w && J.splice(B, 1);
                            K = J.length;
                        }
                        for (B = 0; B < K; B++) {
                            c = J[B];
                            v = c.labelPos;
                            c = 9999;
                            var O, N;
                            for (N = 0; N < w; N++) O = P(b[N] - v[1]), O < c && (c = O, E = N);
                            if (E < B && b[B] !== null) E = B; else for (w < K - B + E && b[B] !== null && (E = w - K + B); b[E] === null; ) E++;
                            L.push({
                                i: E,
                                y: b[E]
                            });
                            b[E] = null;
                        }
                        L.sort(I);
                    }
                    for (B = 0; B < K; B++) {
                        c = J[B];
                        v = c.labelPos;
                        r = c.dataLabel;
                        G = c.visible === !1 ? "hidden" : "visible";
                        c = v[1];
                        if (l > 0) {
                            if (w = L.pop(), E = w.i, y = w.y, c > y && b[E + 1] !== null || c < y && b[E - 1] !== null) y = c;
                        } else y = c;
                        z = e.justify ? m[0] + (H ? -1 : 1) * (o + l) : a.getX(E === 0 || E === b.length - 1 ? c : y, H);
                        r._attr = {
                            visibility: G,
                            align: v[6]
                        };
                        r._pos = {
                            x: z + e.x + ({
                                left: f,
                                right: -f
                            }[v[6]] || 0),
                            y: y + e.y - 10
                        };
                        r.connX = z;
                        r.connY = y;
                        if (this.options.size === null) w = r.width, z - w < f ? C[3] = u(s(w - z + f), C[3]) : z + w > h - f && (C[1] = u(s(z + w - h + f), C[1])), 
                        y - x / 2 < 0 ? C[0] = u(s(-y + x / 2), C[0]) : y + x / 2 > d && (C[2] = u(s(y + x / 2 - d), C[2]));
                    }
                }
                if (ta(C) === 0 || this.verifyDataLabelOverflow(C)) this.placeDataLabels(), t && g && n(this.points, function(b) {
                    i = b.connector;
                    v = b.labelPos;
                    if ((r = b.dataLabel) && r._pos) G = r._attr.visibility, z = r.connX, y = r.connY, 
                    j = k ? [ "M", z + (v[6] === "left" ? 5 : -5), y, "C", z, y, 2 * v[2] - v[4], 2 * v[3] - v[5], v[2], v[3], "L", v[4], v[5] ] : [ "M", z + (v[6] === "left" ? 5 : -5), y, "L", v[2], v[3], "L", v[4], v[5] ], 
                    i ? (i.animate({
                        d: j
                    }), i.attr("visibility", G)) : b.connector = i = a.chart.renderer.path(j).attr({
                        "stroke-width": g,
                        stroke: e.connectorColor || b.color || "#606060",
                        visibility: G
                    }).add(a.group); else if (i) b.connector = i.destroy();
                });
            }
        },
        verifyDataLabelOverflow: function(a) {
            var b = this.center, c = this.options, d = c.center, e = c = c.minSize || 80, f;
            d[0] !== null ? e = u(b[2] - u(a[1], a[3]), c) : (e = u(b[2] - a[1] - a[3], c), 
            b[0] += (a[3] - a[1]) / 2);
            d[1] !== null ? e = u(I(e, b[2] - u(a[0], a[2])), c) : (e = u(I(e, b[2] - a[0] - a[2]), c), 
            b[1] += (a[0] - a[2]) / 2);
            e < b[2] ? (b[2] = e, this.translate(b), n(this.points, function(a) {
                if (a.dataLabel) a.dataLabel._pos = null;
            }), this.drawDataLabels()) : f = !0;
            return f;
        },
        placeDataLabels: function() {
            n(this.points, function(a) {
                var a = a.dataLabel, b;
                if (a) (b = a._pos) ? (a.attr(a._attr), a[a.moved ? "animate" : "attr"](b), a.moved = !0) : a && a.attr({
                    y: -999
                });
            });
        },
        alignDataLabel: xa,
        drawTracker: K.prototype.drawTracker,
        drawLegendSymbol: L.prototype.drawLegendSymbol,
        getSymbol: xa
    };
    W = ga(Q, W);
    $.pie = W;
    r(Highcharts, {
        Axis: db,
        Chart: xb,
        Color: oa,
        Legend: wb,
        Pointer: vb,
        Point: Pa,
        Tick: La,
        Tooltip: ub,
        Renderer: Va,
        Series: Q,
        SVGElement: va,
        SVGRenderer: Fa,
        arrayMin: Ia,
        arrayMax: ta,
        charts: Ea,
        dateFormat: Xa,
        format: Aa,
        pathAnim: zb,
        getOptions: function() {
            return O;
        },
        hasBidiBug: Vb,
        isTouchDevice: Ob,
        numberFormat: ya,
        seriesTypes: $,
        setOptions: function(a) {
            O = x(O, a);
            Lb();
            return O;
        },
        addEvent: J,
        removeEvent: aa,
        createElement: T,
        discardElement: Ta,
        css: M,
        each: n,
        extend: r,
        map: Na,
        merge: x,
        pick: p,
        splat: ha,
        extendClass: ga,
        pInt: A,
        wrap: Bb,
        svg: Y,
        canvas: Z,
        vml: !Y && !Z,
        product: "Highcharts",
        version: "3.0.4"
    });
})();

function addCommas(nStr) {
    nStr += "";
    x = nStr.split(".");
    x1 = x[0];
    x2 = x.length > 1 ? "." + x[1] : "";
    var rgx = /(\d+)(\d{3})/;
    while (rgx.test(x1)) {
        x1 = x1.replace(rgx, "$1" + "," + "$2");
    }
    return x1 + x2;
}

var chart1_options = {
    chart: {
        renderTo: "hmda_chart_1",
        alignTicks: true,
        height: 400,
        plotBackgroundColor: "#FFFFFF",
        plotBorderWidth: null,
        plotShadow: false,
        spacingTop: 20,
        spacingRight: 10,
        spacingBottom: 1,
        spacingLeft: 1,
        marginTop: 100,
        marginBottom: 20,
        type: "column"
    },
    exporting: {
        enabled: false
    },
    title: {
        text: "U.S. Total",
        align: "left",
        verticalAlign: "top",
        floating: false,
        style: {
            color: "#000000",
            fontSize: "18pt",
            fontFamily: '"Avenir Next LT W01 Demi", "Avenir Next Demi", "Avenir Next", "Arial"',
            fontWeight: "600"
        }
    },
    subtitle: {
        text: "Home Mortgage Applications and Originations, 2010-2012",
        align: "left",
        verticalAlign: "top",
        floating: false,
        y: 40,
        style: {
            color: "#333333",
            fontSize: "12pt",
            fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
            fontWeight: "400"
        }
    },
    credits: {
        text: "Data are for first-lien, owner-occupied, 1-4 family and manufactured homes.",
        enabled: false
    },
    colors: [ "#43af2a", "#acdc91", "#0071ce", "#7fb8e6", "#d14123", "#e89f91" ],
    legend: {
        align: "right",
        backgroundColor: "#FFFFFF",
        borderWidth: 0,
        borderRadius: 0,
        borderColor: "#FFFFFF",
        floating: false,
        itemStyle: {
            color: "#212121",
            fontSize: "12pt",
            lineHeight: "12pt",
            fontFamily: '"Avenir Next LT W01 Medium Cn", "Avenir Next Light", "Avenir Next", "Arial Condensed", "Arial"',
            fontWeight: "",
            paddingBottom: "8pt"
        },
        layout: "vertical",
        margin: 10,
        padding: 10,
        shadow: false,
        symbolPadding: 5,
        symbolWidth: 20,
        verticalAlign: "middle",
        x: 0,
        y: 0
    },
    tooltip: {
        backgroundColor: "rgba(0, 0, 0, 0.65)",
        borderColor: "#999999",
        borderRadius: 0,
        borderWidth: 0,
        shadow: false,
        style: {
            color: "#ffffff",
            fontSize: "10pt",
            fontFamily: "",
            fontWeight: "",
            padding: 8,
            lineHeight: "12pt"
        },
        formatter: function() {
            var tooltip_suffix = "";
            if (this.point.name != "None") {
                tooltip_suffix = this.point.name;
            }
            var format = '<span style="font-size: 12pt;>' + this.series.name + " in " + this.x + ':<br><span style="font-weight: 700;>' + addCommas(this.y) + "</span></span>";
            return format;
        }
    },
    plotOptions: {
        series: {
            allowPointSelect: true,
            animation: false,
            borderWidth: 0,
            cursor: "pointer",
            marker: {
                radius: 10
            },
            showInLegend: true,
            shadow: false
        },
        pie: {
            dataLabels: {
                enabled: false
            },
            point: {
                events: {
                    legendItemClick: function() {
                        return false;
                    }
                }
            },
            size: "90%"
        },
        column: {
            dataLabels: {
                enabled: false
            },
            grouping: true,
            groupPadding: .1,
            pointPadding: 0,
            stacking: null,
            events: {
                legendItemClick: function() {
                    return false;
                }
            }
        },
        bar: {
            dataLabels: {
                enabled: false
            },
            groupPadding: .1,
            pointPadding: 0,
            stacking: null
        },
        line: {
            lineWidth: 8,
            marker: {
                enabled: false
            }
        },
        area: {
            lineWidth: 8,
            stacking: null,
            marker: {
                enabled: false
            }
        },
        allowPointSelect: false
    },
    xAxis: {
        categories: [ "2010", "2011", "2012" ],
        gridLineWidth: 0,
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            enabled: true,
            y: 20
        },
        lineWidth: 0,
        title: {
            text: null,
            margin: 12,
            style: {
                color: "#101820",
                fontSize: "12pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            x: -5
        },
        tickLength: 0,
        startOnTick: true,
        endOnTick: true,
        minPadding: 0,
        maxPadding: 0
    },
    yAxis: [ {
        title: {
            text: "Number of applications and originations",
            margin: 10,
            style: {
                color: "#101820",
                fontSize: "12pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            }
        },
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            format: "{value:,.0f}",
            enabled: true
        },
        gridLineWidth: 1
    }, {
        opposite: true,
        title: {
            text: null
        },
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            format: " {value:,.0f} ",
            enabled: true
        },
        gridLineWidth: 0
    } ],
    series: [ {
        yAxis: 0,
        name: "Home purchase applications",
        type: "column",
        data: [ {
            name: "",
            y: 1498717
        }, {
            name: "",
            y: 1399080
        }, {
            name: "",
            y: 1526319
        } ]
    }, {
        yAxis: 0,
        name: "Home purchase originations",
        type: "column",
        data: [ {
            name: "",
            y: 803307
        }, {
            name: "",
            y: 750463
        }, {
            name: "",
            y: 834181
        } ]
    }, {
        yAxis: 0,
        name: "Home improvement applications",
        type: "column",
        data: [ {
            name: "",
            y: 106065
        }, {
            name: "",
            y: 106314
        }, {
            name: "",
            y: 119091
        } ]
    }, {
        yAxis: 0,
        name: "Home improvement originations",
        type: "column",
        data: [ {
            name: "",
            y: 61688
        }, {
            name: "",
            y: 61818
        }, {
            name: "",
            y: 74849
        } ]
    }, {
        name: "Refinancing applications",
        data: [ {
            name: "",
            y: 3121622
        }, {
            name: "",
            y: 2747268
        }, {
            name: "",
            y: 3742878
        } ]
    }, {
        name: "Refinancing originations",
        data: [ 1827216, 1597456, 2358467 ]
    } ]
};

$(document).ready(function() {
    if ($("#hmda_chart_1").length !== 0) {
        var applicationsOriginationsChart = new Highcharts.Chart(chart1_options);
    }
    if ($("#hmda_chart_1_msa").length !== 0) {
        $("#hmda_chart_1_msa").chosen();
    }
    var chart1DataObj = {
        msa00: {
            name: "U.S. Total",
            data: [ [ 1498717, 1399080, 1526319 ], [ 803307, 750463, 834181 ], [ 106065, 106314, 119091 ], [ 61688, 61818, 74849 ], [ 3121622, 2747268, 3742878 ], [ 1827216, 1597456, 2358467 ] ]
        },
        msa01: {
            name: "Abilene, TX",
            data: [ [ 1843, 1728, 1863 ], [ 1364, 1244, 1439 ], [ 230, 246, 219 ], [ 139, 160, 169 ], [ 1875, 1897, 2307 ], [ 1147, 1174, 1528 ] ]
        },
        msa02: {
            name: "Aguadilla-Isabela, PR",
            data: [ [ 942, 1304, 1167 ], [ 489, 715, 704 ], [ 164, 137, 117 ], [ 88, 85, 70 ], [ 1246, 1208, 1756 ], [ 697, 690, 1047 ] ]
        },
        msa03: {
            name: "Akron, OH",
            data: [ [ 6131, 5569, 6613 ], [ 4673, 4238, 5131 ], [ 376, 344, 427 ], [ 147, 153, 194 ], [ 18108, 15039, 20696 ], [ 10651, 8527, 12544 ] ]
        },
        msa04: {
            name: "Albany-Schenectady-Troy, NY",
            data: [ [ 9159, 8367, 9318 ], [ 6564, 5932, 6799 ], [ 923, 860, 942 ], [ 600, 519, 644 ], [ 18801, 16417, 21463 ], [ 11297, 9384, 13707 ] ]
        },
        msa05: {
            name: "Albany, GA",
            data: [ [ 1154, 1160, 1119 ], [ 740, 638, 683 ], [ 107, 72, 94 ], [ 68, 45, 60 ], [ 2338, 2036, 2547 ], [ 1345, 1107, 1574 ] ]
        },
        msa06: {
            name: "Albuquerque, NM",
            data: [ [ 10377, 9227, 10253 ], [ 7099, 6219, 7036 ], [ 795, 692, 791 ], [ 389, 391, 458 ], [ 25451, 21885, 31732 ], [ 13886, 11845, 18551 ] ]
        },
        msa07: {
            name: "Alexandria, LA",
            data: [ [ 1879, 1865, 1901 ], [ 1074, 1026, 1099 ], [ 210, 209, 213 ], [ 107, 127, 124 ], [ 2745, 2693, 3056 ], [ 1530, 1404, 1697 ] ]
        },
        msa08: {
            name: "Allentown-Bethlehem-Easton, PA-NJ",
            data: [ [ 8121, 7096, 7781 ], [ 5884, 5164, 5646 ], [ 1058, 1001, 1023 ], [ 697, 689, 696 ], [ 25077, 20508, 26809 ], [ 14216, 11266, 15923 ] ]
        },
        msa09: {
            name: "Altoona, PA",
            data: [ [ 988, 934, 1042 ], [ 749, 710, 775 ], [ 252, 253, 354 ], [ 166, 178, 259 ], [ 2351, 2275, 2883 ], [ 1452, 1398, 1972 ] ]
        },
        msa10: {
            name: "Amarillo, TX",
            data: [ [ 3102, 2996, 3412 ], [ 2249, 2136, 2526 ], [ 122, 92, 124 ], [ 47, 48, 68 ], [ 3932, 3613, 4799 ], [ 2254, 1942, 2802 ] ]
        },
        msa11: {
            name: "Ames, IA",
            data: [ [ 948, 874, 985 ], [ 740, 690, 763 ], [ 144, 123, 122 ], [ 124, 105, 99 ], [ 2378, 2108, 2743 ], [ 1728, 1511, 2102 ] ]
        },
        msa12: {
            name: "Anchorage, AK",
            data: [ [ 5966, 5407, 5927 ], [ 4571, 4338, 4706 ], [ 304, 248, 318 ], [ 163, 152, 200 ], [ 12668, 10678, 15160 ], [ 8025, 6757, 9916 ] ]
        },
        msa13: {
            name: "Ann Arbor, MI",
            data: [ [ 3418, 3588, 3979 ], [ 2398, 2518, 2820 ], [ 106, 130, 165 ], [ 59, 68, 109 ], [ 9448, 8928, 13860 ], [ 6391, 5931, 9822 ] ]
        },
        msa14: {
            name: "Anniston-Oxford-Jacksonville, AL",
            data: [ [ 1044, 1071, 1174 ], [ 593, 567, 619 ], [ 112, 100, 135 ], [ 46, 56, 79 ], [ 2277, 2047, 2405 ], [ 1156, 977, 1297 ] ]
        },
        msa15: {
            name: "Appleton, WI",
            data: [ [ 2423, 2384, 2764 ], [ 1918, 1879, 2182 ], [ 507, 543, 571 ], [ 407, 439, 470 ], [ 11286, 8939, 12160 ], [ 8215, 6201, 8870 ] ]
        },
        msa16: {
            name: "Asheville, NC",
            data: [ [ 4315, 4598, 5669 ], [ 2731, 2663, 3211 ], [ 273, 244, 278 ], [ 139, 128, 149 ], [ 11657, 10514, 12862 ], [ 6887, 6025, 7724 ] ]
        },
        msa17: {
            name: "Athens-Clarke County, GA",
            data: [ [ 1355, 1231, 1422 ], [ 931, 854, 991 ], [ 99, 80, 93 ], [ 48, 43, 54 ], [ 3872, 3662, 4685 ], [ 2263, 2203, 3021 ] ]
        },
        msa18: {
            name: "Atlanta-Sandy Springs-Roswell, GA",
            data: [ [ 62753, 60346, 66352 ], [ 41330, 39159, 44010 ], [ 1941, 1914, 2106 ], [ 991, 923, 1034 ], [ 129313, 120016, 180315 ], [ 67637, 66421, 110133 ] ]
        },
        msa19: {
            name: "Atlantic City-Hammonton, NJ",
            data: [ [ 2479, 2063, 2185 ], [ 1620, 1311, 1359 ], [ 365, 317, 340 ], [ 202, 190, 176 ], [ 7864, 6265, 7850 ], [ 3992, 3077, 4072 ] ]
        },
        msa20: {
            name: "Auburn-Opelika, AL",
            data: [ [ 1752, 1874, 2102 ], [ 1303, 1244, 1359 ], [ 88, 81, 90 ], [ 54, 46, 59 ], [ 3026, 2737, 3952 ], [ 1672, 1450, 2421 ] ]
        },
        msa21: {
            name: "Augusta-Richmond County, GA-SC",
            data: [ [ 6308, 6267, 6397 ], [ 4603, 4266, 4391 ], [ 337, 354, 354 ], [ 164, 159, 180 ], [ 12131, 10758, 13734 ], [ 6481, 5803, 7791 ] ]
        },
        msa22: {
            name: "Austin-Round Rock, TX",
            data: [ [ 26560, 26049, 31974 ], [ 18588, 18063, 22768 ], [ 1116, 1004, 1099 ], [ 669, 588, 606 ], [ 43887, 39578, 53815 ], [ 26118, 23592, 34513 ] ]
        },
        msa23: {
            name: "Bakersfield, CA",
            data: [ [ 9918, 8611, 8734 ], [ 6825, 6109, 6208 ], [ 211, 208, 161 ], [ 86, 100, 83 ], [ 9325, 7870, 16954 ], [ 4729, 3952, 10527 ] ]
        },
        msa24: {
            name: "Baltimore-Columbia-Towson, MD",
            data: [ [ 28655, 26483, 29620 ], [ 21068, 19547, 21938 ], [ 2439, 2240, 2242 ], [ 1568, 1368, 1449 ], [ 92870, 76191, 102579 ], [ 55584, 44740, 65209 ] ]
        },
        msa25: {
            name: "Bangor, ME",
            data: [ [ 1359, 1167, 1343 ], [ 958, 850, 969 ], [ 203, 217, 228 ], [ 131, 145, 143 ], [ 3245, 2758, 3396 ], [ 1777, 1542, 2010 ] ]
        },
        msa26: {
            name: "Barnstable Town, MA",
            data: [ [ 1872, 1795, 2157 ], [ 1353, 1308, 1562 ], [ 420, 404, 611 ], [ 332, 286, 467 ], [ 8626, 7110, 9747 ], [ 5524, 4455, 6660 ] ]
        },
        msa27: {
            name: "Baton Rouge, LA",
            data: [ [ 10688, 10031, 12694 ], [ 6587, 5943, 7855 ], [ 833, 625, 782 ], [ 428, 338, 421 ], [ 19851, 17878, 23620 ], [ 11143, 9279, 12855 ] ]
        },
        msa28: {
            name: "Battle Creek, MI",
            data: [ [ 1118, 1008, 1246 ], [ 782, 724, 841 ], [ 120, 110, 110 ], [ 67, 60, 60 ], [ 2429, 2442, 3294 ], [ 1462, 1488, 2093 ] ]
        },
        msa29: {
            name: "Bay City, MI",
            data: [ [ 932, 913, 1060 ], [ 632, 634, 747 ], [ 90, 113, 118 ], [ 46, 69, 72 ], [ 2136, 2081, 3175 ], [ 1322, 1339, 2188 ] ]
        },
        msa30: {
            name: "Beaumont-Port Arthur, TX",
            data: [ [ 3449, 3517, 3846 ], [ 2043, 2014, 2309 ], [ 690, 607, 626 ], [ 388, 334, 360 ], [ 4073, 4073, 4389 ], [ 2237, 2180, 2518 ] ]
        },
        msa31: {
            name: "Bellingham, WA",
            data: [ [ 2311, 2029, 2379 ], [ 1647, 1469, 1758 ], [ 249, 291, 408 ], [ 158, 208, 291 ], [ 7721, 5973, 8488 ], [ 5035, 3752, 5621 ] ]
        },
        msa32: {
            name: "Bend-Redmond, OR",
            data: [ [ 2421, 2148, 2665 ], [ 1674, 1504, 1949 ], [ 78, 57, 218 ], [ 49, 26, 163 ], [ 4463, 3900, 6790 ], [ 2525, 2301, 4527 ] ]
        },
        msa33: {
            name: "Billings, MT",
            data: [ [ 2322, 2185, 2431 ], [ 1818, 1691, 1917 ], [ 234, 216, 272 ], [ 172, 167, 226 ], [ 5186, 3935, 5379 ], [ 3585, 2719, 3839 ] ]
        },
        msa34: {
            name: "Binghamton, NY",
            data: [ [ 1845, 1877, 1961 ], [ 1301, 1311, 1398 ], [ 274, 275, 387 ], [ 190, 192, 250 ], [ 3262, 2841, 3710 ], [ 1735, 1497, 2202 ] ]
        },
        msa35: {
            name: "Birmingham-Hoover, AL",
            data: [ [ 13127, 12744, 14904 ], [ 8008, 7771, 9112 ], [ 796, 916, 1043 ], [ 375, 429, 474 ], [ 31586, 24570, 33816 ], [ 15624, 11878, 18308 ] ]
        },
        msa36: {
            name: "Bismarck, ND",
            data: [ [ 1941, 2091, 2397 ], [ 1653, 1675, 2005 ], [ 125, 160, 206 ], [ 92, 124, 183 ], [ 3771, 2568, 3954 ], [ 2822, 1917, 3181 ] ]
        },
        msa37: {
            name: "Blacksburg-Christiansburg-Radford, VA",
            data: [ [ 1276, 1385, 1545 ], [ 918, 930, 1042 ], [ 263, 146, 134 ], [ 217, 95, 90 ], [ 3292, 2714, 3367 ], [ 2005, 1678, 2206 ] ]
        },
        msa38: {
            name: "Bloomington, IN",
            data: [ [ 1958, 1782, 1925 ], [ 1291, 1194, 1363 ], [ 162, 158, 273 ], [ 95, 104, 201 ], [ 4867, 4449, 5684 ], [ 2969, 2704, 3722 ] ]
        },
        msa39: {
            name: "Boise City, ID",
            data: [ [ 9529, 8675, 9657 ], [ 6937, 6552, 7489 ], [ 336, 297, 292 ], [ 170, 146, 180 ], [ 16595, 12284, 24937 ], [ 9415, 7162, 16674 ] ]
        },
        msa40: {
            name: "Boulder, CO",
            data: [ [ 3977, 3795, 4803 ], [ 2991, 2733, 3654 ], [ 189, 215, 185 ], [ 123, 125, 140 ], [ 14809, 11811, 17276 ], [ 10342, 8215, 12720 ] ]
        },
        msa41: {
            name: "Bowling Green, KY",
            data: [ [ 1231, 1204, 1375 ], [ 876, 851, 1049 ], [ 117, 126, 138 ], [ 73, 87, 99 ], [ 3024, 2960, 3233 ], [ 1812, 1823, 2077 ] ]
        },
        msa42: {
            name: "Bremerton-Silverdale, WA",
            data: [ [ 2983, 2579, 2884 ], [ 2198, 1949, 2125 ], [ 201, 210, 275 ], [ 123, 122, 188 ], [ 9683, 8337, 11860 ], [ 5894, 5016, 7657 ] ]
        },
        msa43: {
            name: "Bridgeport-Stamford-Norwalk, CT",
            data: [ [ 10030, 9012, 9821 ], [ 6954, 6251, 6798 ], [ 847, 956, 916 ], [ 518, 579, 605 ], [ 32630, 27690, 35347 ], [ 20211, 17185, 23173 ] ]
        },
        msa44: {
            name: "Brownsville-Harlingen, TX",
            data: [ [ 1999, 1961, 1915 ], [ 1222, 1194, 1229 ], [ 437, 476, 535 ], [ 90, 100, 111 ], [ 2724, 3070, 3503 ], [ 970, 1215, 1537 ] ]
        },
        msa45: {
            name: "Brunswick, GA",
            data: [ [ 889, 921, 1015 ], [ 582, 570, 655 ], [ 60, 67, 45 ], [ 30, 31, 28 ], [ 2220, 2022, 2472 ], [ 1198, 1065, 1416 ] ]
        },
        msa46: {
            name: "Buffalo-Cheektowaga-Niagara Falls, NY",
            data: [ [ 9704, 8898, 9937 ], [ 7971, 7331, 8131 ], [ 548, 519, 760 ], [ 305, 321, 476 ], [ 14515, 13653, 15862 ], [ 7695, 7666, 9514 ] ]
        },
        msa47: {
            name: "Burlington-South Burlington, VT",
            data: [ [ 2356, 2275, 2597 ], [ 1809, 1740, 2024 ], [ 639, 620, 658 ], [ 479, 465, 507 ], [ 8005, 6643, 9347 ], [ 5667, 4476, 6851 ] ]
        },
        msa48: {
            name: "Burlington, NC",
            data: [ [ 1397, 1512, 1788 ], [ 933, 881, 956 ], [ 80, 67, 78 ], [ 41, 42, 36 ], [ 3454, 3198, 3843 ], [ 1978, 1805, 2241 ] ]
        },
        msa49: {
            name: "Canton-Massillon, OH",
            data: [ [ 3240, 2956, 3491 ], [ 2463, 2250, 2668 ], [ 220, 207, 248 ], [ 87, 78, 117 ], [ 9421, 7860, 10615 ], [ 5248, 4431, 6431 ] ]
        },
        msa50: {
            name: "Cape Coral-Fort Myers, FL",
            data: [ [ 7341, 6126, 6483 ], [ 4569, 3953, 4223 ], [ 187, 198, 267 ], [ 56, 70, 125 ], [ 7644, 7315, 15003 ], [ 3481, 3878, 9187 ] ]
        },
        msa51: {
            name: "Cape Girardeau, MO-IL",
            data: [ [ 1018, 1009, 1059 ], [ 742, 709, 733 ], [ 95, 99, 104 ], [ 53, 66, 84 ], [ 2328, 1994, 2561 ], [ 1470, 1258, 1778 ] ]
        },
        msa52: {
            name: "Carson City, NV",
            data: [ [ 405, 463, 490 ], [ 309, 340, 365 ], [ 13, 16, 13 ], [ 9, 4, 8 ], [ 1017, 700, 1498 ], [ 605, 407, 1028 ] ]
        },
        msa53: {
            name: "Casper, WY",
            data: [ [ 1346, 1383, 1714 ], [ 1055, 1047, 1341 ], [ 117, 93, 125 ], [ 81, 69, 102 ], [ 1987, 1598, 2177 ], [ 1271, 1003, 1504 ] ]
        },
        msa54: {
            name: "Cedar Rapids, IA",
            data: [ [ 4328, 3787, 3306 ], [ 3451, 2971, 2645 ], [ 344, 275, 282 ], [ 263, 206, 226 ], [ 10569, 8408, 9993 ], [ 7508, 5787, 7121 ] ]
        },
        msa55: {
            name: "Champaign-Urbana, IL",
            data: [ [ 2175, 2064, 2419 ], [ 1703, 1561, 1927 ], [ 209, 183, 206 ], [ 164, 116, 155 ], [ 6833, 5415, 6943 ], [ 4926, 3868, 5038 ] ]
        },
        msa56: {
            name: "Charleston-North Charleston, SC",
            data: [ [ 10551, 10477, 12153 ], [ 6692, 6575, 7510 ], [ 356, 382, 446 ], [ 201, 235, 278 ], [ 17670, 15120, 21750 ], [ 9320, 8013, 12981 ] ]
        },
        msa57: {
            name: "Charleston, WV",
            data: [ [ 3444, 3919, 4070 ], [ 2025, 2023, 2096 ], [ 557, 585, 622 ], [ 331, 341, 376 ], [ 5527, 5194, 5750 ], [ 3075, 3001, 3481 ] ]
        },
        msa58: {
            name: "Charlotte-Concord-Gastonia, NC-SC",
            data: [ [ 22692, 21830, 25947 ], [ 15899, 14934, 17882 ], [ 914, 1e3, 1241 ], [ 505, 521, 719 ], [ 55207, 48321, 65152 ], [ 31406, 27006, 39405 ] ]
        },
        msa59: {
            name: "Charlottesville, VA",
            data: [ [ 2181, 2041, 2433 ], [ 1634, 1450, 1725 ], [ 161, 183, 199 ], [ 97, 95, 137 ], [ 6257, 5246, 6994 ], [ 3820, 3174, 4536 ] ]
        },
        msa60: {
            name: "Chattanooga, TN-GA",
            data: [ [ 5818, 5912, 6921 ], [ 3841, 3570, 4164 ], [ 298, 318, 342 ], [ 164, 162, 195 ], [ 11844, 10229, 13898 ], [ 6255, 5461, 7963 ] ]
        },
        msa61: {
            name: "Cheyenne, WY",
            data: [ [ 1506, 1674, 1760 ], [ 1187, 1224, 1408 ], [ 105, 131, 114 ], [ 78, 94, 81 ], [ 3160, 2512, 3737 ], [ 1930, 1583, 2556 ] ]
        },
        msa62: {
            name: "Chico, CA",
            data: [ [ 1838, 1774, 1858 ], [ 1248, 1271, 1362 ], [ 137, 96, 114 ], [ 80, 62, 72 ], [ 4953, 3973, 6228 ], [ 2756, 2168, 3929 ] ]
        },
        msa63: {
            name: "Cincinnati, OH-KY-IN",
            data: [ [ 23722, 21461, 24389 ], [ 17211, 15284, 17561 ], [ 1429, 1307, 2131 ], [ 713, 657, 1376 ], [ 85201, 69433, 94445 ], [ 53592, 42595, 62033 ] ]
        },
        msa64: {
            name: "Clarksville, TN-KY",
            data: [ [ 4041, 4632, 4776 ], [ 3069, 3554, 3593 ], [ 210, 190, 224 ], [ 103, 95, 123 ], [ 5957, 6242, 8269 ], [ 2960, 3301, 4730 ] ]
        },
        msa65: {
            name: "Cleveland-Elyria, OH",
            data: [ [ 17336, 15474, 18739 ], [ 13178, 11677, 14446 ], [ 1343, 1399, 1731 ], [ 521, 569, 723 ], [ 49016, 43719, 60923 ], [ 27914, 24032, 35700 ] ]
        },
        msa66: {
            name: "Cleveland, TN",
            data: [ [ 1131, 1265, 1442 ], [ 700, 726, 800 ], [ 90, 77, 106 ], [ 47, 39, 58 ], [ 2734, 2323, 2943 ], [ 1580, 1281, 1763 ] ]
        },
        msa67: {
            name: "Coeur d&apos;Alene, ID",
            data: [ [ 1989, 1906, 1745 ], [ 1443, 1385, 1266 ], [ 174, 109, 130 ], [ 91, 61, 76 ], [ 5021, 3678, 5423 ], [ 2816, 2109, 3255 ] ]
        },
        msa68: {
            name: "College Station-Bryan, TX",
            data: [ [ 2290, 2068, 2460 ], [ 1629, 1443, 1691 ], [ 108, 138, 128 ], [ 56, 76, 72 ], [ 2806, 2492, 2914 ], [ 1741, 1517, 1871 ] ]
        },
        msa69: {
            name: "Colorado Springs, CO",
            data: [ [ 10403, 9647, 10606 ], [ 7943, 7374, 8346 ], [ 410, 395, 570 ], [ 246, 213, 384 ], [ 23591, 21571, 31869 ], [ 15807, 13823, 22190 ] ]
        },
        msa70: {
            name: "Columbia, MO",
            data: [ [ 2145, 2009, 2419 ], [ 1646, 1527, 1915 ], [ 179, 130, 327 ], [ 133, 100, 258 ], [ 5134, 4043, 5590 ], [ 3549, 2759, 4146 ] ]
        },
        msa71: {
            name: "Columbia, SC",
            data: [ [ 9782, 8501, 9807 ], [ 6379, 5378, 6450 ], [ 409, 473, 516 ], [ 196, 250, 332 ], [ 18818, 16694, 22135 ], [ 10217, 9040, 13129 ] ]
        },
        msa72: {
            name: "Columbus, GA-AL",
            data: [ [ 2874, 2820, 2807 ], [ 2058, 2017, 2018 ], [ 148, 102, 154 ], [ 80, 49, 70 ], [ 5646, 5188, 7062 ], [ 2850, 2637, 4051 ] ]
        },
        msa73: {
            name: "Columbus, IN",
            data: [ [ 951, 1128, 1259 ], [ 703, 839, 946 ], [ 90, 63, 88 ], [ 68, 45, 62 ], [ 2710, 2228, 2907 ], [ 1739, 1391, 1962 ] ]
        },
        msa74: {
            name: "Columbus, OH",
            data: [ [ 22048, 19677, 23596 ], [ 15594, 13982, 17427 ], [ 895, 810, 1503 ], [ 452, 397, 987 ], [ 62374, 51898, 70938 ], [ 37715, 30489, 45012 ] ]
        },
        msa75: {
            name: "Corpus Christi, TX",
            data: [ [ 4184, 4117, 4778 ], [ 2840, 2613, 3358 ], [ 395, 353, 311 ], [ 182, 158, 157 ], [ 4968, 4993, 5438 ], [ 2626, 2704, 3194 ] ]
        },
        msa76: {
            name: "Corvallis, OR",
            data: [ [ 752, 711, 786 ], [ 571, 519, 584 ], [ 61, 76, 94 ], [ 34, 39, 68 ], [ 2451, 1965, 2742 ], [ 1622, 1255, 1857 ] ]
        },
        msa77: {
            name: "Crestview-Fort Walton Beach-Destin, FL",
            data: [ [ 2387, 3010, 2988 ], [ 1708, 2148, 2100 ], [ 57, 72, 63 ], [ 36, 39, 31 ], [ 3965, 3668, 6268 ], [ 2310, 2187, 3953 ] ]
        },
        msa78: {
            name: "Cumberland, MD-WV",
            data: [ [ 578, 540, 638 ], [ 407, 372, 485 ], [ 168, 122, 132 ], [ 133, 101, 101 ], [ 1731, 1437, 1799 ], [ 988, 855, 1166 ] ]
        },
        msa79: {
            name: "Dalton, GA",
            data: [ [ 1207, 1094, 1172 ], [ 737, 604, 629 ], [ 68, 67, 84 ], [ 34, 33, 38 ], [ 2006, 1784, 2383 ], [ 871, 878, 1280 ] ]
        },
        msa80: {
            name: "Danville, IL",
            data: [ [ 508, 515, 508 ], [ 328, 305, 323 ], [ 129, 128, 133 ], [ 86, 65, 74 ], [ 1220, 1153, 1327 ], [ 625, 567, 717 ] ]
        },
        msa81: {
            name: "Davenport-Moline-Rock Island, IA-IL",
            data: [ [ 4823, 4334, 4847 ], [ 3693, 3249, 3718 ], [ 587, 550, 640 ], [ 406, 386, 456 ], [ 12974, 9860, 13514 ], [ 8961, 6407, 9544 ] ]
        },
        msa82: {
            name: "Dayton, OH",
            data: [ [ 8051, 7087, 8311 ], [ 5988, 5221, 6127 ], [ 389, 485, 721 ], [ 184, 208, 483 ], [ 24035, 21381, 28777 ], [ 14687, 12728, 18006 ] ]
        },
        msa83: {
            name: "Decatur, AL",
            data: [ [ 1776, 1814, 2021 ], [ 1052, 965, 1086 ], [ 100, 223, 146 ], [ 44, 124, 65 ], [ 3971, 3397, 4243 ], [ 1892, 1639, 2205 ] ]
        },
        msa84: {
            name: "Decatur, IL",
            data: [ [ 979, 1017, 1124 ], [ 808, 821, 930 ], [ 160, 82, 177 ], [ 108, 46, 145 ], [ 2265, 1796, 2711 ], [ 1588, 1214, 1983 ] ]
        },
        msa85: {
            name: "Deltona-Daytona Beach-Ormond Beach, FL",
            data: [ [ 4449, 4178, 4664 ], [ 2860, 2623, 2931 ], [ 199, 167, 202 ], [ 75, 47, 63 ], [ 6653, 6003, 11958 ], [ 2838, 2824, 6893 ] ]
        },
        msa86: {
            name: "Denver-Aurora-Lakewood, CO",
            data: [ [ 40735, 38620, 47308 ], [ 29768, 27699, 35286 ], [ 1429, 1398, 1799 ], [ 858, 888, 1224 ], [ 105844, 85587, 128143 ], [ 70254, 53687, 87383 ] ]
        },
        msa87: {
            name: "Des Moines-West Des Moines, IA",
            data: [ [ 8076, 7623, 8831 ], [ 6192, 5843, 6917 ], [ 718, 637, 666 ], [ 459, 419, 476 ], [ 22140, 19377, 25783 ], [ 14474, 12583, 18111 ] ]
        },
        msa88: {
            name: "Dothan, AL",
            data: [ [ 1540, 1467, 1535 ], [ 982, 943, 947 ], [ 144, 118, 127 ], [ 71, 70, 80 ], [ 3107, 2774, 3522 ], [ 1647, 1515, 2120 ] ]
        },
        msa89: {
            name: "Dover, DE",
            data: [ [ 2002, 1774, 2084 ], [ 1369, 1194, 1435 ], [ 176, 141, 147 ], [ 96, 84, 80 ], [ 4331, 3734, 5262 ], [ 2186, 1945, 3163 ] ]
        },
        msa90: {
            name: "Dubuque, IA",
            data: [ [ 1348, 1233, 1302 ], [ 1122, 1031, 1099 ], [ 54, 69, 47 ], [ 32, 49, 36 ], [ 4400, 3387, 4722 ], [ 3534, 2676, 3867 ] ]
        },
        msa91: {
            name: "Duluth, MN-WI",
            data: [ [ 2417, 2382, 2675 ], [ 1803, 1848, 2039 ], [ 462, 406, 505 ], [ 297, 260, 340 ], [ 8524, 6781, 8645 ], [ 5134, 4021, 5543 ] ]
        },
        msa92: {
            name: "Durham-Chapel Hill, NC",
            data: [ [ 5914, 5434, 5959 ], [ 4187, 3729, 4235 ], [ 232, 233, 280 ], [ 128, 147, 154 ], [ 13925, 13038, 15621 ], [ 8867, 8022, 9817 ] ]
        },
        msa93: {
            name: "Eau Claire, WI",
            data: [ [ 1573, 1412, 1713 ], [ 1209, 1075, 1334 ], [ 296, 259, 368 ], [ 224, 186, 297 ], [ 6241, 4898, 6355 ], [ 4214, 3475, 4740 ] ]
        },
        msa94: {
            name: "El Centro, CA",
            data: [ [ 1735, 1561, 1437 ], [ 1214, 1143, 1020 ], [ 34, 20, 31 ], [ 10, 5, 8 ], [ 1124, 1069, 2392 ], [ 467, 543, 1401 ] ]
        },
        msa95: {
            name: "El Paso, TX",
            data: [ [ 8070, 7865, 8833 ], [ 5502, 5168, 5855 ], [ 810, 664, 685 ], [ 380, 310, 306 ], [ 9606, 9726, 11703 ], [ 4465, 4545, 5853 ] ]
        },
        msa96: {
            name: "Elizabethtown-Fort Knox, KY",
            data: [ [ 2157, 1604, 1573 ], [ 1474, 1011, 1028 ], [ 121, 108, 114 ], [ 69, 65, 74 ], [ 3172, 3016, 4185 ], [ 1789, 1670, 2574 ] ]
        },
        msa97: {
            name: "Elkhart-Goshen, IN",
            data: [ [ 1913, 1825, 2091 ], [ 1321, 1351, 1576 ], [ 92, 103, 137 ], [ 59, 68, 102 ], [ 4894, 4294, 5422 ], [ 2686, 2492, 3394 ] ]
        },
        msa98: {
            name: "Elmira, NY",
            data: [ [ 776, 824, 834 ], [ 584, 614, 621 ], [ 171, 185, 207 ], [ 128, 144, 157 ], [ 1327, 1134, 1314 ], [ 807, 702, 906 ] ]
        },
        msa99: {
            name: "Erie, PA",
            data: [ [ 2601, 2313, 2514 ], [ 2029, 1773, 1986 ], [ 489, 517, 568 ], [ 347, 307, 379 ], [ 5160, 4732, 6027 ], [ 2866, 2699, 3728 ] ]
        },
        msa100: {
            name: "Eugene, OR",
            data: [ [ 3542, 2963, 3295 ], [ 2420, 2078, 2350 ], [ 251, 173, 304 ], [ 150, 105, 200 ], [ 10788, 8614, 11853 ], [ 6492, 4989, 7622 ] ]
        },
        msa101: {
            name: "Evansville, IN-KY",
            data: [ [ 4297, 4047, 4126 ], [ 3122, 2815, 2902 ], [ 343, 436, 531 ], [ 196, 274, 361 ], [ 10790, 9244, 11065 ], [ 6628, 5496, 7206 ] ]
        },
        msa102: {
            name: "Fairbanks, AK",
            data: [ [ 1289, 1132, 1268 ], [ 1065, 899, 996 ], [ 95, 86, 127 ], [ 48, 52, 77 ], [ 1919, 1917, 2793 ], [ 1225, 1303, 1934 ] ]
        },
        msa103: {
            name: "Fargo, ND-MN",
            data: [ [ 2983, 2636, 3482 ], [ 2494, 2237, 2981 ], [ 187, 190, 215 ], [ 144, 153, 166 ], [ 6148, 5268, 6840 ], [ 4197, 3639, 5040 ] ]
        },
        msa104: {
            name: "Farmington, NM",
            data: [ [ 999, 1323, 1478 ], [ 637, 581, 722 ], [ 60, 72, 77 ], [ 41, 39, 45 ], [ 1750, 1458, 1970 ], [ 983, 795, 1175 ] ]
        },
        msa105: {
            name: "Fayetteville-Springdale-Rogers, AR-MO",
            data: [ [ 6421, 6411, 7344 ], [ 4518, 4420, 5217 ], [ 232, 182, 255 ], [ 94, 107, 169 ], [ 11765, 9421, 14771 ], [ 7080, 5622, 9783 ] ]
        },
        msa106: {
            name: "Fayetteville, NC",
            data: [ [ 5195, 4648, 4301 ], [ 3990, 3348, 2915 ], [ 235, 277, 323 ], [ 118, 142, 162 ], [ 8788, 9297, 11010 ], [ 4629, 4970, 6476 ] ]
        },
        msa107: {
            name: "Flagstaff, AZ",
            data: [ [ 1012, 1148, 1285 ], [ 688, 723, 828 ], [ 53, 50, 37 ], [ 20, 24, 17 ], [ 2888, 2212, 3244 ], [ 1684, 1284, 2056 ] ]
        },
        msa108: {
            name: "Flint, MI",
            data: [ [ 3576, 3258, 3878 ], [ 2255, 2086, 2548 ], [ 185, 190, 206 ], [ 68, 60, 69 ], [ 5817, 5697, 10659 ], [ 3244, 3213, 6806 ] ]
        },
        msa109: {
            name: "Florence-Muscle Shoals, AL",
            data: [ [ 1485, 1392, 1580 ], [ 963, 953, 1128 ], [ 111, 129, 122 ], [ 71, 84, 86 ], [ 3364, 3067, 3603 ], [ 1860, 1752, 2301 ] ]
        },
        msa110: {
            name: "Florence, SC",
            data: [ [ 1824, 2005, 2254 ], [ 1086, 971, 1146 ], [ 110, 117, 131 ], [ 54, 62, 82 ], [ 3468, 2999, 3422 ], [ 1700, 1548, 1936 ] ]
        },
        msa111: {
            name: "Fond du Lac, WI",
            data: [ [ 869, 724, 898 ], [ 672, 550, 686 ], [ 166, 157, 225 ], [ 137, 129, 188 ], [ 4681, 3721, 5181 ], [ 3473, 2562, 3795 ] ]
        },
        msa112: {
            name: "Fort Collins, CO",
            data: [ [ 4784, 4463, 5723 ], [ 3502, 3273, 4295 ], [ 208, 198, 281 ], [ 135, 136, 207 ], [ 12260, 10020, 14585 ], [ 8431, 6731, 10439 ] ]
        },
        msa113: {
            name: "Fort Smith, AR-OK",
            data: [ [ 3254, 3387, 3389 ], [ 2118, 1920, 1941 ], [ 370, 256, 320 ], [ 184, 169, 185 ], [ 5172, 4502, 5465 ], [ 3001, 2532, 3268 ] ]
        },
        msa114: {
            name: "Fort Wayne, IN",
            data: [ [ 4933, 4859, 5389 ], [ 3865, 3724, 4195 ], [ 357, 295, 354 ], [ 198, 169, 230 ], [ 12889, 10942, 14863 ], [ 8443, 6820, 10170 ] ]
        },
        msa115: {
            name: "Fresno, CA",
            data: [ [ 8922, 8608, 7886 ], [ 6248, 6134, 5689 ], [ 311, 297, 253 ], [ 149, 171, 153 ], [ 12786, 10774, 20353 ], [ 6994, 5793, 12608 ] ]
        },
        msa116: {
            name: "Gadsden, AL",
            data: [ [ 812, 950, 1016 ], [ 454, 550, 572 ], [ 74, 76, 92 ], [ 40, 44, 48 ], [ 2071, 1588, 2067 ], [ 1045, 799, 1158 ] ]
        },
        msa117: {
            name: "Gainesville, FL",
            data: [ [ 2191, 2188, 2537 ], [ 1468, 1352, 1511 ], [ 146, 100, 101 ], [ 61, 46, 47 ], [ 4361, 3487, 4926 ], [ 2303, 1942, 3050 ] ]
        },
        msa118: {
            name: "Gainesville, GA",
            data: [ [ 1535, 1595, 1513 ], [ 998, 1088, 1038 ], [ 53, 45, 61 ], [ 22, 22, 27 ], [ 3698, 3587, 4928 ], [ 1854, 1992, 2957 ] ]
        },
        msa119: {
            name: "Glens Falls, NY",
            data: [ [ 1183, 1019, 1189 ], [ 761, 661, 771 ], [ 234, 203, 248 ], [ 139, 133, 164 ], [ 2117, 2030, 2405 ], [ 1001, 981, 1294 ] ]
        },
        msa120: {
            name: "Goldsboro, NC",
            data: [ [ 1090, 997, 1140 ], [ 737, 614, 686 ], [ 83, 91, 87 ], [ 43, 57, 52 ], [ 1959, 2027, 2538 ], [ 1158, 1263, 1619 ] ]
        },
        msa121: {
            name: "Grand Forks, ND-MN",
            data: [ [ 1104, 1071, 1216 ], [ 858, 850, 938 ], [ 122, 108, 141 ], [ 95, 78, 110 ], [ 2065, 1771, 2535 ], [ 1387, 1189, 1861 ] ]
        },
        msa122: {
            name: "Grand Junction, CO",
            data: [ [ 2012, 1896, 2376 ], [ 1473, 1385, 1861 ], [ 158, 144, 148 ], [ 85, 90, 99 ], [ 5576, 3677, 5823 ], [ 3598, 2210, 4055 ] ]
        },
        msa123: {
            name: "Grand Rapids-Wyoming, MI",
            data: [ [ 7999, 8057, 10175 ], [ 5637, 5688, 7242 ], [ 475, 532, 625 ], [ 266, 300, 366 ], [ 21889, 18733, 26328 ], [ 14291, 11860, 17688 ] ]
        },
        msa124: {
            name: "Great Falls, MT",
            data: [ [ 1107, 1002, 1147 ], [ 874, 776, 900 ], [ 183, 156, 195 ], [ 124, 101, 133 ], [ 2514, 2238, 3190 ], [ 1661, 1380, 2189 ] ]
        },
        msa125: {
            name: "Greeley, CO",
            data: [ [ 4567, 4431, 5409 ], [ 3204, 2978, 3731 ], [ 119, 129, 141 ], [ 73, 66, 84 ], [ 7700, 6414, 10075 ], [ 4822, 3915, 6690 ] ]
        },
        msa126: {
            name: "Green Bay, WI",
            data: [ [ 3172, 2810, 3260 ], [ 2468, 2204, 2582 ], [ 392, 390, 501 ], [ 299, 301, 427 ], [ 16957, 11676, 15763 ], [ 12235, 8083, 11711 ] ]
        },
        msa127: {
            name: "Greensboro-High Point, NC",
            data: [ [ 7076, 6787, 7652 ], [ 4766, 4337, 4714 ], [ 327, 312, 393 ], [ 175, 181, 232 ], [ 17519, 16357, 19072 ], [ 9930, 9092, 11389 ] ]
        },
        msa128: {
            name: "Greenville-Anderson-Mauldin, SC",
            data: [ [ 7390, 7829, 9383 ], [ 4823, 4779, 5814 ], [ 350, 359, 463 ], [ 217, 209, 275 ], [ 15238, 13831, 17652 ], [ 8643, 7925, 11047 ] ]
        },
        msa129: {
            name: "Greenville, NC",
            data: [ [ 2059, 1923, 2065 ], [ 1383, 1113, 1108 ], [ 87, 116, 94 ], [ 60, 58, 55 ], [ 3305, 3047, 3717 ], [ 1956, 1826, 2305 ] ]
        },
        msa130: {
            name: "Guayama, PR",
            data: [ [ 443, 519, 435 ], [ 242, 269, 268 ], [ 60, 43, 54 ], [ 27, 18, 32 ], [ 392, 300, 438 ], [ 179, 165, 264 ] ]
        },
        msa131: {
            name: "Gulfport-Biloxi-Pascagoula, MS",
            data: [ [ 2356, 2192, 2148 ], [ 1411, 1344, 1328 ], [ 282, 195, 148 ], [ 139, 91, 64 ], [ 4725, 3916, 4794 ], [ 2077, 1718, 2416 ] ]
        },
        msa132: {
            name: "Hagerstown-Martinsburg, MD-WV",
            data: [ [ 3152, 2939, 3029 ], [ 2180, 2051, 2118 ], [ 305, 227, 262 ], [ 178, 135, 145 ], [ 6693, 5571, 7984 ], [ 3530, 2931, 4820 ] ]
        },
        msa133: {
            name: "Hanford-Corcoran, CA",
            data: [ [ 1181, 1029, 1167 ], [ 864, 765, 883 ], [ 59, 42, 42 ], [ 34, 16, 21 ], [ 1626, 1448, 2594 ], [ 815, 722, 1542 ] ]
        },
        msa134: {
            name: "Harrisburg-Carlisle, PA",
            data: [ [ 6319, 5585, 6014 ], [ 4733, 4119, 4558 ], [ 783, 764, 1094 ], [ 537, 522, 765 ], [ 16586, 14227, 17664 ], [ 10157, 8537, 11140 ] ]
        },
        msa135: {
            name: "Harrisonburg, VA",
            data: [ [ 1e3, 937, 1085 ], [ 753, 701, 768 ], [ 100, 88, 107 ], [ 69, 61, 80 ], [ 2761, 2293, 2955 ], [ 1783, 1403, 1976 ] ]
        },
        msa136: {
            name: "Hartford-West Hartford-East Hartford, CT",
            data: [ [ 12076, 10431, 11887 ], [ 8908, 7514, 8855 ], [ 1507, 1521, 1785 ], [ 1035, 1073, 1319 ], [ 38040, 30833, 42035 ], [ 23165, 18454, 26944 ] ]
        },
        msa137: {
            name: "Hattiesburg, MS",
            data: [ [ 1848, 1709, 1852 ], [ 1081, 928, 1030 ], [ 106, 63, 79 ], [ 51, 42, 43 ], [ 2825, 2195, 2728 ], [ 1514, 1222, 1676 ] ]
        },
        msa138: {
            name: "Hickory-Lenoir-Morganton, NC",
            data: [ [ 2849, 2928, 3464 ], [ 1878, 1779, 1924 ], [ 208, 249, 324 ], [ 122, 140, 175 ], [ 7333, 6967, 8055 ], [ 4295, 4028, 4857 ] ]
        },
        msa139: {
            name: "Hinesville, GA",
            data: [ [ 665, 927, 840 ], [ 501, 699, 631 ], [ 34, 22, 40 ], [ 16, 11, 17 ], [ 1303, 1350, 1589 ], [ 601, 670, 848 ] ]
        },
        msa140: {
            name: "Hot Springs, AR",
            data: [ [ 1277, 1234, 1485 ], [ 735, 658, 717 ], [ 121, 75, 95 ], [ 46, 33, 51 ], [ 2513, 2074, 2891 ], [ 1302, 1052, 1572 ] ]
        },
        msa141: {
            name: "Houma-Thibodaux, LA",
            data: [ [ 2345, 2494, 3095 ], [ 1329, 1207, 1574 ], [ 332, 324, 318 ], [ 205, 199, 192 ], [ 4746, 4192, 4626 ], [ 2776, 2423, 2871 ] ]
        },
        msa142: {
            name: "Houston-The Woodlands-Sugar Land, TX",
            data: [ [ 70951, 67827, 81288 ], [ 48948, 45710, 56818 ], [ 3187, 3103, 3254 ], [ 1353, 1461, 1398 ], [ 91536, 93713, 115023 ], [ 50369, 52841, 68906 ] ]
        },
        msa143: {
            name: "Huntington-Ashland, WV-KY-OH",
            data: [ [ 2776, 2867, 2861 ], [ 1716, 1642, 1617 ], [ 561, 573, 667 ], [ 324, 336, 384 ], [ 5701, 5294, 5679 ], [ 3178, 2960, 3344 ] ]
        },
        msa144: {
            name: "Huntsville, AL",
            data: [ [ 7072, 6702, 7013 ], [ 5147, 4745, 5094 ], [ 279, 657, 373 ], [ 145, 404, 174 ], [ 15751, 13194, 17996 ], [ 8534, 6819, 10279 ] ]
        },
        msa145: {
            name: "Idaho Falls, ID",
            data: [ [ 1521, 1362, 1503 ], [ 1201, 1057, 1143 ], [ 102, 90, 134 ], [ 68, 46, 101 ], [ 3985, 2948, 4046 ], [ 2352, 1667, 2560 ] ]
        },
        msa146: {
            name: "Indianapolis-Carmel-Anderson, IN",
            data: [ [ 23777, 23320, 25691 ], [ 17050, 16558, 19246 ], [ 1043, 1165, 1781 ], [ 573, 615, 1157 ], [ 67131, 54926, 72203 ], [ 40409, 32973, 47009 ] ]
        },
        msa147: {
            name: "Iowa City, IA",
            data: [ [ 2301, 2153, 2268 ], [ 1839, 1763, 1857 ], [ 237, 169, 207 ], [ 203, 142, 166 ], [ 4860, 3825, 5081 ], [ 3461, 2646, 3850 ] ]
        },
        msa148: {
            name: "Ithaca, NY",
            data: [ [ 786, 697, 764 ], [ 624, 557, 648 ], [ 146, 124, 171 ], [ 118, 107, 142 ], [ 1140, 971, 1191 ], [ 804, 680, 905 ] ]
        },
        msa149: {
            name: "Jackson, MI",
            data: [ [ 1218, 1119, 1389 ], [ 843, 784, 978 ], [ 170, 165, 159 ], [ 85, 93, 84 ], [ 2886, 2656, 4531 ], [ 1663, 1456, 2860 ] ]
        },
        msa150: {
            name: "Jackson, MS",
            data: [ [ 4912, 4631, 5286 ], [ 3318, 3040, 3328 ], [ 320, 218, 240 ], [ 146, 129, 123 ], [ 11109, 8761, 11406 ], [ 6413, 4908, 7149 ] ]
        },
        msa151: {
            name: "Jackson, TN",
            data: [ [ 1154, 1157, 1252 ], [ 785, 763, 792 ], [ 63, 43, 55 ], [ 28, 28, 35 ], [ 2332, 1904, 2553 ], [ 1256, 971, 1440 ] ]
        },
        msa152: {
            name: "Jacksonville, FL",
            data: [ [ 18322, 16705, 18747 ], [ 11693, 10626, 12022 ], [ 918, 596, 677 ], [ 503, 313, 395 ], [ 26937, 22509, 37570 ], [ 13310, 12015, 22639 ] ]
        },
        msa153: {
            name: "Jacksonville, NC",
            data: [ [ 3872, 2997, 2786 ], [ 3061, 2347, 2129 ], [ 128, 112, 129 ], [ 79, 65, 76 ], [ 4159, 4359, 5956 ], [ 2233, 2412, 3593 ] ]
        },
        msa154: {
            name: "Janesville-Beloit, WI",
            data: [ [ 1381, 1261, 1568 ], [ 1031, 943, 1193 ], [ 153, 151, 174 ], [ 95, 94, 121 ], [ 5518, 4614, 6009 ], [ 3640, 2910, 4076 ] ]
        },
        msa155: {
            name: "Jefferson City, MO",
            data: [ [ 1681, 1534, 1728 ], [ 1196, 1076, 1231 ], [ 303, 270, 347 ], [ 247, 209, 271 ], [ 4046, 3482, 4792 ], [ 2897, 2333, 3404 ] ]
        },
        msa156: {
            name: "Johnson City, TN",
            data: [ [ 2120, 2305, 2739 ], [ 1350, 1324, 1506 ], [ 200, 193, 225 ], [ 129, 123, 157 ], [ 4076, 3615, 4461 ], [ 2349, 2025, 2687 ] ]
        },
        msa157: {
            name: "Johnstown, PA",
            data: [ [ 1152, 1051, 973 ], [ 885, 802, 738 ], [ 414, 382, 398 ], [ 282, 253, 271 ], [ 2353, 2210, 2940 ], [ 1391, 1309, 1831 ] ]
        },
        msa158: {
            name: "Jonesboro, AR",
            data: [ [ 1523, 1508, 1639 ], [ 1025, 1007, 1106 ], [ 122, 104, 104 ], [ 66, 59, 68 ], [ 2232, 2066, 2656 ], [ 1338, 1259, 1698 ] ]
        },
        msa159: {
            name: "Joplin, MO",
            data: [ [ 2034, 2378, 2278 ], [ 1361, 1584, 1502 ], [ 152, 116, 167 ], [ 61, 65, 91 ], [ 3842, 3091, 4039 ], [ 2180, 1719, 2551 ] ]
        },
        msa160: {
            name: "Kalamazoo-Portage, MI",
            data: [ [ 2970, 3002, 3629 ], [ 2205, 2210, 2745 ], [ 209, 234, 205 ], [ 113, 123, 99 ], [ 7678, 6894, 10298 ], [ 4851, 4276, 7057 ] ]
        },
        msa161: {
            name: "Kankakee, IL",
            data: [ [ 827, 815, 821 ], [ 551, 560, 558 ], [ 124, 164, 175 ], [ 87, 103, 119 ], [ 2936, 2274, 3171 ], [ 1805, 1209, 2012 ] ]
        },
        msa162: {
            name: "Kansas City, MO-KS",
            data: [ [ 24023, 21813, 25431 ], [ 17793, 16498, 19668 ], [ 1501, 1332, 1896 ], [ 878, 844, 1265 ], [ 67338, 55302, 74435 ], [ 42950, 33398, 49106 ] ]
        },
        msa163: {
            name: "Kennewick-Richland, WA",
            data: [ [ 4703, 3912, 3679 ], [ 3566, 2989, 2915 ], [ 334, 265, 290 ], [ 212, 163, 194 ], [ 8053, 7326, 9357 ], [ 4929, 4535, 6227 ] ]
        },
        msa164: {
            name: "Killeen-Temple, TX",
            data: [ [ 6184, 5546, 5809 ], [ 4634, 3944, 4126 ], [ 209, 271, 302 ], [ 116, 165, 151 ], [ 5875, 5946, 8337 ], [ 3417, 3301, 4794 ] ]
        },
        msa165: {
            name: "Kingsport-Bristol-Bristol, TN-VA",
            data: [ [ 3074, 3221, 3746 ], [ 1934, 1770, 2027 ], [ 345, 383, 390 ], [ 201, 250, 248 ], [ 5961, 5226, 6538 ], [ 3259, 2802, 3696 ] ]
        },
        msa166: {
            name: "Kingston, NY",
            data: [ [ 1311, 1116, 1115 ], [ 915, 730, 799 ], [ 144, 155, 136 ], [ 88, 93, 90 ], [ 2903, 2644, 3159 ], [ 1413, 1276, 1673 ] ]
        },
        msa167: {
            name: "Knoxville, TN",
            data: [ [ 8908, 9439, 9940 ], [ 6005, 5446, 6239 ], [ 633, 572, 703 ], [ 377, 381, 472 ], [ 19944, 16141, 22457 ], [ 11954, 9195, 13544 ] ]
        },
        msa168: {
            name: "Kokomo, IN",
            data: [ [ 941, 831, 1067 ], [ 699, 603, 772 ], [ 58, 72, 88 ], [ 33, 50, 64 ], [ 2234, 1985, 3251 ], [ 1175, 1069, 1970 ] ]
        },
        msa169: {
            name: "La Crosse-Onalaska, WI-MN",
            data: [ [ 1355, 1236, 1517 ], [ 1017, 929, 1195 ], [ 197, 169, 241 ], [ 147, 128, 216 ], [ 5481, 4809, 6032 ], [ 4054, 3471, 4684 ] ]
        },
        msa170: {
            name: "Lafayette, LA",
            data: [ [ 3965, 3721, 4604 ], [ 2336, 2158, 2753 ], [ 259, 221, 275 ], [ 145, 125, 170 ], [ 6175, 5352, 6376 ], [ 3545, 2881, 3786 ] ]
        },
        msa171: {
            name: "Lake Charles, LA",
            data: [ [ 2170, 2180, 2651 ], [ 1303, 1243, 1587 ], [ 203, 207, 230 ], [ 102, 94, 125 ], [ 3651, 3362, 3705 ], [ 2078, 1891, 2244 ] ]
        },
        msa172: {
            name: "Lake Havasu City-Kingman, AZ",
            data: [ [ 1948, 1595, 1894 ], [ 1297, 1066, 1278 ], [ 124, 88, 120 ], [ 38, 36, 50 ], [ 3221, 2897, 4858 ], [ 1563, 1484, 2953 ] ]
        },
        msa173: {
            name: "Lakeland-Winter Haven, FL",
            data: [ [ 5788, 4889, 5424 ], [ 3623, 3050, 3264 ], [ 342, 269, 270 ], [ 169, 128, 129 ], [ 6519, 5487, 10289 ], [ 2942, 2688, 6070 ] ]
        },
        msa174: {
            name: "Lancaster, PA",
            data: [ [ 5318, 4706, 5309 ], [ 4036, 3547, 4097 ], [ 644, 625, 621 ], [ 491, 449, 450 ], [ 13363, 10844, 14222 ], [ 8165, 6307, 9166 ] ]
        },
        msa175: {
            name: "Lansing-East Lansing, MI",
            data: [ [ 4164, 3890, 4605 ], [ 2923, 2759, 3337 ], [ 321, 294, 353 ], [ 184, 179, 216 ], [ 10861, 8971, 13753 ], [ 6523, 5333, 8939 ] ]
        },
        msa176: {
            name: "Laredo, TX",
            data: [ [ 1636, 1515, 1792 ], [ 1092, 1003, 1217 ], [ 108, 106, 92 ], [ 20, 26, 31 ], [ 1735, 1625, 1990 ], [ 617, 649, 869 ] ]
        },
        msa177: {
            name: "Las Cruces, NM",
            data: [ [ 2146, 1961, 2165 ], [ 1447, 1174, 1326 ], [ 140, 123, 118 ], [ 50, 64, 54 ], [ 4002, 3609, 4452 ], [ 2229, 2005, 2657 ] ]
        },
        msa178: {
            name: "Las Vegas-Henderson-Paradise, NV",
            data: [ [ 30537, 25651, 25546 ], [ 20805, 17787, 17277 ], [ 337, 349, 435 ], [ 114, 128, 154 ], [ 22089, 17244, 45429 ], [ 12503, 9853, 30045 ] ]
        },
        msa179: {
            name: "Lawrence, KS",
            data: [ [ 1214, 999, 1169 ], [ 939, 789, 915 ], [ 77, 73, 152 ], [ 47, 49, 116 ], [ 3067, 2462, 3292 ], [ 2077, 1642, 2302 ] ]
        },
        msa180: {
            name: "Lawton, OK",
            data: [ [ 1720, 1414, 1440 ], [ 1345, 1094, 1118 ], [ 130, 75, 45 ], [ 61, 44, 18 ], [ 2111, 2034, 2379 ], [ 1130, 1076, 1395 ] ]
        },
        msa181: {
            name: "Lebanon, PA",
            data: [ [ 1373, 1232, 1306 ], [ 1025, 935, 1012 ], [ 170, 183, 207 ], [ 116, 131, 162 ], [ 3384, 2937, 3745 ], [ 2025, 1788, 2440 ] ]
        },
        msa182: {
            name: "Lewiston-Auburn, ME",
            data: [ [ 1024, 912, 1022 ], [ 715, 639, 715 ], [ 156, 163, 150 ], [ 100, 117, 103 ], [ 2524, 2233, 2956 ], [ 1363, 1180, 1731 ] ]
        },
        msa183: {
            name: "Lewiston, ID-WA",
            data: [ [ 693, 641, 688 ], [ 520, 438, 482 ], [ 100, 93, 84 ], [ 63, 56, 54 ], [ 2087, 1624, 2305 ], [ 1237, 951, 1444 ] ]
        },
        msa184: {
            name: "Lexington-Fayette, KY",
            data: [ [ 5895, 5911, 6954 ], [ 4190, 3829, 4651 ], [ 296, 242, 290 ], [ 162, 122, 194 ], [ 15008, 13011, 17690 ], [ 9006, 7827, 11417 ] ]
        },
        msa185: {
            name: "Lima, OH",
            data: [ [ 830, 782, 853 ], [ 576, 552, 614 ], [ 63, 41, 59 ], [ 22, 20, 32 ], [ 2715, 2272, 3104 ], [ 1660, 1374, 2025 ] ]
        },
        msa186: {
            name: "Lincoln, NE",
            data: [ [ 3574, 3238, 3952 ], [ 2888, 2690, 3279 ], [ 297, 275, 337 ], [ 223, 205, 235 ], [ 11008, 8875, 12040 ], [ 8040, 6367, 8904 ] ]
        },
        msa187: {
            name: "Little Rock-North Little Rock-Conway, AR",
            data: [ [ 10379, 9585, 10374 ], [ 7455, 6515, 7197 ], [ 662, 576, 619 ], [ 305, 285, 368 ], [ 18243, 14538, 20501 ], [ 10506, 8108, 12564 ] ]
        },
        msa188: {
            name: "Logan, UT-ID",
            data: [ [ 1400, 1310, 1411 ], [ 1067, 970, 1108 ], [ 104, 85, 101 ], [ 74, 50, 66 ], [ 3970, 2941, 4147 ], [ 2663, 1906, 2988 ] ]
        },
        msa189: {
            name: "Longview, TX",
            data: [ [ 2518, 2703, 2704 ], [ 1563, 1554, 1627 ], [ 287, 226, 279 ], [ 190, 128, 170 ], [ 2201, 2332, 2442 ], [ 1257, 1318, 1369 ] ]
        },
        msa190: {
            name: "Longview, WA",
            data: [ [ 1039, 872, 1056 ], [ 645, 558, 687 ], [ 83, 64, 93 ], [ 46, 39, 57 ], [ 3227, 2566, 3671 ], [ 1843, 1429, 2177 ] ]
        },
        msa191: {
            name: "Louisville/Jefferson County, KY-IN",
            data: [ [ 15798, 14822, 17429 ], [ 10854, 10021, 12033 ], [ 1422, 1344, 1573 ], [ 825, 817, 971 ], [ 44849, 37534, 49054 ], [ 25348, 21089, 29755 ] ]
        },
        msa192: {
            name: "Lubbock, TX",
            data: [ [ 3295, 2883, 3426 ], [ 2596, 2235, 2704 ], [ 233, 181, 148 ], [ 114, 88, 82 ], [ 3627, 3292, 4224 ], [ 2218, 1982, 2718 ] ]
        },
        msa193: {
            name: "Lynchburg, VA",
            data: [ [ 2418, 2199, 2432 ], [ 1708, 1573, 1628 ], [ 276, 248, 221 ], [ 183, 147, 139 ], [ 5982, 5235, 6068 ], [ 3778, 3123, 3882 ] ]
        },
        msa194: {
            name: "Macon, GA",
            data: [ [ 1600, 1480, 1583 ], [ 967, 875, 955 ], [ 122, 129, 127 ], [ 57, 74, 62 ], [ 3799, 3738, 4407 ], [ 1814, 1913, 2545 ] ]
        },
        msa195: {
            name: "Madera, CA",
            data: [ [ 1483, 1425, 1193 ], [ 1014, 948, 831 ], [ 50, 47, 37 ], [ 23, 22, 21 ], [ 1823, 1652, 3255 ], [ 863, 833, 1958 ] ]
        },
        msa196: {
            name: "Madison, WI",
            data: [ [ 6424, 5880, 7213 ], [ 4839, 4517, 5699 ], [ 1014, 1160, 1344 ], [ 790, 865, 1096 ], [ 30252, 25426, 33479 ], [ 21592, 17969, 25002 ] ]
        },
        msa197: {
            name: "Manchester-Nashua, NH",
            data: [ [ 4198, 3960, 4750 ], [ 3028, 2857, 3481 ], [ 387, 399, 458 ], [ 228, 236, 290 ], [ 14839, 12348, 16853 ], [ 8917, 7262, 10593 ] ]
        },
        msa198: {
            name: "Manhattan, KS",
            data: [ [ 1544, 1496, 1711 ], [ 1076, 1044, 1284 ], [ 134, 125, 157 ], [ 101, 90, 130 ], [ 2417, 2255, 2917 ], [ 1498, 1395, 1982 ] ]
        },
        msa199: {
            name: "Mankato-North Mankato, MN",
            data: [ [ 899, 893, 997 ], [ 685, 670, 801 ], [ 80, 68, 87 ], [ 48, 43, 70 ], [ 3027, 2509, 3345 ], [ 2039, 1696, 2412 ] ]
        },
        msa200: {
            name: "Mansfield, OH",
            data: [ [ 829, 813, 939 ], [ 584, 615, 719 ], [ 103, 96, 132 ], [ 63, 58, 83 ], [ 2149, 1920, 2828 ], [ 1232, 1110, 1749 ] ]
        },
        msa201: {
            name: "Mayag?ez, PR",
            data: [ [ 357, 461, 390 ], [ 177, 249, 206 ], [ 50, 40, 24 ], [ 23, 24, 14 ], [ 444, 414, 605 ], [ 226, 206, 314 ] ]
        },
        msa202: {
            name: "McAllen-Edinburg-Mission, TX",
            data: [ [ 4305, 3827, 3774 ], [ 2572, 2144, 2183 ], [ 638, 537, 525 ], [ 136, 126, 132 ], [ 4989, 5494, 5583 ], [ 1718, 2040, 2373 ] ]
        },
        msa203: {
            name: "Medford, OR",
            data: [ [ 2100, 1964, 2460 ], [ 1437, 1326, 1695 ], [ 117, 83, 118 ], [ 64, 50, 82 ], [ 4829, 4059, 6782 ], [ 2716, 2203, 4228 ] ]
        },
        msa204: {
            name: "Memphis, TN-MS-AR",
            data: [ [ 12291, 10836, 11997 ], [ 9093, 7872, 8817 ], [ 513, 470, 525 ], [ 220, 201, 229 ], [ 26194, 21777, 30167 ], [ 13699, 10896, 17418 ] ]
        },
        msa205: {
            name: "Merced, CA",
            data: [ [ 3088, 2462, 2135 ], [ 2040, 1676, 1429 ], [ 69, 72, 45 ], [ 46, 40, 17 ], [ 1936, 1849, 4772 ], [ 915, 932, 2885 ] ]
        },
        msa206: {
            name: "Michigan City-La Porte, IN",
            data: [ [ 929, 818, 924 ], [ 645, 594, 647 ], [ 115, 164, 151 ], [ 65, 92, 87 ], [ 3021, 2610, 3338 ], [ 1476, 1386, 1938 ] ]
        },
        msa207: {
            name: "Midland, TX",
            data: [ [ 1995, 2731, 3501 ], [ 1426, 1986, 2430 ], [ 129, 117, 141 ], [ 62, 61, 76 ], [ 1967, 1883, 2168 ], [ 1082, 1039, 1292 ] ]
        },
        msa208: {
            name: "Milwaukee-Waukesha-West Allis, WI",
            data: [ [ 12739, 11727, 14451 ], [ 9633, 9060, 11272 ], [ 1647, 1343, 1753 ], [ 1068, 955, 1321 ], [ 61161, 46852, 64574 ], [ 42075, 31173, 45462 ] ]
        },
        msa209: {
            name: "Minneapolis-St. Paul-Bloomington, MN-WI",
            data: [ [ 38512, 37820, 44980 ], [ 29178, 29380, 35696 ], [ 2859, 2484, 3148 ], [ 1710, 1534, 2154 ], [ 130279, 101198, 153903 ], [ 81867, 62168, 105027 ] ]
        },
        msa210: {
            name: "Missoula, MT",
            data: [ [ 1148, 1023, 1138 ], [ 838, 766, 849 ], [ 112, 89, 85 ], [ 87, 64, 59 ], [ 3438, 2629, 3847 ], [ 2267, 1714, 2674 ] ]
        },
        msa211: {
            name: "Mobile, AL",
            data: [ [ 4153, 3810, 3881 ], [ 2578, 2397, 2376 ], [ 250, 223, 227 ], [ 84, 63, 84 ], [ 8741, 7090, 8409 ], [ 4073, 3113, 4276 ] ]
        },
        msa212: {
            name: "Modesto, CA",
            data: [ [ 6944, 5927, 5403 ], [ 4845, 4225, 3939 ], [ 154, 144, 168 ], [ 71, 64, 93 ], [ 6854, 5532, 13033 ], [ 3833, 2993, 8521 ] ]
        },
        msa213: {
            name: "Monroe, LA",
            data: [ [ 2283, 2119, 2113 ], [ 1293, 1210, 1254 ], [ 146, 118, 135 ], [ 66, 59, 67 ], [ 3052, 2957, 3491 ], [ 1739, 1583, 1979 ] ]
        },
        msa214: {
            name: "Monroe, MI",
            data: [ [ 1544, 1609, 1685 ], [ 985, 1076, 1160 ], [ 76, 66, 105 ], [ 39, 32, 58 ], [ 3288, 2978, 5571 ], [ 1795, 1696, 3640 ] ]
        },
        msa215: {
            name: "Montgomery, AL",
            data: [ [ 3626, 3501, 3830 ], [ 2376, 2119, 2456 ], [ 155, 157, 179 ], [ 59, 72, 82 ], [ 8716, 7428, 10425 ], [ 4484, 3628, 5622 ] ]
        },
        msa216: {
            name: "Morgantown, WV",
            data: [ [ 1643, 1670, 1794 ], [ 1039, 1063, 1124 ], [ 159, 169, 212 ], [ 91, 101, 142 ], [ 2721, 2197, 2514 ], [ 1557, 1351, 1591 ] ]
        },
        msa217: {
            name: "Morristown, TN",
            data: [ [ 1338, 1532, 1641 ], [ 761, 752, 807 ], [ 132, 125, 166 ], [ 64, 73, 112 ], [ 3050, 2611, 3165 ], [ 1617, 1353, 1692 ] ]
        },
        msa218: {
            name: "Mount Vernon-Anacortes, WA",
            data: [ [ 1240, 1088, 1326 ], [ 869, 777, 948 ], [ 110, 92, 127 ], [ 69, 55, 73 ], [ 4142, 3306, 4519 ], [ 2546, 1975, 2810 ] ]
        },
        msa219: {
            name: "Muncie, IN",
            data: [ [ 817, 713, 827 ], [ 599, 504, 570 ], [ 90, 104, 162 ], [ 48, 67, 94 ], [ 2144, 1936, 2338 ], [ 1184, 999, 1370 ] ]
        },
        msa220: {
            name: "Muskegon, MI",
            data: [ [ 1360, 1462, 1636 ], [ 924, 1009, 1107 ], [ 120, 107, 105 ], [ 59, 47, 46 ], [ 3483, 3233, 4549 ], [ 1883, 1838, 2846 ] ]
        },
        msa221: {
            name: "Myrtle Beach-Conway-North Myrtle Beach, SC-NC",
            data: [ [ 3361, 3333, 3966 ], [ 2057, 1935, 2432 ], [ 188, 164, 189 ], [ 134, 96, 127 ], [ 6827, 5937, 8035 ], [ 3359, 3049, 4498 ] ]
        },
        msa222: {
            name: "Napa, CA",
            data: [ [ 1399, 1311, 1519 ], [ 902, 885, 958 ], [ 88, 104, 67 ], [ 48, 66, 43 ], [ 3892, 3220, 5109 ], [ 2250, 1836, 3153 ] ]
        },
        msa223: {
            name: "Naples-Immokalee-Marco Island, FL",
            data: [ [ 3388, 3080, 3541 ], [ 2113, 1962, 2301 ], [ 72, 88, 116 ], [ 31, 36, 53 ], [ 5064, 4491, 7350 ], [ 2483, 2393, 4207 ] ]
        },
        msa224: {
            name: "Nashville-Davidson--Murfreesboro--Franklin, TN",
            data: [ [ 21661, 21235, 26499 ], [ 15719, 15053, 18970 ], [ 1023, 994, 1165 ], [ 563, 539, 641 ], [ 49395, 44203, 60175 ], [ 27673, 23862, 35351 ] ]
        },
        msa225: {
            name: "New Haven-Milford, CT",
            data: [ [ 7633, 6502, 6891 ], [ 5339, 4494, 4991 ], [ 943, 900, 872 ], [ 585, 538, 552 ], [ 22591, 19263, 25079 ], [ 13078, 11022, 15443 ] ]
        },
        msa226: {
            name: "New Orleans-Metairie, LA",
            data: [ [ 10535, 11049, 12719 ], [ 6582, 7080, 8348 ], [ 1211, 1103, 1131 ], [ 430, 399, 506 ], [ 26731, 25733, 29011 ], [ 13775, 12707, 15204 ] ]
        },
        msa227: {
            name: "Niles-Benton Harbor, MI",
            data: [ [ 1185, 1157, 1384 ], [ 850, 802, 951 ], [ 259, 270, 268 ], [ 141, 133, 147 ], [ 4045, 3843, 4606 ], [ 2343, 2140, 2845 ] ]
        },
        msa228: {
            name: "North Port-Sarasota-Bradenton, FL",
            data: [ [ 7174, 6839, 8278 ], [ 4614, 4500, 5609 ], [ 264, 187, 303 ], [ 100, 95, 144 ], [ 11207, 10065, 18046 ], [ 5719, 5582, 11135 ] ]
        },
        msa229: {
            name: "Norwich-New London, CT",
            data: [ [ 2510, 2133, 2348 ], [ 1742, 1516, 1720 ], [ 449, 398, 474 ], [ 323, 271, 348 ], [ 8020, 6527, 9015 ], [ 4591, 3772, 5694 ] ]
        },
        msa230: {
            name: "Ocala, FL",
            data: [ [ 2886, 2793, 3058 ], [ 1755, 1739, 1889 ], [ 160, 114, 167 ], [ 48, 42, 63 ], [ 4526, 3859, 6617 ], [ 1992, 1857, 3830 ] ]
        },
        msa231: {
            name: "Ocean City, NJ",
            data: [ [ 743, 707, 714 ], [ 492, 474, 493 ], [ 203, 167, 204 ], [ 134, 97, 128 ], [ 3320, 2716, 3263 ], [ 1726, 1448, 1814 ] ]
        },
        msa232: {
            name: "Odessa, TX",
            data: [ [ 1510, 1681, 2431 ], [ 928, 1009, 1472 ], [ 168, 124, 114 ], [ 55, 47, 54 ], [ 1232, 1056, 1179 ], [ 596, 520, 638 ] ]
        },
        msa233: {
            name: "Ogden-Clearfield, UT",
            data: [ [ 7469, 6731, 8639 ], [ 5628, 4909, 6640 ], [ 845, 641, 827 ], [ 627, 437, 580 ], [ 22600, 15507, 26076 ], [ 15335, 9813, 18585 ] ]
        },
        msa234: {
            name: "Oklahoma City, OK",
            data: [ [ 18003, 17578, 20054 ], [ 13117, 12532, 14503 ], [ 1603, 1241, 1637 ], [ 745, 643, 949 ], [ 28216, 25124, 31514 ], [ 15962, 14605, 19635 ] ]
        },
        msa235: {
            name: "Olympia-Tumwater, WA",
            data: [ [ 3558, 3049, 3289 ], [ 2632, 2264, 2482 ], [ 171, 162, 213 ], [ 100, 98, 132 ], [ 10107, 8097, 11882 ], [ 6387, 4995, 7815 ] ]
        },
        msa236: {
            name: "Omaha-Council Bluffs, NE-IA",
            data: [ [ 10932, 10193, 11906 ], [ 8994, 8278, 9745 ], [ 968, 962, 1149 ], [ 609, 611, 780 ], [ 34252, 25749, 36147 ], [ 23303, 17060, 25287 ] ]
        },
        msa237: {
            name: "Orlando-Kissimmee-Sanford, FL",
            data: [ [ 25645, 23212, 25351 ], [ 16062, 14627, 16149 ], [ 662, 457, 666 ], [ 248, 175, 299 ], [ 27270, 24398, 53516 ], [ 13174, 13173, 33032 ] ]
        },
        msa238: {
            name: "Oshkosh-Neenah, WI",
            data: [ [ 1625, 1531, 1758 ], [ 1224, 1167, 1365 ], [ 256, 268, 326 ], [ 197, 204, 248 ], [ 6896, 5750, 7539 ], [ 4749, 3837, 5319 ] ]
        },
        msa239: {
            name: "Owensboro, KY",
            data: [ [ 1441, 1588, 1868 ], [ 998, 1006, 1270 ], [ 139, 180, 209 ], [ 87, 114, 135 ], [ 2766, 2527, 2988 ], [ 1664, 1549, 1913 ] ]
        },
        msa240: {
            name: "Oxnard-Thousand Oaks-Ventura, CA",
            data: [ [ 8618, 7608, 8355 ], [ 5839, 5252, 5928 ], [ 608, 800, 578 ], [ 408, 501, 395 ], [ 27497, 23869, 37336 ], [ 17481, 15189, 24919 ] ]
        },
        msa241: {
            name: "Palm Bay-Melbourne-Titusville, FL",
            data: [ [ 5530, 5273, 6382 ], [ 3871, 3562, 4360 ], [ 184, 176, 216 ], [ 82, 73, 94 ], [ 8855, 8167, 16672 ], [ 4333, 4450, 9931 ] ]
        },
        msa242: {
            name: "Panama City, FL",
            data: [ [ 1837, 2048, 2207 ], [ 1085, 1158, 1254 ], [ 216, 175, 163 ], [ 92, 105, 84 ], [ 3191, 2556, 4199 ], [ 1509, 1297, 2313 ] ]
        },
        msa243: {
            name: "Parkersburg-Vienna, WV",
            data: [ [ 1484, 1717, 1687 ], [ 995, 1114, 1074 ], [ 217, 203, 209 ], [ 141, 131, 159 ], [ 2888, 2419, 3141 ], [ 1606, 1493, 2088 ] ]
        },
        msa244: {
            name: "Pensacola-Ferry Pass-Brent, FL",
            data: [ [ 4638, 4813, 5392 ], [ 3289, 3314, 3682 ], [ 200, 192, 164 ], [ 86, 114, 79 ], [ 8519, 7472, 11652 ], [ 4453, 4131, 7056 ] ]
        },
        msa245: {
            name: "Peoria, IL",
            data: [ [ 4186, 4142, 4902 ], [ 3447, 3437, 4065 ], [ 532, 500, 565 ], [ 348, 307, 397 ], [ 11228, 9209, 11831 ], [ 7583, 5968, 8259 ] ]
        },
        msa246: {
            name: "Phoenix-Mesa-Scottsdale, AZ",
            data: [ [ 64274, 60051, 61729 ], [ 45347, 42699, 43646 ], [ 1237, 1210, 1514 ], [ 502, 534, 803 ], [ 80038, 62892, 148129 ], [ 48038, 37827, 101112 ] ]
        },
        msa247: {
            name: "Pine Bluff, AR",
            data: [ [ 948, 877, 911 ], [ 485, 396, 381 ], [ 82, 57, 70 ], [ 40, 25, 35 ], [ 1331, 973, 1270 ], [ 668, 461, 639 ] ]
        },
        msa248: {
            name: "Pittsburgh, PA",
            data: [ [ 22993, 21476, 23936 ], [ 17570, 16241, 18379 ], [ 4266, 4352, 5326 ], [ 2739, 2681, 3477 ], [ 54008, 49988, 61958 ], [ 31085, 29182, 38787 ] ]
        },
        msa249: {
            name: "Pittsfield, MA",
            data: [ [ 1166, 1084, 1245 ], [ 834, 727, 872 ], [ 424, 313, 397 ], [ 313, 210, 292 ], [ 3292, 2459, 3670 ], [ 2104, 1435, 2363 ] ]
        },
        msa250: {
            name: "Pocatello, ID",
            data: [ [ 1094, 994, 1031 ], [ 799, 734, 678 ], [ 66, 55, 73 ], [ 41, 29, 40 ], [ 2705, 2184, 2832 ], [ 1587, 1280, 1767 ] ]
        },
        msa251: {
            name: "Ponce, PR",
            data: [ [ 1267, 1601, 1258 ], [ 694, 966, 745 ], [ 149, 148, 99 ], [ 72, 54, 60 ], [ 1244, 999, 1434 ], [ 723, 576, 892 ] ]
        },
        msa252: {
            name: "Port St. Lucie, FL",
            data: [ [ 4612, 3927, 4527 ], [ 2882, 2554, 3032 ], [ 206, 165, 269 ], [ 83, 81, 101 ], [ 5426, 5004, 10219 ], [ 2425, 2555, 6129 ] ]
        },
        msa253: {
            name: "Portland-South Portland, ME",
            data: [ [ 6211, 5541, 6450 ], [ 4293, 3911, 4580 ], [ 1263, 820, 1111 ], [ 907, 537, 758 ], [ 20670, 16550, 21764 ], [ 12437, 9571, 13858 ] ]
        },
        msa254: {
            name: "Portland-Vancouver-Hillsboro, OR-WA",
            data: [ [ 27881, 24696, 29767 ], [ 19348, 17693, 21956 ], [ 1476, 1273, 2301 ], [ 780, 697, 1599 ], [ 87120, 66358, 96808 ], [ 54397, 39789, 62656 ] ]
        },
        msa255: {
            name: "Prescott, AZ",
            data: [ [ 2401, 2460, 2858 ], [ 1621, 1662, 1904 ], [ 116, 73, 97 ], [ 49, 32, 47 ], [ 5320, 4468, 7428 ], [ 2836, 2567, 4793 ] ]
        },
        msa256: {
            name: "Providence-Warwick, RI-MA",
            data: [ [ 13903, 12587, 13662 ], [ 9631, 8776, 9660 ], [ 1743, 1692, 2031 ], [ 1186, 1151, 1496 ], [ 46374, 37942, 53155 ], [ 28440, 22867, 34896 ] ]
        },
        msa257: {
            name: "Provo-Orem, UT",
            data: [ [ 6715, 6420, 7616 ], [ 5033, 4741, 5895 ], [ 259, 253, 277 ], [ 163, 149, 190 ], [ 16976, 11659, 19991 ], [ 11406, 7434, 14255 ] ]
        },
        msa258: {
            name: "Pueblo, CO",
            data: [ [ 1893, 1639, 1536 ], [ 1410, 1158, 1109 ], [ 124, 108, 112 ], [ 66, 55, 58 ], [ 4097, 3824, 4679 ], [ 2437, 2034, 2796 ] ]
        },
        msa259: {
            name: "Punta Gorda, FL",
            data: [ [ 1307, 1241, 1475 ], [ 835, 787, 963 ], [ 50, 41, 77 ], [ 27, 21, 33 ], [ 2569, 2252, 4091 ], [ 1221, 1192, 2572 ] ]
        },
        msa260: {
            name: "Racine, WI",
            data: [ [ 1520, 1460, 1598 ], [ 1157, 1115, 1260 ], [ 154, 137, 179 ], [ 93, 92, 116 ], [ 7655, 6079, 8150 ], [ 5059, 4001, 5807 ] ]
        },
        msa261: {
            name: "Raleigh, NC",
            data: [ [ 16756, 15576, 18497 ], [ 12305, 11046, 13474 ], [ 560, 523, 629 ], [ 301, 327, 398 ], [ 42847, 37681, 49785 ], [ 28072, 23378, 32882 ] ]
        },
        msa262: {
            name: "Rapid City, SD",
            data: [ [ 1559, 1644, 2034 ], [ 1127, 1303, 1569 ], [ 158, 155, 293 ], [ 114, 95, 199 ], [ 3393, 2945, 4188 ], [ 2171, 1971, 2830 ] ]
        },
        msa263: {
            name: "Reading, PA",
            data: [ [ 3779, 3218, 3552 ], [ 2918, 2521, 2768 ], [ 410, 352, 526 ], [ 256, 215, 348 ], [ 9908, 9092, 10931 ], [ 5727, 5209, 6722 ] ]
        },
        msa264: {
            name: "Redding, CA",
            data: [ [ 1691, 1499, 1676 ], [ 1152, 967, 1177 ], [ 104, 97, 99 ], [ 46, 47, 58 ], [ 4018, 3293, 5552 ], [ 2240, 1793, 3500 ] ]
        },
        msa265: {
            name: "Reno, NV",
            data: [ [ 5992, 5342, 5286 ], [ 4277, 3960, 4014 ], [ 138, 143, 134 ], [ 69, 80, 70 ], [ 7487, 6114, 12902 ], [ 4489, 3668, 8832 ] ]
        },
        msa266: {
            name: "Richmond, VA",
            data: [ [ 14114, 13927, 15407 ], [ 10476, 10139, 11477 ], [ 1297, 1083, 1232 ], [ 740, 581, 693 ], [ 38548, 32059, 44056 ], [ 22512, 18315, 27749 ] ]
        },
        msa267: {
            name: "Riverside-San Bernardino-Ontario, CA",
            data: [ [ 62042, 51651, 48921 ], [ 4e4, 34182, 32824 ], [ 1553, 1489, 1652 ], [ 777, 768, 979 ], [ 68529, 63967, 126078 ], [ 38129, 35302, 77689 ] ]
        },
        msa268: {
            name: "Roanoke, VA",
            data: [ [ 2899, 2986, 3038 ], [ 2154, 2091, 2190 ], [ 547, 245, 295 ], [ 434, 136, 181 ], [ 7898, 6758, 8601 ], [ 4796, 3950, 5444 ] ]
        },
        msa269: {
            name: "Rochester, MN",
            data: [ [ 2511, 2466, 2988 ], [ 1926, 1905, 2382 ], [ 218, 189, 172 ], [ 142, 125, 125 ], [ 7270, 5812, 7869 ], [ 4812, 3748, 5629 ] ]
        },
        msa270: {
            name: "Rochester, NY",
            data: [ [ 10169, 9886, 10557 ], [ 7890, 7770, 8455 ], [ 650, 706, 860 ], [ 402, 482, 590 ], [ 14800, 14108, 16748 ], [ 8588, 8186, 10520 ] ]
        },
        msa271: {
            name: "Rockford, IL",
            data: [ [ 3086, 2404, 2825 ], [ 2228, 1728, 2091 ], [ 234, 220, 227 ], [ 117, 109, 119 ], [ 11747, 9350, 12341 ], [ 7622, 5694, 8046 ] ]
        },
        msa272: {
            name: "Rocky Mount, NC",
            data: [ [ 1048, 1235, 1267 ], [ 591, 589, 595 ], [ 76, 74, 109 ], [ 34, 34, 53 ], [ 2455, 2099, 2564 ], [ 1300, 1066, 1450 ] ]
        },
        msa273: {
            name: "Rome, GA",
            data: [ [ 529, 549, 643 ], [ 366, 365, 463 ], [ 23, 28, 30 ], [ 12, 15, 8 ], [ 1396, 1333, 1893 ], [ 673, 720, 1067 ] ]
        },
        msa274: {
            name: "Sacramento--Roseville--Arden-Arcade, CA",
            data: [ [ 28632, 27059, 27805 ], [ 19645, 18933, 19687 ], [ 1473, 1366, 1575 ], [ 848, 802, 1077 ], [ 59245, 47e3, 91921 ], [ 36046, 27011, 58856 ] ]
        },
        msa275: {
            name: "Saginaw, MI",
            data: [ [ 1461, 1522, 1632 ], [ 993, 1076, 1157 ], [ 120, 133, 177 ], [ 57, 79, 107 ], [ 3547, 3203, 5027 ], [ 2181, 2030, 3388 ] ]
        },
        msa276: {
            name: "Salem, OR",
            data: [ [ 3615, 2919, 3533 ], [ 2401, 2011, 2406 ], [ 286, 236, 241 ], [ 145, 119, 149 ], [ 12067, 9158, 12269 ], [ 6940, 5107, 7433 ] ]
        },
        msa277: {
            name: "Salinas, CA",
            data: [ [ 4028, 3468, 3056 ], [ 2537, 2250, 2045 ], [ 154, 158, 207 ], [ 75, 84, 145 ], [ 6769, 6258, 9941 ], [ 3942, 3671, 6165 ] ]
        },
        msa278: {
            name: "Salisbury, MD-DE",
            data: [ [ 1033, 899, 946 ], [ 722, 584, 595 ], [ 110, 95, 92 ], [ 60, 54, 45 ], [ 2563, 2351, 2806 ], [ 1318, 1209, 1590 ] ]
        },
        msa279: {
            name: "Salt Lake City, UT",
            data: [ [ 14349, 13291, 16808 ], [ 10546, 9740, 12789 ], [ 897, 784, 937 ], [ 562, 505, 580 ], [ 41741, 28518, 47167 ], [ 27568, 17808, 33002 ] ]
        },
        msa280: {
            name: "San Angelo, TX",
            data: [ [ 1064, 1051, 1299 ], [ 841, 848, 995 ], [ 133, 134, 101 ], [ 67, 74, 53 ], [ 1370, 1322, 1559 ], [ 775, 833, 983 ] ]
        },
        msa281: {
            name: "San Antonio-New Braunfels, TX",
            data: [ [ 28244, 26043, 31061 ], [ 19280, 16998, 20188 ], [ 2237, 2278, 2261 ], [ 997, 1040, 1017 ], [ 34171, 35515, 46011 ], [ 18398, 19469, 26524 ] ]
        },
        msa282: {
            name: "San Diego-Carlsbad, CA",
            data: [ [ 36672, 32413, 35090 ], [ 24340, 21922, 24210 ], [ 1760, 1736, 2060 ], [ 1151, 1115, 1489 ], [ 91820, 83530, 133141 ], [ 58482, 52460, 89664 ] ]
        },
        msa283: {
            name: "San Germ?n, PR",
            data: [ [ 702, 982, 738 ], [ 379, 541, 402 ], [ 89, 62, 58 ], [ 42, 30, 34 ], [ 635, 674, 889 ], [ 345, 345, 521 ] ]
        },
        msa284: {
            name: "San Jose-Sunnyvale-Santa Clara, CA",
            data: [ [ 20716, 18660, 19556 ], [ 13855, 12608, 13866 ], [ 1425, 1484, 1844 ], [ 973, 942, 1386 ], [ 89586, 78023, 109633 ], [ 60887, 52861, 80882 ] ]
        },
        msa285: {
            name: "San Juan-Carolina-Caguas, PR",
            data: [ [ 15323, 19314, 15730 ], [ 8688, 11251, 9207 ], [ 1887, 1336, 1229 ], [ 1063, 730, 737 ], [ 17374, 13452, 22169 ], [ 9318, 7001, 13439 ] ]
        },
        msa286: {
            name: "San Luis Obispo-Paso Robles-Arroyo Grande, CA",
            data: [ [ 2448, 2594, 2807 ], [ 1689, 1818, 2026 ], [ 233, 200, 227 ], [ 138, 138, 162 ], [ 8997, 7264, 11189 ], [ 5473, 4468, 7416 ] ]
        },
        msa287: {
            name: "Santa Cruz-Watsonville, CA",
            data: [ [ 2087, 2051, 2282 ], [ 1318, 1346, 1521 ], [ 182, 162, 230 ], [ 113, 100, 146 ], [ 8141, 7116, 10732 ], [ 5132, 4595, 7246 ] ]
        },
        msa288: {
            name: "Santa Fe, NM",
            data: [ [ 1381, 1321, 1464 ], [ 835, 766, 871 ], [ 107, 87, 105 ], [ 54, 61, 58 ], [ 4750, 4096, 5686 ], [ 2551, 2187, 3115 ] ]
        },
        msa289: {
            name: "Santa Rosa, CA",
            data: [ [ 4686, 4430, 4800 ], [ 3220, 3099, 3414 ], [ 339, 406, 430 ], [ 213, 258, 303 ], [ 15296, 12410, 19552 ], [ 9839, 7958, 13403 ] ]
        },
        msa290: {
            name: "Savannah, GA",
            data: [ [ 4146, 4301, 4493 ], [ 3043, 3036, 3297 ], [ 151, 135, 142 ], [ 67, 64, 74 ], [ 7967, 7276, 9149 ], [ 4036, 3851, 5264 ] ]
        },
        msa291: {
            name: "Scranton--Wilkes-Barre--Hazleton, PA",
            data: [ [ 4181, 4024, 4057 ], [ 2851, 2785, 2823 ], [ 1004, 918, 1089 ], [ 655, 590, 706 ], [ 11016, 10016, 12109 ], [ 5659, 5083, 6856 ] ]
        },
        msa292: {
            name: "Sebastian-Vero Beach, FL",
            data: [ [ 1196, 1084, 1378 ], [ 816, 721, 929 ], [ 57, 63, 86 ], [ 21, 26, 40 ], [ 2110, 1956, 3405 ], [ 1051, 1026, 2054 ] ]
        },
        msa293: {
            name: "Sheboygan, WI",
            data: [ [ 839, 727, 1003 ], [ 645, 582, 800 ], [ 206, 186, 257 ], [ 146, 144, 197 ], [ 4801, 3801, 4865 ], [ 3351, 2597, 3515 ] ]
        },
        msa294: {
            name: "Sherman-Denison, TX",
            data: [ [ 1186, 1178, 1359 ], [ 715, 677, 799 ], [ 83, 51, 82 ], [ 34, 25, 34 ], [ 1592, 1759, 1924 ], [ 837, 914, 1050 ] ]
        },
        msa295: {
            name: "Shreveport-Bossier City, LA",
            data: [ [ 5802, 5130, 5527 ], [ 3809, 3221, 3635 ], [ 277, 353, 484 ], [ 104, 168, 191 ], [ 7480, 6900, 9249 ], [ 4004, 3570, 5287 ] ]
        },
        msa296: {
            name: "Sioux City, IA-NE-SD",
            data: [ [ 1741, 1512, 1624 ], [ 1217, 1009, 1177 ], [ 189, 152, 220 ], [ 121, 95, 151 ], [ 3330, 3112, 4094 ], [ 1914, 1822, 2537 ] ]
        },
        msa297: {
            name: "Sioux Falls, SD",
            data: [ [ 3626, 3209, 3968 ], [ 2850, 2574, 3246 ], [ 285, 260, 363 ], [ 200, 159, 278 ], [ 9459, 7496, 10888 ], [ 6048, 4756, 7454 ] ]
        },
        msa298: {
            name: "South Bend-Mishawaka, IN-MI",
            data: [ [ 2476, 2375, 2661 ], [ 1875, 1805, 2089 ], [ 209, 206, 268 ], [ 104, 102, 165 ], [ 8117, 6986, 8963 ], [ 4601, 4006, 5583 ] ]
        },
        msa299: {
            name: "Spartanburg, SC",
            data: [ [ 3526, 4121, 4774 ], [ 1897, 1748, 2260 ], [ 141, 156, 184 ], [ 70, 91, 91 ], [ 5962, 5391, 6724 ], [ 3008, 2765, 3840 ] ]
        },
        msa300: {
            name: "Spokane-Spokane Valley, WA",
            data: [ [ 5366, 4631, 5210 ], [ 4016, 3455, 3893 ], [ 705, 483, 753 ], [ 485, 285, 458 ], [ 16032, 12641, 17606 ], [ 9565, 7410, 10785 ] ]
        },
        msa301: {
            name: "Springfield, IL",
            data: [ [ 2767, 2645, 2917 ], [ 2270, 2181, 2434 ], [ 444, 310, 520 ], [ 379, 239, 431 ], [ 9708, 7277, 10260 ], [ 7786, 5384, 8066 ] ]
        },
        msa302: {
            name: "Springfield, MA",
            data: [ [ 6110, 5504, 5999 ], [ 4375, 3887, 4292 ], [ 1079, 1025, 1197 ], [ 734, 719, 876 ], [ 16054, 13092, 17281 ], [ 9770, 7936, 11092 ] ]
        },
        msa303: {
            name: "Springfield, MO",
            data: [ [ 5370, 4813, 5424 ], [ 4007, 3411, 3939 ], [ 287, 231, 268 ], [ 166, 138, 159 ], [ 13508, 10513, 14048 ], [ 8465, 6468, 9317 ] ]
        },
        msa304: {
            name: "Springfield, OH",
            data: [ [ 1083, 978, 1149 ], [ 753, 685, 797 ], [ 76, 84, 122 ], [ 29, 44, 68 ], [ 3098, 2636, 3600 ], [ 1722, 1437, 2057 ] ]
        },
        msa305: {
            name: "St. Cloud, MN",
            data: [ [ 1632, 1687, 1960 ], [ 1240, 1310, 1550 ], [ 136, 107, 138 ], [ 97, 78, 98 ], [ 6025, 4477, 6329 ], [ 4061, 2923, 4576 ] ]
        },
        msa306: {
            name: "St. George, UT",
            data: [ [ 1879, 1980, 2152 ], [ 1331, 1422, 1609 ], [ 61, 41, 85 ], [ 36, 22, 55 ], [ 3580, 2783, 4647 ], [ 2175, 1665, 3156 ] ]
        },
        msa307: {
            name: "St. Joseph, MO-KS",
            data: [ [ 1009, 1034, 1153 ], [ 699, 727, 804 ], [ 150, 131, 189 ], [ 94, 78, 124 ], [ 2752, 2281, 2854 ], [ 1567, 1229, 1703 ] ]
        },
        msa308: {
            name: "St. Louis, MO-IL",
            data: [ [ 31150, 28608, 32133 ], [ 22975, 20780, 23316 ], [ 2483, 2242, 2647 ], [ 1543, 1291, 1719 ], [ 112775, 87527, 119177 ], [ 77096, 57350, 82386 ] ]
        },
        msa309: {
            name: "State College, PA",
            data: [ [ 1308, 1248, 1448 ], [ 1024, 977, 1132 ], [ 205, 185, 227 ], [ 152, 146, 181 ], [ 3485, 2989, 3844 ], [ 2329, 1942, 2662 ] ]
        },
        msa310: {
            name: "Stockton-Lodi, CA",
            data: [ [ 9767, 8282, 7708 ], [ 6628, 5727, 5505 ], [ 197, 219, 187 ], [ 94, 83, 108 ], [ 9497, 8383, 18334 ], [ 5135, 4565, 11597 ] ]
        },
        msa311: {
            name: "Sumter, SC",
            data: [ [ 1054, 1e3, 989 ], [ 581, 576, 518 ], [ 60, 88, 72 ], [ 28, 42, 41 ], [ 1844, 1613, 1885 ], [ 887, 847, 1078 ] ]
        },
        msa312: {
            name: "Syracuse, NY",
            data: [ [ 6094, 5940, 6630 ], [ 4784, 4570, 5077 ], [ 458, 510, 665 ], [ 326, 342, 480 ], [ 9511, 9162, 10677 ], [ 5704, 5378, 6895 ] ]
        },
        msa313: {
            name: "Tallahassee, FL",
            data: [ [ 3410, 3049, 3336 ], [ 2185, 1899, 2080 ], [ 205, 140, 193 ], [ 99, 82, 125 ], [ 6335, 5325, 7882 ], [ 3499, 2920, 4743 ] ]
        },
        msa314: {
            name: "Tampa-St. Petersburg-Clearwater, FL",
            data: [ [ 29118, 28217, 32076 ], [ 18877, 18272, 21032 ], [ 966, 976, 1390 ], [ 374, 404, 650 ], [ 41028, 36142, 65477 ], [ 20251, 18825, 39087 ] ]
        },
        msa315: {
            name: "Terre Haute, IN",
            data: [ [ 1706, 1611, 1538 ], [ 1161, 1092, 1089 ], [ 225, 260, 320 ], [ 143, 152, 182 ], [ 3779, 3297, 4094 ], [ 2014, 1738, 2384 ] ]
        },
        msa316: {
            name: "Texarkana, TX-AR",
            data: [ [ 1416, 1426, 1432 ], [ 898, 848, 884 ], [ 121, 125, 206 ], [ 55, 53, 88 ], [ 1513, 1584, 1832 ], [ 830, 893, 1076 ] ]
        },
        msa317: {
            name: "Toledo, OH",
            data: [ [ 5066, 4931, 5469 ], [ 3686, 3568, 4018 ], [ 337, 292, 367 ], [ 158, 123, 182 ], [ 14770, 12974, 18123 ], [ 8386, 7299, 11234 ] ]
        },
        msa318: {
            name: "Topeka, KS",
            data: [ [ 2690, 2569, 2494 ], [ 1925, 1819, 1818 ], [ 259, 255, 337 ], [ 180, 181, 253 ], [ 6161, 5389, 6170 ], [ 3648, 3249, 3960 ] ]
        },
        msa319: {
            name: "Trenton, NJ",
            data: [ [ 3159, 2818, 3042 ], [ 2221, 1894, 2133 ], [ 346, 387, 359 ], [ 206, 233, 235 ], [ 10895, 9809, 12287 ], [ 6186, 5736, 7716 ] ]
        },
        msa320: {
            name: "Tucson, AZ",
            data: [ [ 11358, 11387, 12347 ], [ 7645, 7871, 8678 ], [ 451, 529, 602 ], [ 207, 296, 362 ], [ 23700, 17860, 30473 ], [ 14088, 10749, 20051 ] ]
        },
        msa321: {
            name: "Tulsa, OK",
            data: [ [ 11960, 11258, 13243 ], [ 8598, 7562, 9161 ], [ 1290, 986, 1239 ], [ 614, 523, 691 ], [ 21408, 17903, 22681 ], [ 12044, 10086, 13637 ] ]
        },
        msa322: {
            name: "Tuscaloosa, AL",
            data: [ [ 2324, 2469, 2660 ], [ 1611, 1688, 1742 ], [ 104, 112, 118 ], [ 54, 60, 72 ], [ 4836, 3705, 5286 ], [ 2751, 2017, 3339 ] ]
        },
        msa323: {
            name: "Tyler, TX",
            data: [ [ 2724, 2515, 2915 ], [ 1677, 1632, 1847 ], [ 273, 191, 281 ], [ 154, 109, 149 ], [ 3166, 3019, 3606 ], [ 1826, 1718, 2104 ] ]
        },
        msa324: {
            name: "Utica-Rome, NY",
            data: [ [ 2045, 2098, 2248 ], [ 1548, 1527, 1696 ], [ 286, 276, 500 ], [ 198, 195, 383 ], [ 3858, 3721, 4147 ], [ 2396, 2201, 2737 ] ]
        },
        msa325: {
            name: "Valdosta, GA",
            data: [ [ 1231, 1057, 1236 ], [ 915, 742, 835 ], [ 95, 79, 90 ], [ 66, 51, 54 ], [ 2387, 2450, 2725 ], [ 1429, 1539, 1709 ] ]
        },
        msa326: {
            name: "Vallejo-Fairfield, CA",
            data: [ [ 6335, 5583, 5567 ], [ 4333, 3834, 3617 ], [ 155, 162, 147 ], [ 83, 85, 89 ], [ 8382, 7138, 15043 ], [ 4876, 4009, 9607 ] ]
        },
        msa327: {
            name: "Victoria, TX",
            data: [ [ 1103, 1180, 1460 ], [ 743, 774, 979 ], [ 92, 126, 119 ], [ 39, 66, 65 ], [ 1249, 1058, 1184 ], [ 695, 587, 687 ] ]
        },
        msa328: {
            name: "Vineland-Bridgeton, NJ",
            data: [ [ 1033, 848, 811 ], [ 707, 588, 558 ], [ 211, 184, 191 ], [ 117, 112, 101 ], [ 2754, 2263, 2644 ], [ 1334, 1042, 1408 ] ]
        },
        msa329: {
            name: "Virginia Beach-Norfolk-Newport News, VA-NC",
            data: [ [ 18180, 18789, 20392 ], [ 14247, 14381, 15759 ], [ 2401, 1431, 1605 ], [ 1853, 837, 993 ], [ 49458, 45313, 61948 ], [ 29222, 26673, 39412 ] ]
        },
        msa330: {
            name: "Visalia-Porterville, CA",
            data: [ [ 3244, 3060, 2997 ], [ 2357, 2228, 2185 ], [ 166, 142, 118 ], [ 76, 73, 62 ], [ 4685, 4122, 8262 ], [ 2302, 2049, 5092 ] ]
        },
        msa331: {
            name: "Waco, TX",
            data: [ [ 2506, 2475, 2709 ], [ 1844, 1718, 1834 ], [ 204, 210, 233 ], [ 107, 111, 131 ], [ 2534, 2569, 3041 ], [ 1495, 1483, 1789 ] ]
        },
        msa332: {
            name: "Warner Robins, GA",
            data: [ [ 1927, 1685, 1698 ], [ 1520, 1267, 1287 ], [ 107, 75, 64 ], [ 61, 50, 29 ], [ 3316, 3202, 4367 ], [ 1913, 1950, 2793 ] ]
        },
        msa333: {
            name: "Waterloo-Cedar Falls, IA",
            data: [ [ 2507, 2207, 2301 ], [ 1993, 1703, 1846 ], [ 197, 169, 152 ], [ 144, 124, 104 ], [ 5159, 4228, 5102 ], [ 3554, 2803, 3714 ] ]
        },
        msa334: {
            name: "Wausau, WI",
            data: [ [ 1242, 1188, 1335 ], [ 892, 884, 1032 ], [ 247, 239, 458 ], [ 181, 195, 377 ], [ 5534, 4054, 5707 ], [ 3789, 2663, 4132 ] ]
        },
        msa335: {
            name: "Wenatchee, WA",
            data: [ [ 1042, 955, 1198 ], [ 708, 696, 868 ], [ 178, 110, 160 ], [ 118, 76, 127 ], [ 3402, 2794, 3556 ], [ 2093, 1638, 2259 ] ]
        },
        msa336: {
            name: "Wheeling, WV-OH",
            data: [ [ 1258, 1131, 1258 ], [ 840, 759, 907 ], [ 245, 198, 255 ], [ 154, 121, 162 ], [ 2162, 1902, 2234 ], [ 1165, 1089, 1427 ] ]
        },
        msa337: {
            name: "Wichita Falls, TX",
            data: [ [ 1705, 1324, 1431 ], [ 1377, 1039, 1078 ], [ 106, 109, 99 ], [ 65, 75, 67 ], [ 1775, 1635, 2116 ], [ 1146, 1042, 1426 ] ]
        },
        msa338: {
            name: "Wichita, KS",
            data: [ [ 8013, 6930, 7533 ], [ 5752, 5052, 5558 ], [ 740, 639, 855 ], [ 473, 453, 613 ], [ 16099, 12517, 15030 ], [ 9967, 7487, 9936 ] ]
        },
        msa339: {
            name: "Williamsport, PA",
            data: [ [ 1019, 1048, 1007 ], [ 774, 795, 812 ], [ 201, 189, 309 ], [ 148, 139, 227 ], [ 2056, 1964, 2457 ], [ 1191, 1124, 1597 ] ]
        },
        msa340: {
            name: "Wilmington, NC",
            data: [ [ 3980, 4027, 4687 ], [ 2532, 2383, 2769 ], [ 243, 232, 237 ], [ 127, 133, 149 ], [ 11617, 9883, 12759 ], [ 6519, 5391, 7563 ] ]
        },
        msa341: {
            name: "Winchester, VA-WV",
            data: [ [ 1675, 1475, 1647 ], [ 1192, 1053, 1232 ], [ 120, 101, 129 ], [ 78, 69, 88 ], [ 3316, 2844, 4337 ], [ 1969, 1747, 2923 ] ]
        },
        msa342: {
            name: "Winston-Salem, NC",
            data: [ [ 4847, 4683, 4907 ], [ 3299, 3202, 3229 ], [ 299, 356, 426 ], [ 186, 226, 240 ], [ 12371, 11274, 13052 ], [ 7130, 6383, 7750 ] ]
        },
        msa343: {
            name: "Worcester, MA-CT",
            data: [ [ 8148, 7205, 8471 ], [ 5663, 5106, 5988 ], [ 1135, 1219, 1420 ], [ 786, 821, 1022 ], [ 26828, 21075, 30844 ], [ 17045, 13346, 20518 ] ]
        },
        msa344: {
            name: "Yakima, WA",
            data: [ [ 1929, 1693, 1809 ], [ 1347, 1167, 1248 ], [ 288, 245, 229 ], [ 153, 137, 136 ], [ 5032, 4697, 6194 ], [ 2684, 2509, 3586 ] ]
        },
        msa345: {
            name: "York-Hanover, PA",
            data: [ [ 5105, 4423, 4708 ], [ 3846, 3330, 3582 ], [ 622, 456, 516 ], [ 443, 330, 359 ], [ 13225, 11115, 14429 ], [ 7746, 6313, 8813 ] ]
        },
        msa346: {
            name: "Youngstown-Warren-Boardman, OH-PA",
            data: [ [ 3812, 3601, 3978 ], [ 2821, 2657, 2868 ], [ 711, 655, 701 ], [ 375, 347, 397 ], [ 11835, 9853, 12557 ], [ 6159, 5086, 6803 ] ]
        },
        msa347: {
            name: "Yuba City, CA",
            data: [ [ 2157, 2002, 1842 ], [ 1494, 1386, 1354 ], [ 72, 56, 42 ], [ 29, 26, 17 ], [ 2456, 2112, 4720 ], [ 1279, 1094, 2781 ] ]
        },
        msa348: {
            name: "Yuma, AZ",
            data: [ [ 1834, 1592, 1896 ], [ 1419, 1233, 1418 ], [ 84, 58, 58 ], [ 33, 32, 27 ], [ 2714, 2151, 3835 ], [ 1391, 1094, 2304 ] ]
        }
    };
    var $home_purchase_checkbox = $("#home_purchase_checkbox");
    $home_purchase_checkbox.click(function() {
        var series1 = applicationsOriginationsChart.series[0];
        var series2 = applicationsOriginationsChart.series[1];
        if (series1.visible) {
            series1.hide();
            series2.hide();
            $home_purchase_checkbox.removeAttr("checked");
        } else {
            series1.show();
            series2.show();
            $home_purchase_checkbox.attr("checked");
        }
    });
    var $home_improvements_checkbox = $("#home_improvements_checkbox");
    $home_improvements_checkbox.click(function() {
        var series1 = applicationsOriginationsChart.series[2];
        var series2 = applicationsOriginationsChart.series[3];
        if (series1.visible) {
            series1.hide();
            series2.hide();
            $home_improvements_checkbox.removeAttr("checked");
        } else {
            series1.show();
            series2.show();
            $home_improvements_checkbox.attr("checked");
        }
    });
    var $refinancing_checkbox = $("#refinancing_checkbox");
    $refinancing_checkbox.click(function() {
        var series1 = applicationsOriginationsChart.series[4];
        var series2 = applicationsOriginationsChart.series[5];
        if (series1.visible) {
            series1.hide();
            series2.hide();
            $refinancing_checkbox.removeAttr("checked");
        } else {
            series1.show();
            series2.show();
            $refinancing_checkbox.attr("checked");
        }
    });
    var $msa = $("#hmda_chart_1_msa");
    $msa.change(function() {
        var msaID = $msa.val();
        var msaName = chart1DataObj[msaID].name.replace("&apos;", "’");
        applicationsOriginationsChart.setTitle({
            text: msaName
        });
        for (var i = 0; i < 6; i++) {
            applicationsOriginationsChart.series[i].setData(chart1DataObj[msaID].data[i]);
        }
    });
});

var chart2_options = {
    chart: {
        renderTo: "hmda_chart_2",
        alignTicks: true,
        height: 400,
        plotBackgroundColor: "#FFFFFF",
        plotBorderWidth: null,
        plotShadow: false,
        spacingTop: 20,
        spacingRight: 10,
        spacingBottom: 1,
        spacingLeft: 1,
        marginTop: 100,
        marginBottom: 20,
        type: "column"
    },
    exporting: {
        enabled: false
    },
    title: {
        text: "U.S. Total",
        align: "left",
        verticalAlign: "top",
        floating: false,
        style: {
            color: "#000000",
            fontSize: "18pt",
            fontFamily: '"Avenir Next LT W01 Demi", "Avenir Next Demi", "Avenir Next", "Arial"',
            fontWeight: "600"
        }
    },
    subtitle: {
        text: "Loan Originations by Type, 2010-2012",
        align: "left",
        verticalAlign: "top",
        floating: false,
        y: 40,
        style: {
            color: "#333333",
            fontSize: "12pt",
            fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
            fontWeight: "400"
        }
    },
    credits: {
        text: "Data are for first-lien, owner-occupied, 1-4 family and manufactured homes.",
        enabled: false
    },
    colors: [ "#43af2a", "#acdc91", "#0071ce", "#7fb8e6", "#d14123", "#e89f91" ],
    legend: {
        align: "right",
        backgroundColor: "#FFFFFF",
        borderWidth: 0,
        borderRadius: 0,
        borderColor: "#FFFFFF",
        floating: false,
        itemStyle: {
            color: "#212121",
            fontSize: "12pt",
            lineHeight: "12pt",
            fontFamily: '"Avenir Next LT W01 Medium Cn", "Avenir Next Light", "Avenir Next", "Arial Condensed", "Arial"',
            fontWeight: "",
            paddingBottom: "8pt"
        },
        layout: "vertical",
        margin: 10,
        padding: 10,
        shadow: false,
        symbolPadding: 5,
        symbolWidth: 20,
        verticalAlign: "middle",
        x: 0,
        y: 0
    },
    tooltip: {
        backgroundColor: "rgba(0, 0, 0, 0.65)",
        borderColor: "#999999",
        borderRadius: 0,
        borderWidth: 0,
        shadow: false,
        style: {
            color: "#ffffff",
            fontSize: "10pt",
            fontFamily: "",
            fontWeight: "",
            padding: 8,
            lineHeight: "12pt"
        },
        formatter: function() {
            var format = '<span style="font-size: 12pt;>' + this.series.name + " originations in " + this.x + ':<br><span style="font-weight: 700;>' + addCommas(this.y) + "</span></span>";
            return format;
        }
    },
    plotOptions: {
        series: {
            allowPointSelect: true,
            animation: false,
            borderWidth: 0,
            cursor: "pointer",
            marker: {
                radius: 10
            },
            showInLegend: true,
            shadow: false
        },
        pie: {
            dataLabels: {
                enabled: false
            },
            point: {
                events: {
                    legendItemClick: function() {
                        return false;
                    }
                }
            },
            size: "90%"
        },
        column: {
            dataLabels: {
                enabled: false
            },
            grouping: true,
            groupPadding: .1,
            pointPadding: 0,
            stacking: null,
            events: {
                legendItemClick: function() {
                    return false;
                }
            }
        },
        bar: {
            dataLabels: {
                enabled: false
            },
            groupPadding: .1,
            pointPadding: 0,
            stacking: null
        },
        line: {
            lineWidth: 8,
            marker: {
                enabled: false
            }
        },
        area: {
            lineWidth: 8,
            stacking: null,
            marker: {
                enabled: false
            }
        },
        allowPointSelect: false
    },
    xAxis: {
        categories: [ "2010", "2011", "2012" ],
        gridLineWidth: 0,
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            enabled: true,
            y: 20
        },
        lineWidth: 0,
        title: {
            text: null,
            margin: 12,
            style: {
                color: "#101820",
                fontSize: "12pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            x: -5
        },
        tickLength: 0,
        startOnTick: true,
        endOnTick: true,
        minPadding: 0,
        maxPadding: 0
    },
    yAxis: [ {
        title: {
            text: "Number of originations per year",
            margin: 10,
            style: {
                color: "#101820",
                fontSize: "12pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            }
        },
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            format: "{value:,.0f}",
            enabled: true
        },
        gridLineWidth: 1
    }, {
        opposite: true,
        title: {
            text: null
        },
        labels: {
            style: {
                color: "#212121",
                fontSize: "10pt",
                fontFamily: '"Avenir Next LT W01 Regular", "Avenir Next", "Arial"',
                fontWeight: "400"
            },
            format: " {value:,.0f} ",
            enabled: true
        },
        gridLineWidth: 0
    } ],
    series: [ {
        name: "Conventional",
        data: [ {
            name: "",
            y: 5672054
        }, {
            name: "",
            y: 5165911
        }, {
            name: "",
            y: 6899675
        } ]
    }, {
        yAxis: 0,
        name: "FHA",
        data: [ {
            name: "",
            y: 1411414
        }, {
            name: "",
            y: 1076844
        }, {
            name: "",
            y: 1188570
        } ]
    }, {
        yAxis: 0,
        name: "VA",
        data: [ {
            name: "",
            y: 230464
        }, {
            name: "",
            y: 291423
        }, {
            name: "",
            y: 425751
        } ]
    }, {
        yAxis: 0,
        name: "RHS",
        data: [ {
            name: "",
            y: 104683
        }, {
            name: "",
            y: 128221
        }, {
            name: "",
            y: 141789
        } ]
    } ]
};

$(document).ready(function() {
    if ($("#hmda_chart_2").length !== 0) {
        var originationsByTypeChart = new Highcharts.Chart(chart2_options);
    }
    if ($("#hmda_chart_2_msa").length !== 0) {
        $("#hmda_chart_2_msa").chosen();
    }
    var chart2DataObj = {
        msa00: {
            name: "U.S. Total",
            data: [ [ 5672054, 5165911, 6899675 ], [ 1411414, 1076844, 1188570 ], [ 230464, 291423, 425751 ], [ 104683, 128221, 141789 ] ]
        },
        msa01: {
            name: "Abilene, TX",
            data: [ [ 3958, 4055, 4503 ], [ 1417, 1108, 1299 ], [ 1149, 1189, 1658 ], [ 74, 97, 65 ] ]
        },
        msa02: {
            name: "Aguadilla-Isabela, PR",
            data: [ [ 1924, 2061, 2846 ], [ 1007, 994, 1026 ], [ 142, 215, 214 ], [ 553, 869, 775 ] ]
        },
        msa03: {
            name: "Akron, OH",
            data: [ [ 29202, 25890, 35282 ], [ 9867, 6754, 8515 ], [ 938, 1067, 1651 ], [ 79, 159, 157 ] ]
        },
        msa04: {
            name: "Albany-Schenectady-Troy, NY",
            data: [ [ 34764, 31350, 41431 ], [ 11169, 8285, 8707 ], [ 1168, 1436, 2093 ], [ 243, 408, 642 ] ]
        },
        msa05: {
            name: "Albany, GA",
            data: [ [ 3287, 3104, 3858 ], [ 1841, 1279, 1344 ], [ 553, 574, 812 ], [ 71, 101, 63 ] ]
        },
        msa06: {
            name: "Albuquerque, NM",
            data: [ [ 35520, 32345, 44664 ], [ 17507, 11905, 14875 ], [ 4765, 5840, 9048 ], [ 205, 169, 234 ] ]
        },
        msa07: {
            name: "Alexandria, LA",
            data: [ [ 5054, 4965, 5592 ], [ 1554, 1246, 1205 ], [ 327, 484, 708 ], [ 610, 629, 585 ] ]
        },
        msa08: {
            name: "Allentown-Bethlehem-Easton, PA-NJ",
            data: [ [ 40623, 34419, 44506 ], [ 13062, 9262, 10593 ], [ 1103, 1399, 2052 ], [ 265, 644, 727 ] ]
        },
        msa09: {
            name: "Altoona, PA",
            data: [ [ 4468, 4325, 5768 ], [ 1242, 1084, 1053 ], [ 198, 232, 347 ], [ 50, 107, 117 ] ]
        },
        msa10: {
            name: "Amarillo, TX",
            data: [ [ 7362, 6919, 9391 ], [ 3695, 3048, 3173 ], [ 601, 808, 1065 ], [ 48, 52, 102 ] ]
        },
        msa11: {
            name: "Ames, IA",
            data: [ [ 4997, 4501, 5910 ], [ 843, 598, 514 ], [ 117, 149, 213 ], [ 105, 163, 177 ] ]
        },
        msa12: {
            name: "Anchorage, AK",
            data: [ [ 19248, 16215, 21879 ], [ 7211, 5365, 6341 ], [ 4904, 5594, 7683 ], [ 334, 406, 324 ] ]
        },
        msa13: {
            name: "Ann Arbor, MI",
            data: [ [ 18345, 17705, 27025 ], [ 3042, 2644, 2747 ], [ 231, 426, 612 ], [ 202, 388, 371 ] ]
        },
        msa14: {
            name: "Anniston-Oxford-Jacksonville, AL",
            data: [ [ 3149, 3015, 3831 ], [ 1612, 1188, 1096 ], [ 389, 506, 638 ], [ 78, 109, 144 ] ]
        },
        msa15: {
            name: "Appleton, WI",
            data: [ [ 21008, 17759, 23329 ], [ 3155, 1913, 2676 ], [ 435, 547, 841 ], [ 158, 166, 171 ] ]
        },
        msa16: {
            name: "Asheville, NC",
            data: [ [ 21169, 20036, 24786 ], [ 3542, 2444, 2507 ], [ 653, 862, 1524 ], [ 638, 830, 1076 ] ]
        },
        msa17: {
            name: "Athens-Clarke County, GA",
            data: [ [ 6115, 6149, 8151 ], [ 2154, 1546, 1633 ], [ 217, 254, 360 ], [ 82, 124, 122 ] ]
        },
        msa18: {
            name: "Atlanta-Sandy Springs-Roswell, GA",
            data: [ [ 191636, 196566, 288629 ], [ 95962, 72841, 88422 ], [ 14175, 16373, 23939 ], [ 2192, 2999, 2960 ] ]
        },
        msa19: {
            name: "Atlantic City-Hammonton, NJ",
            data: [ [ 11824, 9484, 11830 ], [ 4060, 2830, 2993 ], [ 379, 464, 648 ], [ 259, 445, 511 ] ]
        },
        msa20: {
            name: "Auburn-Opelika, AL",
            data: [ [ 4750, 4502, 6621 ], [ 2113, 1562, 1727 ], [ 940, 1271, 1481 ], [ 92, 97, 154 ] ]
        },
        msa21: {
            name: "Augusta-Richmond County, GA-SC",
            data: [ [ 16508, 15484, 18192 ], [ 8097, 5818, 6046 ], [ 5106, 5924, 8087 ], [ 313, 381, 522 ] ]
        },
        msa22: {
            name: "Austin-Round Rock, TX",
            data: [ [ 87281, 82816, 110450 ], [ 21883, 17434, 21796 ], [ 5271, 6143, 9780 ], [ 2503, 2481, 2749 ] ]
        },
        msa23: {
            name: "Bakersfield, CA",
            data: [ [ 14099, 12549, 25340 ], [ 14641, 11601, 13522 ], [ 1980, 2249, 3275 ], [ 374, 451, 530 ] ]
        },
        msa24: {
            name: "Baltimore-Columbia-Towson, MD",
            data: [ [ 142301, 123798, 160876 ], [ 49965, 34100, 41522 ], [ 9664, 12075, 19845 ], [ 254, 596, 794 ] ]
        },
        msa25: {
            name: "Bangor, ME",
            data: [ [ 5336, 4851, 6089 ], [ 1592, 1161, 1144 ], [ 366, 400, 537 ], [ 379, 267, 319 ] ]
        },
        msa26: {
            name: "Barnstable Town, MA",
            data: [ [ 15832, 13576, 18815 ], [ 1879, 1215, 1390 ], [ 280, 400, 743 ], [ 136, 167, 256 ] ]
        },
        msa27: {
            name: "Baton Rouge, LA",
            data: [ [ 32785, 30035, 40224 ], [ 12361, 9101, 11241 ], [ 1214, 1778, 2591 ], [ 3170, 3180, 4171 ] ]
        },
        msa28: {
            name: "Battle Creek, MI",
            data: [ [ 4444, 4383, 5875 ], [ 1180, 958, 1217 ], [ 169, 327, 341 ], [ 185, 164, 211 ] ]
        },
        msa29: {
            name: "Bay City, MI",
            data: [ [ 3798, 3964, 5947 ], [ 1144, 873, 1062 ], [ 122, 179, 207 ], [ 94, 133, 144 ] ]
        },
        msa30: {
            name: "Beaumont-Port Arthur, TX",
            data: [ [ 9517, 9325, 10093 ], [ 2703, 2575, 2965 ], [ 473, 595, 703 ], [ 187, 230, 287 ] ]
        },
        msa31: {
            name: "Bellingham, WA",
            data: [ [ 13850, 11135, 15499 ], [ 2465, 1370, 1889 ], [ 567, 768, 1117 ], [ 239, 449, 440 ] ]
        },
        msa32: {
            name: "Bend-Redmond, OR",
            data: [ [ 8037, 7468, 13135 ], [ 2254, 1468, 1766 ], [ 509, 644, 1034 ], [ 410, 356, 377 ] ]
        },
        msa33: {
            name: "Billings, MT",
            data: [ [ 9073, 7748, 10435 ], [ 3332, 2123, 2218 ], [ 732, 783, 1115 ], [ 180, 259, 296 ] ]
        },
        msa34: {
            name: "Binghamton, NY",
            data: [ [ 5904, 5405, 7339 ], [ 2260, 2092, 1960 ], [ 274, 317, 408 ], [ 169, 179, 201 ] ]
        },
        msa35: {
            name: "Birmingham-Hoover, AL",
            data: [ [ 45200, 38857, 54750 ], [ 20456, 15056, 17003 ], [ 2407, 2870, 3956 ], [ 1453, 1525, 1948 ] ]
        },
        msa36: {
            name: "Bismarck, ND",
            data: [ [ 7728, 6337, 9884 ], [ 2201, 1517, 1211 ], [ 363, 529, 707 ], [ 112, 152, 124 ] ]
        },
        msa37: {
            name: "Blacksburg-Christiansburg-Radford, VA",
            data: [ [ 5889, 5114, 6357 ], [ 1404, 1033, 1094 ], [ 218, 352, 419 ], [ 460, 449, 514 ] ]
        },
        msa38: {
            name: "Bloomington, IN",
            data: [ [ 8761, 8271, 10660 ], [ 1960, 1340, 1525 ], [ 270, 425, 614 ], [ 351, 355, 369 ] ]
        },
        msa39: {
            name: "Boise City, ID",
            data: [ [ 26689, 22482, 43765 ], [ 13218, 8979, 10083 ], [ 2736, 3098, 4884 ], [ 339, 557, 497 ] ]
        },
        msa40: {
            name: "Boulder, CO",
            data: [ [ 28255, 24130, 34980 ], [ 3808, 2219, 2858 ], [ 367, 542, 932 ], [ 1, 3, 8 ] ]
        },
        msa41: {
            name: "Bowling Green, KY",
            data: [ [ 5227, 5375, 6120 ], [ 1636, 1232, 1229 ], [ 186, 271, 368 ], [ 84, 173, 254 ] ]
        },
        msa42: {
            name: "Bremerton-Silverdale, WA",
            data: [ [ 14128, 11802, 15984 ], [ 3152, 1959, 2542 ], [ 3416, 3917, 5862 ], [ 386, 535, 601 ] ]
        },
        msa43: {
            name: "Bridgeport-Stamford-Norwalk, CT",
            data: [ [ 62432, 55189, 69498 ], [ 8387, 5980, 6373 ], [ 357, 493, 757 ], [ 14, 11, 32 ] ]
        },
        msa44: {
            name: "Brownsville-Harlingen, TX",
            data: [ [ 4693, 5392, 5703 ], [ 2301, 2139, 2525 ], [ 389, 453, 596 ], [ 59, 32, 6 ] ]
        },
        msa45: {
            name: "Brunswick, GA",
            data: [ [ 3501, 3257, 4053 ], [ 1070, 881, 864 ], [ 368, 460, 605 ], [ 40, 78, 109 ] ]
        },
        msa46: {
            name: "Buffalo-Cheektowaga-Niagara Falls, NY",
            data: [ [ 25189, 23723, 29468 ], [ 13768, 12520, 12603 ], [ 1626, 1969, 2438 ], [ 155, 176, 171 ] ]
        },
        msa47: {
            name: "Burlington-South Burlington, VT",
            data: [ [ 16853, 14427, 19634 ], [ 1500, 932, 987 ], [ 348, 463, 765 ], [ 254, 397, 598 ] ]
        },
        msa48: {
            name: "Burlington, NC",
            data: [ [ 5403, 5372, 6507 ], [ 1964, 1509, 1628 ], [ 338, 402, 525 ], [ 178, 222, 282 ] ]
        },
        msa49: {
            name: "Canton-Massillon, OH",
            data: [ [ 14504, 12894, 17389 ], [ 5600, 4021, 4920 ], [ 496, 668, 1037 ], [ 79, 199, 224 ] ]
        },
        msa50: {
            name: "Cape Coral-Fort Myers, FL",
            data: [ [ 14544, 14719, 27665 ], [ 7231, 5161, 5377 ], [ 950, 1232, 1870 ], [ 553, 428, 376 ] ]
        },
        msa51: {
            name: "Cape Girardeau, MO-IL",
            data: [ [ 4168, 3912, 5109 ], [ 1094, 744, 642 ], [ 182, 181, 278 ], [ 262, 298, 290 ] ]
        },
        msa52: {
            name: "Carson City, NV",
            data: [ [ 1646, 1306, 2538 ], [ 612, 481, 627 ], [ 99, 140, 235 ], [ 1, 3, 2 ] ]
        },
        msa53: {
            name: "Casper, WY",
            data: [ [ 3761, 3227, 4673 ], [ 1756, 1460, 1615 ], [ 263, 341, 444 ], [ 77, 165, 231 ] ]
        },
        msa54: {
            name: "Cedar Rapids, IA",
            data: [ [ 21137, 18016, 19712 ], [ 4539, 2458, 2509 ], [ 579, 663, 1009 ], [ 208, 297, 343 ] ]
        },
        msa55: {
            name: "Champaign-Urbana, IL",
            data: [ [ 13432, 10934, 14129 ], [ 1951, 1440, 1296 ], [ 340, 419, 676 ], [ 287, 414, 587 ] ]
        },
        msa56: {
            name: "Charleston-North Charleston, SC",
            data: [ [ 28475, 26553, 37329 ], [ 10889, 7957, 8678 ], [ 5036, 5892, 8616 ], [ 390, 400, 495 ] ]
        },
        msa57: {
            name: "Charleston, WV",
            data: [ [ 11197, 11624, 12935 ], [ 3017, 2467, 2282 ], [ 439, 632, 806 ], [ 306, 340, 372 ] ]
        },
        msa58: {
            name: "Charlotte-Concord-Gastonia, NC-SC",
            data: [ [ 89509, 83859, 113284 ], [ 30959, 22439, 26233 ], [ 4564, 5405, 8215 ], [ 1591, 1909, 2614 ] ]
        },
        msa59: {
            name: "Charlottesville, VA",
            data: [ [ 11077, 9814, 12906 ], [ 2277, 1391, 1604 ], [ 675, 738, 1194 ], [ 121, 246, 320 ] ]
        },
        msa60: {
            name: "Chattanooga, TN-GA",
            data: [ [ 17864, 17154, 23546 ], [ 8888, 6397, 7188 ], [ 932, 1296, 1853 ], [ 536, 805, 896 ] ]
        },
        msa61: {
            name: "Cheyenne, WY",
            data: [ [ 4657, 4192, 5936 ], [ 2043, 1576, 1560 ], [ 1259, 1427, 2117 ], [ 7, 23, 43 ] ]
        },
        msa62: {
            name: "Chico, CA",
            data: [ [ 8380, 7001, 10637 ], [ 2226, 1895, 2194 ], [ 343, 395, 662 ], [ 63, 53, 70 ] ]
        },
        msa63: {
            name: "Cincinnati, OH-KY-IN",
            data: [ [ 142834, 119966, 162038 ], [ 33991, 24036, 29981 ], [ 3914, 4905, 7441 ], [ 1129, 1830, 2475 ] ]
        },
        msa64: {
            name: "Clarksville, TN-KY",
            data: [ [ 6477, 6117, 7688 ], [ 3214, 2321, 2526 ], [ 6520, 9430, 11256 ], [ 129, 146, 245 ] ]
        },
        msa65: {
            name: "Cleveland-Elyria, OH",
            data: [ [ 81411, 75232, 103299 ], [ 25234, 18238, 23854 ], [ 2425, 3077, 4716 ], [ 238, 323, 393 ] ]
        },
        msa66: {
            name: "Cleveland, TN",
            data: [ [ 4005, 3816, 4991 ], [ 1991, 1452, 1569 ], [ 146, 240, 324 ], [ 140, 203, 228 ] ]
        },
        msa67: {
            name: "Coeur d&apos;Alene, ID",
            data: [ [ 8105, 6250, 8533 ], [ 2396, 1667, 1731 ], [ 624, 815, 1105 ], [ 409, 516, 526 ] ]
        },
        msa68: {
            name: "College Station-Bryan, TX",
            data: [ [ 6137, 5674, 6755 ], [ 2122, 1613, 1684 ], [ 331, 383, 591 ], [ 40, 64, 106 ] ]
        },
        msa69: {
            name: "Colorado Springs, CO",
            data: [ [ 33661, 28574, 39185 ], [ 10853, 7593, 9313 ], [ 13841, 16790, 25366 ], [ 45, 66, 101 ] ]
        },
        msa70: {
            name: "Columbia, MO",
            data: [ [ 9770, 8264, 11571 ], [ 2248, 1431, 1818 ], [ 461, 480, 837 ], [ 307, 393, 429 ] ]
        },
        msa71: {
            name: "Columbia, SC",
            data: [ [ 27995, 25645, 34836 ], [ 12169, 8308, 8951 ], [ 4805, 5404, 7414 ], [ 832, 979, 1168 ] ]
        },
        msa72: {
            name: "Columbus, GA-AL",
            data: [ [ 5979, 5711, 7571 ], [ 3951, 2680, 2909 ], [ 3652, 4324, 5542 ], [ 74, 98, 140 ] ]
        },
        msa73: {
            name: "Columbus, IN",
            data: [ [ 5023, 4474, 5798 ], [ 1031, 869, 1073 ], [ 168, 207, 264 ], [ 39, 144, 89 ] ]
        },
        msa74: {
            name: "Columbus, OH",
            data: [ [ 100991, 88604, 120640 ], [ 33332, 22689, 30383 ], [ 4131, 4998, 7279 ], [ 624, 962, 1161 ] ]
        },
        msa75: {
            name: "Corpus Christi, TX",
            data: [ [ 9577, 9949, 11299 ], [ 3988, 3231, 3448 ], [ 1537, 1683, 2414 ], [ 93, 75, 75 ] ]
        },
        msa76: {
            name: "Corvallis, OR",
            data: [ [ 4664, 3911, 5330 ], [ 675, 438, 464 ], [ 128, 173, 288 ], [ 24, 43, 49 ] ]
        },
        msa77: {
            name: "Crestview-Fort Walton Beach-Destin, FL",
            data: [ [ 5465, 5150, 7506 ], [ 1385, 1023, 1062 ], [ 3373, 4602, 6442 ], [ 240, 349, 393 ] ]
        },
        msa78: {
            name: "Cumberland, MD-WV",
            data: [ [ 2993, 2570, 3161 ], [ 806, 589, 624 ], [ 123, 170, 244 ], [ 83, 98, 292 ] ]
        },
        msa79: {
            name: "Dalton, GA",
            data: [ [ 2737, 2900, 3925 ], [ 1856, 1267, 1362 ], [ 135, 93, 124 ], [ 195, 200, 175 ] ]
        },
        msa80: {
            name: "Danville, IL",
            data: [ [ 2227, 2047, 2378 ], [ 483, 468, 380 ], [ 136, 129, 148 ], [ 50, 89, 176 ] ]
        },
        msa81: {
            name: "Davenport-Moline-Rock Island, IA-IL",
            data: [ [ 24237, 19069, 26619 ], [ 6073, 4091, 3968 ], [ 942, 1231, 1692 ], [ 192, 395, 440 ] ]
        },
        msa82: {
            name: "Dayton, OH",
            data: [ [ 38276, 34447, 45736 ], [ 11399, 8240, 10149 ], [ 3491, 4039, 5965 ], [ 168, 384, 575 ] ]
        },
        msa83: {
            name: "Decatur, AL",
            data: [ [ 5683, 5555, 6741 ], [ 2682, 1945, 2063 ], [ 379, 521, 738 ], [ 91, 141, 224 ] ]
        },
        msa84: {
            name: "Decatur, IL",
            data: [ [ 4419, 3597, 5557 ], [ 1243, 1067, 1132 ], [ 209, 237, 288 ], [ 37, 75, 93 ] ]
        },
        msa85: {
            name: "Deltona-Daytona Beach-Ormond Beach, FL",
            data: [ [ 10065, 10030, 19774 ], [ 5624, 4210, 4641 ], [ 1082, 1282, 2035 ], [ 303, 320, 261 ] ]
        },
        msa86: {
            name: "Denver-Aurora-Lakewood, CO",
            data: [ [ 177353, 152983, 223960 ], [ 62322, 42310, 57805 ], [ 9098, 12433, 19169 ], [ 115, 153, 209 ] ]
        },
        msa87: {
            name: "Des Moines-West Des Moines, IA",
            data: [ [ 37523, 35329, 48372 ], [ 13062, 9132, 9614 ], [ 1212, 1674, 2378 ], [ 262, 347, 420 ] ]
        },
        msa88: {
            name: "Dothan, AL",
            data: [ [ 4537, 4390, 5417 ], [ 2034, 1504, 1477 ], [ 785, 826, 1210 ], [ 135, 167, 227 ] ]
        },
        msa89: {
            name: "Dover, DE",
            data: [ [ 5503, 4918, 6740 ], [ 2921, 1870, 2007 ], [ 1490, 1664, 2723 ], [ 246, 420, 701 ] ]
        },
        msa90: {
            name: "Dubuque, IA",
            data: [ [ 8855, 7434, 9987 ], [ 1404, 769, 736 ], [ 177, 186, 249 ], [ 54, 56, 101 ] ]
        },
        msa91: {
            name: "Duluth, MN-WI",
            data: [ [ 14638, 12626, 16078 ], [ 3325, 2224, 2450 ], [ 544, 666, 998 ], [ 130, 182, 221 ] ]
        },
        msa92: {
            name: "Durham-Chapel Hill, NC",
            data: [ [ 25999, 24637, 29403 ], [ 6092, 4445, 4586 ], [ 991, 1274, 1760 ], [ 171, 247, 317 ] ]
        },
        msa93: {
            name: "Eau Claire, WI",
            data: [ [ 11828, 9905, 13171 ], [ 1485, 930, 1024 ], [ 268, 332, 428 ], [ 176, 138, 184 ] ]
        },
        msa94: {
            name: "El Centro, CA",
            data: [ [ 1463, 1620, 3028 ], [ 2403, 1815, 2101 ], [ 401, 401, 621 ], [ 317, 505, 539 ] ]
        },
        msa95: {
            name: "El Paso, TX",
            data: [ [ 15189, 14715, 17094 ], [ 8711, 7504, 8992 ], [ 4595, 5755, 6730 ], [ 338, 304, 419 ] ]
        },
        msa96: {
            name: "Elizabethtown-Fort Knox, KY",
            data: [ [ 4757, 4159, 5004 ], [ 1590, 1090, 1053 ], [ 2336, 2014, 3158 ], [ 99, 211, 333 ] ]
        },
        msa97: {
            name: "Elkhart-Goshen, IN",
            data: [ [ 7900, 7499, 9800 ], [ 2742, 2122, 2273 ], [ 209, 236, 347 ], [ 114, 276, 302 ] ]
        },
        msa98: {
            name: "Elmira, NY",
            data: [ [ 2876, 2676, 3162 ], [ 738, 705, 628 ], [ 117, 153, 174 ], [ 62, 69, 75 ] ]
        },
        msa99: {
            name: "Erie, PA",
            data: [ [ 10239, 9462, 12064 ], [ 2727, 2311, 2351 ], [ 469, 500, 736 ], [ 57, 68, 51 ] ]
        },
        msa100: {
            name: "Eugene, OR",
            data: [ [ 17430, 13893, 19333 ], [ 4880, 3278, 3867 ], [ 1085, 1396, 1968 ], [ 248, 355, 456 ] ]
        },
        msa101: {
            name: "Evansville, IN-KY",
            data: [ [ 18907, 17273, 21336 ], [ 5168, 3591, 3327 ], [ 654, 749, 954 ], [ 647, 699, 574 ] ]
        },
        msa102: {
            name: "Fairbanks, AK",
            data: [ [ 3218, 2985, 4254 ], [ 1102, 854, 882 ], [ 1256, 1462, 1984 ], [ 65, 88, 75 ] ]
        },
        msa103: {
            name: "Fargo, ND-MN",
            data: [ [ 11386, 10573, 14233 ], [ 4086, 2753, 3223 ], [ 614, 712, 1146 ], [ 67, 85, 122 ] ]
        },
        msa104: {
            name: "Farmington, NM",
            data: [ [ 2414, 2735, 3386 ], [ 1599, 1083, 1409 ], [ 306, 336, 513 ], [ 151, 114, 159 ] ]
        },
        msa105: {
            name: "Fayetteville-Springdale-Rogers, AR-MO",
            data: [ [ 19476, 17288, 26302 ], [ 8165, 6080, 7264 ], [ 1272, 1407, 2200 ], [ 1197, 1388, 1773 ] ]
        },
        msa106: {
            name: "Fayetteville, NC",
            data: [ [ 7355, 7312, 8008 ], [ 3893, 2762, 2444 ], [ 11365, 12208, 14314 ], [ 342, 400, 421 ] ]
        },
        msa107: {
            name: "Flagstaff, AZ",
            data: [ [ 4786, 4168, 5814 ], [ 1304, 944, 1113 ], [ 224, 282, 445 ], [ 31, 47, 95 ] ]
        },
        msa108: {
            name: "Flint, MI",
            data: [ [ 9913, 9582, 17774 ], [ 3983, 3409, 4440 ], [ 322, 596, 702 ], [ 927, 917, 1250 ] ]
        },
        msa109: {
            name: "Florence-Muscle Shoals, AL",
            data: [ [ 5708, 5583, 6862 ], [ 1751, 1257, 1317 ], [ 277, 337, 430 ], [ 118, 200, 211 ] ]
        },
        msa110: {
            name: "Florence, SC",
            data: [ [ 5282, 5401, 6572 ], [ 2360, 1713, 1651 ], [ 412, 463, 527 ], [ 188, 125, 221 ] ]
        },
        msa111: {
            name: "Fond du Lac, WI",
            data: [ [ 8690, 6895, 9810 ], [ 1039, 686, 758 ], [ 202, 197, 323 ], [ 67, 65, 82 ] ]
        },
        msa112: {
            name: "Fort Collins, CO",
            data: [ [ 22627, 19560, 28615 ], [ 5654, 3835, 4648 ], [ 921, 1265, 2022 ], [ 118, 161, 245 ] ]
        },
        msa113: {
            name: "Fort Smith, AR-OK",
            data: [ [ 8681, 7943, 9535 ], [ 3773, 2935, 2936 ], [ 753, 933, 1217 ], [ 892, 955, 880 ] ]
        },
        msa114: {
            name: "Fort Wayne, IN",
            data: [ [ 21390, 18703, 25404 ], [ 7975, 6306, 7619 ], [ 932, 1175, 1532 ], [ 388, 625, 646 ] ]
        },
        msa115: {
            name: "Fresno, CA",
            data: [ [ 20771, 18449, 31865 ], [ 12958, 11134, 12125 ], [ 1182, 1610, 2366 ], [ 499, 584, 586 ] ]
        },
        msa116: {
            name: "Gadsden, AL",
            data: [ [ 2847, 2690, 3551 ], [ 1360, 980, 954 ], [ 215, 196, 279 ], [ 74, 141, 169 ] ]
        },
        msa117: {
            name: "Gainesville, FL",
            data: [ [ 7633, 6699, 9187 ], [ 2337, 1619, 1946 ], [ 436, 618, 793 ], [ 124, 179, 246 ] ]
        },
        msa118: {
            name: "Gainesville, GA",
            data: [ [ 5384, 5797, 7833 ], [ 2413, 2006, 2045 ], [ 305, 365, 562 ], [ 58, 161, 84 ] ]
        },
        msa119: {
            name: "Glens Falls, NY",
            data: [ [ 3668, 3586, 4463 ], [ 1404, 1021, 1093 ], [ 191, 231, 289 ], [ 172, 189, 226 ] ]
        },
        msa120: {
            name: "Goldsboro, NC",
            data: [ [ 2571, 2725, 3209 ], [ 962, 744, 838 ], [ 1449, 1490, 1899 ], [ 88, 90, 176 ] ]
        },
        msa121: {
            name: "Grand Forks, ND-MN",
            data: [ [ 3909, 3632, 5291 ], [ 1361, 948, 908 ], [ 310, 411, 549 ], [ 51, 76, 53 ] ]
        },
        msa122: {
            name: "Grand Junction, CO",
            data: [ [ 8095, 5653, 8456 ], [ 3992, 2692, 4296 ], [ 617, 829, 1285 ], [ 198, 228, 325 ] ]
        },
        msa123: {
            name: "Grand Rapids-Wyoming, MI",
            data: [ [ 39745, 35374, 50015 ], [ 9266, 7475, 9615 ], [ 614, 1105, 1463 ], [ 932, 1216, 1331 ] ]
        },
        msa124: {
            name: "Great Falls, MT",
            data: [ [ 3951, 3463, 4968 ], [ 1557, 1124, 1182 ], [ 929, 1032, 1557 ], [ 26, 34, 47 ] ]
        },
        msa125: {
            name: "Greeley, CO",
            data: [ [ 12710, 11153, 16843 ], [ 6486, 4861, 6266 ], [ 995, 1315, 2166 ], [ 294, 604, 855 ] ]
        },
        msa126: {
            name: "Green Bay, WI",
            data: [ [ 29089, 21381, 29229 ], [ 5672, 3151, 3692 ], [ 638, 710, 1095 ], [ 124, 222, 228 ] ]
        },
        msa127: {
            name: "Greensboro-High Point, NC",
            data: [ [ 27618, 26193, 31704 ], [ 9856, 7841, 8095 ], [ 1619, 2054, 2553 ], [ 700, 978, 1100 ] ]
        },
        msa128: {
            name: "Greenville-Anderson-Mauldin, SC",
            data: [ [ 25149, 25291, 33254 ], [ 9293, 6614, 7323 ], [ 1327, 1879, 2613 ], [ 892, 1148, 1444 ] ]
        },
        msa129: {
            name: "Greenville, NC",
            data: [ [ 5813, 5687, 6804 ], [ 2196, 1506, 1427 ], [ 546, 629, 748 ], [ 295, 261, 365 ] ]
        },
        msa130: {
            name: "Guayama, PR",
            data: [ [ 514, 499, 534 ], [ 590, 518, 638 ], [ 29, 63, 62 ], [ 210, 234, 257 ] ]
        },
        msa131: {
            name: "Gulfport-Biloxi-Pascagoula, MS",
            data: [ [ 6883, 5805, 6672 ], [ 2513, 1952, 1713 ], [ 1346, 1385, 2094 ], [ 248, 314, 419 ] ]
        },
        msa132: {
            name: "Hagerstown-Martinsburg, MD-WV",
            data: [ [ 9780, 8342, 11538 ], [ 4073, 2625, 2970 ], [ 1164, 1448, 2076 ], [ 1021, 1439, 1774 ] ]
        },
        msa133: {
            name: "Hanford-Corcoran, CA",
            data: [ [ 2084, 1873, 3323 ], [ 1501, 1202, 1496 ], [ 808, 756, 1173 ], [ 186, 191, 257 ] ]
        },
        msa134: {
            name: "Harrisburg-Carlisle, PA",
            data: [ [ 28486, 25105, 31223 ], [ 8756, 6231, 6639 ], [ 1645, 2023, 2942 ], [ 228, 395, 431 ] ]
        },
        msa135: {
            name: "Harrisonburg, VA",
            data: [ [ 5058, 4453, 5612 ], [ 1130, 675, 836 ], [ 174, 195, 324 ], [ 104, 160, 199 ] ]
        },
        msa136: {
            name: "Hartford-West Hartford-East Hartford, CT",
            data: [ [ 65453, 55444, 74605 ], [ 18024, 12539, 15422 ], [ 1151, 1607, 2394 ], [ 103, 236, 404 ] ]
        },
        msa137: {
            name: "Hattiesburg, MS",
            data: [ [ 5010, 4310, 5294 ], [ 1729, 1200, 1229 ], [ 336, 357, 557 ], [ 350, 292, 328 ] ]
        },
        msa138: {
            name: "Hickory-Lenoir-Morganton, NC",
            data: [ [ 11940, 11890, 14237 ], [ 3424, 2548, 2473 ], [ 514, 683, 990 ], [ 807, 970, 1099 ] ]
        },
        msa139: {
            name: "Hinesville, GA",
            data: [ [ 945, 859, 959 ], [ 653, 520, 449 ], [ 1485, 2266, 2508 ], [ 37, 34, 49 ] ]
        },
        msa140: {
            name: "Hot Springs, AR",
            data: [ [ 4178, 3657, 5010 ], [ 1351, 904, 1001 ], [ 283, 292, 478 ], [ 182, 273, 322 ] ]
        },
        msa141: {
            name: "Houma-Thibodaux, LA",
            data: [ [ 8257, 8181, 9267 ], [ 2801, 1902, 2219 ], [ 178, 276, 485 ], [ 497, 480, 705 ] ]
        },
        msa142: {
            name: "Houston-The Woodlands-Sugar Land, TX",
            data: [ [ 185218, 192856, 237881 ], [ 70534, 58748, 69199 ], [ 9622, 11551, 17785 ], [ 970, 1500, 1822 ] ]
        },
        msa143: {
            name: "Huntington-Ashland, WV-KY-OH",
            data: [ [ 10664, 10585, 11682 ], [ 2872, 2180, 1857 ], [ 471, 554, 655 ], [ 249, 353, 358 ] ]
        },
        msa144: {
            name: "Huntsville, AL",
            data: [ [ 23646, 21368, 26956 ], [ 8466, 5528, 6008 ], [ 3771, 4313, 6532 ], [ 1045, 1312, 1433 ] ]
        },
        msa145: {
            name: "Idaho Falls, ID",
            data: [ [ 5753, 4625, 6586 ], [ 2868, 1945, 2039 ], [ 368, 365, 610 ], [ 240, 235, 252 ] ]
        },
        msa146: {
            name: "Indianapolis-Carmel-Anderson, IN",
            data: [ [ 103845, 90905, 119643 ], [ 39419, 30513, 36490 ], [ 5615, 6385, 9240 ], [ 1104, 1754, 1714 ] ]
        },
        msa147: {
            name: "Iowa City, IA",
            data: [ [ 11561, 9674, 12264 ], [ 976, 555, 515 ], [ 194, 253, 334 ], [ 170, 216, 316 ] ]
        },
        msa148: {
            name: "Ithaca, NY",
            data: [ [ 3085, 2735, 3339 ], [ 450, 323, 349 ], [ 64, 63, 80 ], [ 19, 15, 53 ] ]
        },
        msa149: {
            name: "Jackson, MI",
            data: [ [ 5041, 4689, 7866 ], [ 1463, 1055, 1479 ], [ 140, 279, 351 ], [ 221, 250, 305 ] ]
        },
        msa150: {
            name: "Jackson, MS",
            data: [ [ 17713, 14621, 19324 ], [ 6890, 5376, 5805 ], [ 916, 966, 1582 ], [ 699, 724, 821 ] ]
        },
        msa151: {
            name: "Jackson, TN",
            data: [ [ 3398, 2962, 4077 ], [ 1790, 1291, 1397 ], [ 216, 340, 399 ], [ 214, 273, 254 ] ]
        },
        msa152: {
            name: "Jacksonville, FL",
            data: [ [ 41759, 36672, 59787 ], [ 20087, 14339, 15799 ], [ 9131, 10559, 15133 ], [ 706, 1194, 1331 ] ]
        },
        msa153: {
            name: "Jacksonville, NC",
            data: [ [ 3406, 3063, 3500 ], [ 1413, 893, 801 ], [ 8561, 8168, 10125 ], [ 152, 168, 243 ] ]
        },
        msa154: {
            name: "Janesville-Beloit, WI",
            data: [ [ 9690, 8295, 11104 ], [ 1804, 1265, 1481 ], [ 246, 317, 440 ], [ 78, 96, 116 ] ]
        },
        msa155: {
            name: "Jefferson City, MO",
            data: [ [ 8451, 7207, 9888 ], [ 1206, 916, 909 ], [ 292, 346, 538 ], [ 421, 435, 438 ] ]
        },
        msa156: {
            name: "Johnson City, TN",
            data: [ [ 7360, 7029, 8804 ], [ 2228, 1551, 1664 ], [ 460, 729, 916 ], [ 176, 276, 391 ] ]
        },
        msa157: {
            name: "Johnstown, PA",
            data: [ [ 5023, 4653, 5888 ], [ 1165, 988, 815 ], [ 220, 244, 337 ], [ 69, 122, 111 ] ]
        },
        msa158: {
            name: "Jonesboro, AR",
            data: [ [ 3917, 4045, 5156 ], [ 1794, 1368, 1439 ], [ 244, 289, 361 ], [ 351, 301, 315 ] ]
        },
        msa159: {
            name: "Joplin, MO",
            data: [ [ 6374, 6062, 7522 ], [ 2454, 1924, 1504 ], [ 382, 472, 580 ], [ 420, 495, 1022 ] ]
        },
        msa160: {
            name: "Kalamazoo-Portage, MI",
            data: [ [ 13790, 12622, 18678 ], [ 3367, 2905, 3786 ], [ 406, 614, 838 ], [ 463, 598, 731 ] ]
        },
        msa161: {
            name: "Kankakee, IL",
            data: [ [ 5055, 3869, 5544 ], [ 1038, 952, 969 ], [ 173, 222, 257 ], [ 64, 82, 86 ] ]
        },
        msa162: {
            name: "Kansas City, MO-KS",
            data: [ [ 105929, 90172, 122553 ], [ 40978, 29609, 36382 ], [ 6225, 7499, 10762 ], [ 1351, 1907, 2104 ] ]
        },
        msa163: {
            name: "Kennewick-Richland, WA",
            data: [ [ 13504, 12781, 15814 ], [ 6743, 4401, 4402 ], [ 1389, 1513, 2023 ], [ 161, 495, 423 ] ]
        },
        msa164: {
            name: "Killeen-Temple, TX",
            data: [ [ 6657, 6920, 7820 ], [ 3090, 2826, 2833 ], [ 10548, 9228, 12576 ], [ 140, 199, 290 ] ]
        },
        msa165: {
            name: "Kingsport-Bristol-Bristol, TN-VA",
            data: [ [ 10759, 10407, 12902 ], [ 3235, 2299, 2527 ], [ 526, 654, 927 ], [ 254, 292, 289 ] ]
        },
        msa166: {
            name: "Kingston, NY",
            data: [ [ 5342, 4620, 5714 ], [ 1219, 1130, 910 ], [ 138, 193, 236 ], [ 75, 71, 112 ] ]
        },
        msa167: {
            name: "Knoxville, TN",
            data: [ [ 33478, 29774, 39405 ], [ 11851, 8110, 8978 ], [ 1823, 2428, 3725 ], [ 669, 862, 1247 ] ]
        },
        msa168: {
            name: "Kokomo, IN",
            data: [ [ 3528, 3258, 5555 ], [ 1289, 983, 1183 ], [ 186, 210, 349 ], [ 137, 159, 125 ] ]
        },
        msa169: {
            name: "La Crosse-Onalaska, WI-MN",
            data: [ [ 10944, 9680, 12557 ], [ 1017, 661, 764 ], [ 208, 287, 431 ], [ 82, 114, 133 ] ]
        },
        msa170: {
            name: "Lafayette, LA",
            data: [ [ 11302, 10192, 12885 ], [ 3352, 2503, 2816 ], [ 448, 689, 1048 ], [ 1323, 1074, 1215 ] ]
        },
        msa171: {
            name: "Lake Charles, LA",
            data: [ [ 6533, 6451, 7481 ], [ 2331, 1737, 2018 ], [ 266, 414, 563 ], [ 377, 375, 480 ] ]
        },
        msa172: {
            name: "Lake Havasu City-Kingman, AZ",
            data: [ [ 5046, 4588, 7926 ], [ 2111, 1483, 1568 ], [ 674, 781, 1232 ], [ 360, 314, 427 ] ]
        },
        msa173: {
            name: "Lakeland-Winter Haven, FL",
            data: [ [ 10232, 9242, 16998 ], [ 6954, 4625, 4911 ], [ 1357, 1488, 2114 ], [ 840, 1156, 1423 ] ]
        },
        msa174: {
            name: "Lancaster, PA",
            data: [ [ 22995, 19407, 25773 ], [ 7693, 5086, 5419 ], [ 872, 1094, 1565 ], [ 457, 891, 1108 ] ]
        },
        msa175: {
            name: "Lansing-East Lansing, MI",
            data: [ [ 19e3, 16137, 24585 ], [ 4829, 3651, 4529 ], [ 478, 706, 1037 ], [ 669, 932, 1052 ] ]
        },
        msa176: {
            name: "Laredo, TX",
            data: [ [ 2384, 2467, 2866 ], [ 2518, 2056, 2597 ], [ 302, 398, 528 ], [ 4, 3, 0 ] ]
        },
        msa177: {
            name: "Las Cruces, NM",
            data: [ [ 6084, 5562, 6729 ], [ 2899, 2167, 2411 ], [ 1021, 1200, 1619 ], [ 10, 7, 13 ] ]
        },
        msa178: {
            name: "Las Vegas-Henderson-Paradise, NV",
            data: [ [ 35533, 32240, 71034 ], [ 41614, 29118, 34165 ], [ 9144, 9541, 13569 ], [ 94, 113, 118 ] ]
        },
        msa179: {
            name: "Lawrence, KS",
            data: [ [ 5678, 4821, 6459 ], [ 1477, 901, 1077 ], [ 214, 225, 335 ], [ 52, 67, 75 ] ]
        },
        msa180: {
            name: "Lawton, OK",
            data: [ [ 2223, 1836, 2130 ], [ 1534, 1124, 1072 ], [ 2697, 2718, 3115 ], [ 43, 59, 78 ] ]
        },
        msa181: {
            name: "Lebanon, PA",
            data: [ [ 5759, 5284, 6574 ], [ 1787, 1224, 1315 ], [ 474, 494, 711 ], [ 73, 204, 272 ] ]
        },
        msa182: {
            name: "Lewiston-Auburn, ME",
            data: [ [ 4017, 3526, 4620 ], [ 1326, 1144, 1259 ], [ 256, 327, 517 ], [ 283, 247, 281 ] ]
        },
        msa183: {
            name: "Lewiston, ID-WA",
            data: [ [ 3292, 2813, 3793 ], [ 1153, 734, 860 ], [ 254, 256, 398 ], [ 1, , 6 ] ]
        },
        msa184: {
            name: "Lexington-Fayette, KY",
            data: [ [ 25203, 23077, 31603 ], [ 7845, 5798, 6603 ], [ 1087, 1387, 2101 ], [ 422, 680, 889 ] ]
        },
        msa185: {
            name: "Lima, OH",
            data: [ [ 4858, 4164, 5723 ], [ 771, 598, 629 ], [ 142, 126, 220 ], [ 95, 153, 115 ] ]
        },
        msa186: {
            name: "Lincoln, NE",
            data: [ [ 19729, 16552, 22492 ], [ 5394, 3771, 4347 ], [ 855, 1208, 1801 ], [ 52, 119, 107 ] ]
        },
        msa187: {
            name: "Little Rock-North Little Rock-Conway, AR",
            data: [ [ 28409, 23699, 33158 ], [ 13379, 9615, 10028 ], [ 3923, 4441, 6292 ], [ 1839, 1852, 2145 ] ]
        },
        msa188: {
            name: "Logan, UT-ID",
            data: [ [ 6395, 5183, 7021 ], [ 2279, 1283, 1720 ], [ 170, 176, 377 ], [ 434, 620, 703 ] ]
        },
        msa189: {
            name: "Longview, TX",
            data: [ [ 5839, 6130, 6304 ], [ 1582, 1484, 1542 ], [ 262, 323, 410 ], [ 333, 324, 335 ] ]
        },
        msa190: {
            name: "Longview, WA",
            data: [ [ 4796, 3963, 5448 ], [ 1581, 954, 1399 ], [ 382, 434, 670 ], [ 124, 177, 224 ] ]
        },
        msa191: {
            name: "Louisville/Jefferson County, KY-IN",
            data: [ [ 69584, 61825, 82150 ], [ 25027, 17815, 19967 ], [ 3741, 4479, 6609 ], [ 744, 1508, 2089 ] ]
        },
        msa192: {
            name: "Lubbock, TX",
            data: [ [ 7225, 6861, 8819 ], [ 4331, 3198, 3673 ], [ 480, 523, 744 ], [ 47, 79, 66 ] ]
        },
        msa193: {
            name: "Lynchburg, VA",
            data: [ [ 9995, 8733, 10030 ], [ 3254, 2347, 2494 ], [ 586, 750, 1138 ], [ 510, 695, 708 ] ]
        },
        msa194: {
            name: "Macon, GA",
            data: [ [ 5224, 5604, 6805 ], [ 2480, 1894, 1967 ], [ 561, 610, 801 ], [ 94, 101, 106 ] ]
        },
        msa195: {
            name: "Madera, CA",
            data: [ [ 2744, 2660, 4798 ], [ 2080, 1778, 1840 ], [ 245, 293, 449 ], [ 187, 196, 208 ] ]
        },
        msa196: {
            name: "Madison, WI",
            data: [ [ 58220, 50577, 67536 ], [ 5254, 3581, 3803 ], [ 954, 1094, 1645 ], [ 483, 565, 849 ] ]
        },
        msa197: {
            name: "Manchester-Nashua, NH",
            data: [ [ 23888, 20963, 28553 ], [ 6546, 4660, 5696 ], [ 924, 1131, 1806 ], [ 239, 308, 370 ] ]
        },
        msa198: {
            name: "Manhattan, KS",
            data: [ [ 4221, 4014, 5068 ], [ 964, 611, 638 ], [ 1419, 1640, 2290 ], [ 166, 140, 185 ] ]
        },
        msa199: {
            name: "Mankato-North Mankato, MN",
            data: [ [ 5393, 4707, 6054 ], [ 1168, 861, 1190 ], [ 163, 209, 311 ], [ 54, 102, 157 ] ]
        },
        msa200: {
            name: "Mansfield, OH",
            data: [ [ 3609, 3413, 4995 ], [ 1068, 816, 916 ], [ 181, 244, 395 ], [ 102, 139, 144 ] ]
        },
        msa201: {
            name: "Mayag?ez, PR",
            data: [ [ 607, 699, 918 ], [ 592, 618, 539 ], [ 59, 55, 71 ], [ 19, 22, 25 ] ]
        },
        msa202: {
            name: "McAllen-Edinburg-Mission, TX",
            data: [ [ 8876, 9825, 9433 ], [ 4961, 3763, 4314 ], [ 465, 561, 797 ], [ 56, 19, 26 ] ]
        },
        msa203: {
            name: "Medford, OR",
            data: [ [ 8251, 6883, 11609 ], [ 2189, 1519, 2028 ], [ 556, 872, 1294 ], [ 267, 411, 434 ] ]
        },
        msa204: {
            name: "Memphis, TN-MS-AR",
            data: [ [ 36693, 30716, 43546 ], [ 20751, 15213, 17589 ], [ 3506, 4723, 6329 ], [ 1060, 1400, 1689 ] ]
        },
        msa205: {
            name: "Merced, CA",
            data: [ [ 3248, 3108, 6615 ], [ 4220, 3259, 3777 ], [ 361, 397, 568 ], [ 265, 267, 323 ] ]
        },
        msa206: {
            name: "Michigan City-La Porte, IN",
            data: [ [ 4325, 3993, 5150 ], [ 1664, 1387, 1542 ], [ 217, 232, 355 ], [ 45, 52, 38 ] ]
        },
        msa207: {
            name: "Midland, TX",
            data: [ [ 4401, 5148, 6430 ], [ 1985, 2362, 2710 ], [ 270, 299, 460 ], [ 5, 8, 8 ] ]
        },
        msa208: {
            name: "Milwaukee-Waukesha-West Allis, WI",
            data: [ [ 108556, 86990, 120302 ], [ 17497, 11331, 14441 ], [ 2095, 2544, 3786 ], [ 175, 245, 304 ] ]
        },
        msa209: {
            name: "Minneapolis-St. Paul-Bloomington, MN-WI",
            data: [ [ 220304, 183102, 277099 ], [ 56986, 42637, 53906 ], [ 5769, 6718, 11216 ], [ 1346, 2127, 2687 ] ]
        },
        msa210: {
            name: "Missoula, MT",
            data: [ [ 6211, 5039, 7222 ], [ 1331, 768, 707 ], [ 254, 337, 496 ], [ 94, 141, 227 ] ]
        },
        msa211: {
            name: "Mobile, AL",
            data: [ [ 11053, 9562, 11252 ], [ 7088, 5041, 5295 ], [ 1131, 1323, 1924 ], [ 607, 770, 782 ] ]
        },
        msa212: {
            name: "Modesto, CA",
            data: [ [ 11523, 9847, 20306 ], [ 10264, 7770, 9027 ], [ 730, 960, 1443 ], [ 184, 308, 381 ] ]
        },
        msa213: {
            name: "Monroe, LA",
            data: [ [ 5522, 5467, 6450 ], [ 2077, 1574, 1529 ], [ 222, 351, 443 ], [ 758, 654, 617 ] ]
        },
        msa214: {
            name: "Monroe, MI",
            data: [ [ 5886, 5665, 9998 ], [ 1628, 1391, 1700 ], [ 152, 264, 382 ], [ 61, 137, 139 ] ]
        },
        msa215: {
            name: "Montgomery, AL",
            data: [ [ 10917, 9797, 12986 ], [ 5995, 4228, 5171 ], [ 2361, 2607, 3999 ], [ 143, 273, 438 ] ]
        },
        msa216: {
            name: "Morgantown, WV",
            data: [ [ 5582, 5234, 6067 ], [ 1317, 916, 788 ], [ 169, 219, 325 ], [ 142, 182, 197 ] ]
        },
        msa217: {
            name: "Morristown, TN",
            data: [ [ 4823, 4561, 5553 ], [ 1789, 1265, 1197 ], [ 188, 337, 467 ], [ 162, 283, 366 ] ]
        },
        msa218: {
            name: "Mount Vernon-Anacortes, WA",
            data: [ [ 6553, 5438, 7199 ], [ 1662, 945, 1292 ], [ 654, 728, 1102 ], [ 107, 182, 210 ] ]
        },
        msa219: {
            name: "Muncie, IN",
            data: [ [ 3209, 2974, 3750 ], [ 1436, 1122, 1217 ], [ 169, 147, 277 ], [ 68, 80, 117 ] ]
        },
        msa220: {
            name: "Muskegon, MI",
            data: [ [ 5546, 5350, 7524 ], [ 1899, 1693, 1962 ], [ 202, 330, 468 ], [ 182, 323, 335 ] ]
        },
        msa221: {
            name: "Myrtle Beach-Conway-North Myrtle Beach, SC-NC",
            data: [ [ 11630, 10873, 14700 ], [ 3305, 2387, 2712 ], [ 739, 967, 1435 ], [ 252, 287, 400 ] ]
        },
        msa222: {
            name: "Napa, CA",
            data: [ [ 6878, 5985, 8883 ], [ 1603, 1278, 1671 ], [ 97, 159, 295 ], [ 1, 0, 0 ] ]
        },
        msa223: {
            name: "Naples-Immokalee-Marco Island, FL",
            data: [ [ 9818, 9080, 14509 ], [ 2581, 2026, 2034 ], [ 246, 358, 554 ], [ 506, 586, 471 ] ]
        },
        msa224: {
            name: "Nashville-Davidson--Murfreesboro--Franklin, TN",
            data: [ [ 74001, 70062, 95154 ], [ 35788, 27747, 35459 ], [ 4509, 6021, 9251 ], [ 1736, 2056, 2937 ] ]
        },
        msa225: {
            name: "New Haven-Milford, CT",
            data: [ [ 38088, 33804, 43197 ], [ 11398, 8063, 9405 ], [ 653, 826, 1155 ], [ 30, 26, 71 ] ]
        },
        msa226: {
            name: "New Orleans-Metairie, LA",
            data: [ [ 40489, 40623, 47120 ], [ 15700, 13249, 13962 ], [ 1965, 2592, 3955 ], [ 1110, 1607, 1882 ] ]
        },
        msa227: {
            name: "Niles-Benton Harbor, MI",
            data: [ [ 7197, 6844, 8656 ], [ 1357, 1069, 1067 ], [ 182, 278, 301 ], [ 87, 154, 177 ] ]
        },
        msa228: {
            name: "North Port-Sarasota-Bradenton, FL",
            data: [ [ 20932, 19968, 34596 ], [ 6666, 5233, 5888 ], [ 1162, 1674, 2503 ], [ 318, 393, 528 ] ]
        },
        msa229: {
            name: "Norwich-New London, CT",
            data: [ [ 13640, 11331, 15387 ], [ 2946, 2197, 2459 ], [ 913, 896, 1474 ], [ 136, 193, 279 ] ]
        },
        msa230: {
            name: "Ocala, FL",
            data: [ [ 7180, 6504, 11182 ], [ 2817, 2e3, 2116 ], [ 719, 866, 1332 ], [ 651, 1034, 994 ] ]
        },
        msa231: {
            name: "Ocean City, NJ",
            data: [ [ 5345, 4650, 5449 ], [ 1030, 616, 693 ], [ 160, 182, 282 ], [ 83, 161, 192 ] ]
        },
        msa232: {
            name: "Odessa, TX",
            data: [ [ 2667, 2760, 3594 ], [ 1646, 1516, 2024 ], [ 173, 160, 268 ], [ 3, 1, 2 ] ]
        },
        msa233: {
            name: "Ogden-Clearfield, UT",
            data: [ [ 32237, 25171, 39992 ], [ 16930, 9407, 15087 ], [ 3298, 3403, 6212 ], [ 39, 57, 56 ] ]
        },
        msa234: {
            name: "Oklahoma City, OK",
            data: [ [ 46068, 43721, 56372 ], [ 24400, 19432, 20543 ], [ 6671, 7967, 10631 ], [ 507, 603, 746 ] ]
        },
        msa235: {
            name: "Olympia-Tumwater, WA",
            data: [ [ 14790, 11772, 16212 ], [ 3798, 2396, 3189 ], [ 4121, 4180, 6078 ], [ 246, 317, 334 ] ]
        },
        msa236: {
            name: "Omaha-Council Bluffs, NE-IA",
            data: [ [ 53684, 43194, 60712 ], [ 19807, 12999, 14926 ], [ 5370, 6285, 8943 ], [ 197, 375, 433 ] ]
        },
        msa237: {
            name: "Orlando-Kissimmee-Sanford, FL",
            data: [ [ 46530, 45866, 93280 ], [ 30188, 22395, 25065 ], [ 4749, 5801, 8610 ], [ 1594, 1980, 2058 ] ]
        },
        msa238: {
            name: "Oshkosh-Neenah, WI",
            data: [ [ 12364, 10954, 14145 ], [ 2160, 1339, 1731 ], [ 380, 415, 607 ], [ 43, 49, 72 ] ]
        },
        msa239: {
            name: "Owensboro, KY",
            data: [ [ 5429, 5410, 6413 ], [ 1384, 1163, 1327 ], [ 190, 271, 399 ], [ 92, 120, 244 ] ]
        },
        msa240: {
            name: "Oxnard-Thousand Oaks-Ventura, CA",
            data: [ [ 49734, 44266, 65022 ], [ 9280, 7014, 9064 ], [ 1403, 1925, 3383 ], [ 34, 14, 42 ] ]
        },
        msa241: {
            name: "Palm Bay-Melbourne-Titusville, FL",
            data: [ [ 14375, 13838, 27322 ], [ 6067, 4771, 5477 ], [ 2347, 3037, 4783 ], [ 66, 55, 73 ] ]
        },
        msa242: {
            name: "Panama City, FL",
            data: [ [ 4767, 4252, 6432 ], [ 1562, 1247, 1219 ], [ 1286, 1438, 2161 ], [ 315, 402, 408 ] ]
        },
        msa243: {
            name: "Parkersburg-Vienna, WV",
            data: [ [ 5474, 5381, 6670 ], [ 1503, 1193, 1086 ], [ 228, 342, 452 ], [ 126, 161, 150 ] ]
        },
        msa244: {
            name: "Pensacola-Ferry Pass-Brent, FL",
            data: [ [ 11468, 10794, 15604 ], [ 4303, 3161, 3469 ], [ 4795, 5349, 8161 ], [ 619, 732, 791 ] ]
        },
        msa245: {
            name: "Peoria, IL",
            data: [ [ 21637, 18378, 24466 ], [ 4575, 3725, 3630 ], [ 723, 852, 1265 ], [ 389, 608, 658 ] ]
        },
        msa246: {
            name: "Phoenix-Mesa-Scottsdale, AZ",
            data: [ [ 139158, 125702, 258846 ], [ 83178, 60940, 69303 ], [ 13980, 16094, 25333 ], [ 3120, 2477, 3451 ] ]
        },
        msa247: {
            name: "Pine Bluff, AR",
            data: [ [ 2186, 1767, 2233 ], [ 1057, 772, 723 ], [ 219, 171, 274 ], [ 92, 79, 76 ] ]
        },
        msa248: {
            name: "Pittsburgh, PA",
            data: [ [ 98267, 94759, 119512 ], [ 30648, 24166, 25976 ], [ 2827, 3723, 5199 ], [ 919, 1272, 1176 ] ]
        },
        msa249: {
            name: "Pittsfield, MA",
            data: [ [ 7485, 5469, 8022 ], [ 531, 487, 490 ], [ 106, 180, 178 ], [ 11, 92, 149 ] ]
        },
        msa250: {
            name: "Pocatello, ID",
            data: [ [ 3935, 3717, 4808 ], [ 2119, 1224, 1228 ], [ 192, 274, 332 ], [ 46, 61, 53 ] ]
        },
        msa251: {
            name: "Ponce, PR",
            data: [ [ 1572, 1593, 1999 ], [ 1963, 1923, 1895 ], [ 187, 204, 198 ], [ 427, 624, 396 ] ]
        },
        msa252: {
            name: "Port St. Lucie, FL",
            data: [ [ 9252, 9148, 17820 ], [ 5416, 3968, 4779 ], [ 847, 1055, 1554 ], [ 119, 115, 124 ] ]
        },
        msa253: {
            name: "Portland-South Portland, ME",
            data: [ [ 36689, 29669, 39455 ], [ 6593, 4565, 5257 ], [ 1279, 1358, 2257 ], [ 1220, 1338, 1552 ] ]
        },
        msa254: {
            name: "Portland-Vancouver-Hillsboro, OR-WA",
            data: [ [ 148452, 118363, 170285 ], [ 34774, 22724, 29965 ], [ 6162, 7597, 12331 ], [ 1614, 1822, 2506 ] ]
        },
        msa255: {
            name: "Prescott, AZ",
            data: [ [ 8977, 8141, 13390 ], [ 2237, 1712, 1745 ], [ 707, 1010, 1442 ], [ 422, 399, 550 ] ]
        },
        msa256: {
            name: "Providence-Warwick, RI-MA",
            data: [ [ 77358, 66901, 93482 ], [ 21933, 15488, 17171 ], [ 1704, 2123, 3637 ], [ 282, 503, 610 ] ]
        },
        msa257: {
            name: "Provo-Orem, UT",
            data: [ [ 25084, 20356, 32375 ], [ 13495, 7541, 11740 ], [ 970, 1264, 2145 ], [ 1003, 1495, 1964 ] ]
        },
        msa258: {
            name: "Pueblo, CO",
            data: [ [ 5527, 5087, 6349 ], [ 3697, 2468, 2350 ], [ 799, 1256, 1589 ], [ 4, 7, 2 ] ]
        },
        msa259: {
            name: "Punta Gorda, FL",
            data: [ [ 4320, 4065, 7441 ], [ 1344, 978, 1072 ], [ 320, 452, 682 ], [ 25, 39, 16 ] ]
        },
        msa260: {
            name: "Racine, WI",
            data: [ [ 12916, 10577, 14317 ], [ 2270, 1743, 2055 ], [ 355, 430, 616 ], [ 97, 134, 122 ] ]
        },
        msa261: {
            name: "Raleigh, NC",
            data: [ [ 77106, 68715, 91072 ], [ 17412, 12045, 13743 ], [ 4421, 5464, 8018 ], [ 1902, 2307, 2832 ] ]
        },
        msa262: {
            name: "Rapid City, SD",
            data: [ [ 5799, 5315, 7119 ], [ 1425, 1001, 1183 ], [ 1160, 1414, 2303 ], [ 138, 383, 508 ] ]
        },
        msa263: {
            name: "Reading, PA",
            data: [ [ 15980, 14866, 18382 ], [ 6317, 4651, 4915 ], [ 544, 718, 1021 ], [ 157, 372, 529 ] ]
        },
        msa264: {
            name: "Redding, CA",
            data: [ [ 6468, 5419, 8975 ], [ 2103, 1422, 1718 ], [ 436, 597, 976 ], [ 244, 258, 393 ] ]
        },
        msa265: {
            name: "Reno, NV",
            data: [ [ 13471, 11975, 22329 ], [ 7573, 5809, 6319 ], [ 1303, 1383, 2364 ], [ 105, 140, 226 ] ]
        },
        msa266: {
            name: "Richmond, VA",
            data: [ [ 59100, 51842, 69607 ], [ 22828, 17250, 20678 ], [ 5240, 6046, 9294 ], [ 519, 966, 1035 ] ]
        },
        msa267: {
            name: "Riverside-San Bernardino-Ontario, CA",
            data: [ [ 113685, 105404, 181267 ], [ 82760, 64364, 80708 ], [ 13312, 16118, 24257 ], [ 1273, 1473, 1911 ] ]
        },
        msa268: {
            name: "Roanoke, VA",
            data: [ [ 12809, 11180, 14003 ], [ 4726, 3306, 3660 ], [ 780, 1144, 1495 ], [ 413, 536, 591 ] ]
        },
        msa269: {
            name: "Rochester, MN",
            data: [ [ 13610, 11475, 15704 ], [ 2726, 1999, 2366 ], [ 335, 430, 703 ], [ 208, 341, 392 ] ]
        },
        msa270: {
            name: "Rochester, NY",
            data: [ [ 28393, 28060, 34673 ], [ 12382, 10722, 10262 ], [ 1227, 1474, 1821 ], [ 497, 882, 974 ] ]
        },
        msa271: {
            name: "Rockford, IL",
            data: [ [ 19407, 15409, 20475 ], [ 5006, 3447, 4256 ], [ 596, 605, 877 ], [ 25, 44, 41 ] ]
        },
        msa272: {
            name: "Rocky Mount, NC",
            data: [ [ 3693, 3589, 4322 ], [ 1305, 946, 930 ], [ 331, 357, 530 ], [ 175, 205, 256 ] ]
        },
        msa273: {
            name: "Rome, GA",
            data: [ [ 1879, 2118, 2902 ], [ 991, 761, 976 ], [ 119, 107, 179 ], [ 10, 24, 47 ] ]
        },
        msa274: {
            name: "Sacramento--Roseville--Arden-Arcade, CA",
            data: [ [ 104240, 86231, 151901 ], [ 36473, 28847, 37916 ], [ 4690, 6213, 10010 ], [ 486, 880, 1094 ] ]
        },
        msa275: {
            name: "Saginaw, MI",
            data: [ [ 6287, 6029, 9142 ], [ 1722, 1468, 1652 ], [ 121, 268, 342 ], [ 229, 278, 352 ] ]
        },
        msa276: {
            name: "Salem, OR",
            data: [ [ 18147, 13738, 17891 ], [ 5672, 3816, 5084 ], [ 1208, 1587, 2366 ], [ 427, 409, 690 ] ]
        },
        msa277: {
            name: "Salinas, CA",
            data: [ [ 12592, 11590, 16483 ], [ 3900, 3037, 3419 ], [ 370, 627, 876 ], [ 643, 635, 781 ] ]
        },
        msa278: {
            name: "Salisbury, MD-DE",
            data: [ [ 3724, 3451, 4021 ], [ 1616, 1115, 1254 ], [ 245, 323, 440 ], [ 221, 303, 359 ] ]
        },
        msa279: {
            name: "Salt Lake City, UT",
            data: [ [ 61545, 49269, 77254 ], [ 31312, 17964, 28276 ], [ 2336, 2691, 4968 ], [ 470, 722, 785 ] ]
        },
        msa280: {
            name: "San Angelo, TX",
            data: [ [ 2585, 2615, 3034 ], [ 994, 975, 1163 ], [ 658, 665, 787 ], [ 13, 7, 6 ] ]
        },
        msa281: {
            name: "San Antonio-New Braunfels, TX",
            data: [ [ 59459, 61334, 72798 ], [ 26449, 20372, 24898 ], [ 16458, 18161, 27022 ], [ 961, 1476, 2344 ] ]
        },
        msa282: {
            name: "San Diego-Carlsbad, CA",
            data: [ [ 167401, 150318, 222643 ], [ 33370, 23921, 30938 ], [ 13393, 18777, 31871 ], [ 61, 160, 202 ] ]
        },
        msa283: {
            name: "San Germ?n, PR",
            data: [ [ 929, 1247, 1371 ], [ 742, 712, 655 ], [ 115, 150, 140 ], [ 406, 525, 476 ] ]
        },
        msa284: {
            name: "San Jose-Sunnyvale-Santa Clara, CA",
            data: [ [ 174529, 154345, 215098 ], [ 12131, 8963, 10109 ], [ 678, 1079, 1728 ], [ 104, 191, 232 ] ]
        },
        msa285: {
            name: "San Juan-Carolina-Caguas, PR",
            data: [ [ 22811, 22881, 30122 ], [ 25207, 23658, 26084 ], [ 2116, 2475, 2594 ], [ 3519, 4070, 3711 ] ]
        },
        msa286: {
            name: "San Luis Obispo-Paso Robles-Arroyo Grande, CA",
            data: [ [ 16133, 13713, 20227 ], [ 2274, 1550, 1931 ], [ 315, 636, 1027 ], [ 256, 583, 642 ] ]
        },
        msa287: {
            name: "Santa Cruz-Watsonville, CA",
            data: [ [ 15084, 13749, 20133 ], [ 1731, 1363, 1616 ], [ 94, 174, 265 ], [ 64, 84, 143 ] ]
        },
        msa288: {
            name: "Santa Fe, NM",
            data: [ [ 7966, 7058, 9632 ], [ 1456, 1062, 1074 ], [ 248, 379, 569 ], [ 8, 19, 24 ] ]
        },
        msa289: {
            name: "Santa Rosa, CA",
            data: [ [ 28260, 24078, 36005 ], [ 4990, 3860, 4900 ], [ 316, 549, 901 ], [ 27, 74, 96 ] ]
        },
        msa290: {
            name: "Savannah, GA",
            data: [ [ 10416, 10256, 12631 ], [ 4949, 3498, 3708 ], [ 3338, 4227, 5398 ], [ 707, 682, 682 ] ]
        },
        msa291: {
            name: "Scranton--Wilkes-Barre--Hazleton, PA",
            data: [ [ 18494, 17565, 21731 ], [ 6026, 4776, 4535 ], [ 769, 897, 1241 ], [ 77, 178, 133 ] ]
        },
        msa292: {
            name: "Sebastian-Vero Beach, FL",
            data: [ [ 3830, 3641, 6296 ], [ 1173, 887, 1056 ], [ 191, 312, 518 ], [ 57, 36, 22 ] ]
        },
        msa293: {
            name: "Sheboygan, WI",
            data: [ [ 8552, 7044, 9361 ], [ 1211, 702, 879 ], [ 164, 208, 264 ], [ 61, 83, 133 ] ]
        },
        msa294: {
            name: "Sherman-Denison, TX",
            data: [ [ 2945, 3249, 3670 ], [ 1259, 961, 1058 ], [ 152, 262, 397 ], [ 91, 132, 123 ] ]
        },
        msa295: {
            name: "Shreveport-Bossier City, LA",
            data: [ [ 12395, 11559, 15156 ], [ 6095, 4622, 4714 ], [ 2336, 2405, 3588 ], [ 650, 756, 915 ] ]
        },
        msa296: {
            name: "Sioux City, IA-NE-SD",
            data: [ [ 6025, 5886, 7662 ], [ 2182, 1432, 1645 ], [ 240, 333, 412 ], [ 65, 51, 84 ] ]
        },
        msa297: {
            name: "Sioux Falls, SD",
            data: [ [ 15999, 13371, 19811 ], [ 5185, 3681, 4343 ], [ 938, 898, 1468 ], [ 346, 504, 575 ] ]
        },
        msa298: {
            name: "South Bend-Mishawaka, IN-MI",
            data: [ [ 12631, 11511, 15491 ], [ 4321, 3314, 3395 ], [ 361, 517, 690 ], [ 69, 138, 153 ] ]
        },
        msa299: {
            name: "Spartanburg, SC",
            data: [ [ 9504, 10014, 12302 ], [ 3736, 2536, 3244 ], [ 502, 734, 1001 ], [ 862, 988, 1326 ] ]
        },
        msa300: {
            name: "Spokane-Spokane Valley, WA",
            data: [ [ 25012, 20276, 27692 ], [ 8413, 5613, 6761 ], [ 2646, 2858, 4054 ], [ 98, 158, 198 ] ]
        },
        msa301: {
            name: "Springfield, IL",
            data: [ [ 20158, 14947, 21050 ], [ 2337, 2001, 2077 ], [ 612, 769, 1084 ], [ 247, 319, 417 ] ]
        },
        msa302: {
            name: "Springfield, MA",
            data: [ [ 30012, 25672, 33297 ], [ 6966, 4944, 5202 ], [ 979, 1264, 1850 ], [ 165, 283, 388 ] ]
        },
        msa303: {
            name: "Springfield, MO",
            data: [ [ 21869, 18059, 23824 ], [ 7694, 5072, 5907 ], [ 1362, 1462, 2218 ], [ 878, 981, 1206 ] ]
        },
        msa304: {
            name: "Springfield, OH",
            data: [ [ 4614, 4047, 5459 ], [ 1685, 1159, 1445 ], [ 335, 423, 647 ], [ 127, 235, 242 ] ]
        },
        msa305: {
            name: "St. Cloud, MN",
            data: [ [ 10259, 8033, 11531 ], [ 2217, 1653, 1884 ], [ 450, 480, 737 ], [ 265, 416, 499 ] ]
        },
        msa306: {
            name: "St. George, UT",
            data: [ [ 5866, 5179, 8211 ], [ 2696, 2062, 2438 ], [ 285, 399, 820 ], [ 215, 273, 235 ] ]
        },
        msa307: {
            name: "St. Joseph, MO-KS",
            data: [ [ 4288, 3825, 4988 ], [ 1647, 1207, 1267 ], [ 243, 298, 407 ], [ 93, 150, 165 ] ]
        },
        msa308: {
            name: "St. Louis, MO-IL",
            data: [ [ 186010, 148969, 198936 ], [ 51500, 36533, 44919 ], [ 8802, 9698, 14524 ], [ 1710, 2598, 2999 ] ]
        },
        msa309: {
            name: "State College, PA",
            data: [ [ 7170, 6164, 8164 ], [ 901, 773, 677 ], [ 238, 277, 371 ], [ 194, 273, 282 ] ]
        },
        msa310: {
            name: "Stockton-Lodi, CA",
            data: [ [ 16252, 14938, 28134 ], [ 13712, 10519, 12791 ], [ 1188, 1601, 2255 ], [ 166, 201, 259 ] ]
        },
        msa311: {
            name: "Sumter, SC",
            data: [ [ 2119, 2057, 2412 ], [ 1190, 789, 624 ], [ 1095, 1284, 1505 ], [ 50, 36, 42 ] ]
        },
        msa312: {
            name: "Syracuse, NY",
            data: [ [ 18264, 18236, 22471 ], [ 7610, 6331, 6077 ], [ 846, 1065, 1480 ], [ 157, 270, 396 ] ]
        },
        msa313: {
            name: "Tallahassee, FL",
            data: [ [ 10491, 9312, 13610 ], [ 4170, 2794, 3153 ], [ 709, 898, 1150 ], [ 363, 411, 446 ] ]
        },
        msa314: {
            name: "Tampa-St. Petersburg-Clearwater, FL",
            data: [ [ 69549, 65409, 112943 ], [ 31002, 24734, 28045 ], [ 8708, 10773, 16405 ], [ 1355, 1920, 2319 ] ]
        },
        msa315: {
            name: "Terre Haute, IN",
            data: [ [ 6684, 6053, 7551 ], [ 1759, 1479, 1380 ], [ 348, 338, 503 ], [ 237, 280, 173 ] ]
        },
        msa316: {
            name: "Texarkana, TX-AR",
            data: [ [ 3281, 3606, 4118 ], [ 1126, 913, 856 ], [ 282, 301, 404 ], [ 144, 109, 140 ] ]
        },
        msa317: {
            name: "Toledo, OH",
            data: [ [ 24888, 23241, 31825 ], [ 6551, 4821, 5846 ], [ 769, 903, 1452 ], [ 195, 222, 270 ] ]
        },
        msa318: {
            name: "Topeka, KS",
            data: [ [ 10233, 9824, 11307 ], [ 3731, 2622, 2428 ], [ 785, 840, 1121 ], [ 114, 176, 176 ] ]
        },
        msa319: {
            name: "Trenton, NJ",
            data: [ [ 18377, 17449, 21704 ], [ 4390, 3044, 3593 ], [ 243, 363, 447 ], [ 3, 21, 28 ] ]
        },
        msa320: {
            name: "Tucson, AZ",
            data: [ [ 38238, 31584, 49436 ], [ 13660, 10726, 13469 ], [ 5052, 5688, 8550 ], [ 499, 694, 1058 ] ]
        },
        msa321: {
            name: "Tulsa, OK",
            data: [ [ 33995, 30657, 40395 ], [ 17855, 12925, 14194 ], [ 2451, 3133, 4161 ], [ 1613, 1603, 1902 ] ]
        },
        msa322: {
            name: "Tuscaloosa, AL",
            data: [ [ 7164, 6607, 9198 ], [ 3718, 2589, 2567 ], [ 573, 598, 843 ], [ 225, 257, 609 ] ]
        },
        msa323: {
            name: "Tyler, TX",
            data: [ [ 7409, 6830, 8185 ], [ 1768, 1605, 1772 ], [ 376, 401, 593 ], [ 267, 348, 352 ] ]
        },
        msa324: {
            name: "Utica-Rome, NY",
            data: [ [ 7203, 6883, 8543 ], [ 2743, 2615, 2401 ], [ 302, 374, 592 ], [ 83, 146, 175 ] ]
        },
        msa325: {
            name: "Valdosta, GA",
            data: [ [ 3544, 3579, 4012 ], [ 1405, 964, 900 ], [ 1096, 1278, 1577 ], [ 78, 97, 160 ] ]
        },
        msa326: {
            name: "Vallejo-Fairfield, CA",
            data: [ [ 13969, 12241, 22367 ], [ 7744, 5881, 7404 ], [ 2387, 2585, 4150 ], [ 64, 104, 149 ] ]
        },
        msa327: {
            name: "Victoria, TX",
            data: [ [ 2783, 2902, 3378 ], [ 927, 700, 846 ], [ 184, 175, 248 ], [ 27, 14, 22 ] ]
        },
        msa328: {
            name: "Vineland-Bridgeton, NJ",
            data: [ [ 3629, 3072, 3499 ], [ 2314, 1653, 1840 ], [ 191, 233, 290 ], [ 22, 79, 84 ] ]
        },
        msa329: {
            name: "Virginia Beach-Norfolk-Newport News, VA-NC",
            data: [ [ 63215, 55554, 68786 ], [ 26011, 19456, 22968 ], [ 25975, 32168, 48003 ], [ 160, 246, 352 ] ]
        },
        msa330: {
            name: "Visalia-Porterville, CA",
            data: [ [ 6667, 6381, 12245 ], [ 5228, 4181, 5108 ], [ 648, 821, 1071 ], [ 287, 291, 292 ] ]
        },
        msa331: {
            name: "Waco, TX",
            data: [ [ 5719, 5633, 6751 ], [ 2230, 1981, 1872 ], [ 598, 764, 894 ], [ 143, 188, 220 ] ]
        },
        msa332: {
            name: "Warner Robins, GA",
            data: [ [ 4e3, 4006, 4885 ], [ 2210, 1469, 1586 ], [ 2513, 2632, 3568 ], [ 121, 122, 199 ] ]
        },
        msa333: {
            name: "Waterloo-Cedar Falls, IA",
            data: [ [ 10481, 9318, 11544 ], [ 2777, 1545, 1153 ], [ 231, 296, 383 ], [ 65, 75, 139 ] ]
        },
        msa334: {
            name: "Wausau, WI",
            data: [ [ 10586, 8168, 11885 ], [ 1006, 680, 733 ], [ 190, 230, 251 ], [ 103, 145, 172 ] ]
        },
        msa335: {
            name: "Wenatchee, WA",
            data: [ [ 5747, 4818, 6313 ], [ 1483, 1022, 1198 ], [ 240, 276, 433 ], [ 71, 153, 224 ] ]
        },
        msa336: {
            name: "Wheeling, WV-OH",
            data: [ [ 4327, 3966, 4862 ], [ 1096, 857, 943 ], [ 115, 158, 187 ], [ 286, 219, 251 ] ]
        },
        msa337: {
            name: "Wichita Falls, TX",
            data: [ [ 3729, 3330, 3843 ], [ 1397, 1062, 1159 ], [ 1008, 788, 1194 ], [ 40, 44, 21 ] ]
        },
        msa338: {
            name: "Wichita, KS",
            data: [ [ 27055, 22211, 27624 ], [ 11198, 7763, 7943 ], [ 2441, 2564, 3330 ], [ 350, 540, 628 ] ]
        },
        msa339: {
            name: "Williamsport, PA",
            data: [ [ 4142, 3961, 5216 ], [ 1075, 1003, 813 ], [ 150, 246, 311 ], [ 22, 49, 69 ] ]
        },
        msa340: {
            name: "Wilmington, NC",
            data: [ [ 19305, 16847, 21968 ], [ 3772, 2715, 2780 ], [ 1363, 1767, 2534 ], [ 578, 720, 882 ] ]
        },
        msa341: {
            name: "Winchester, VA-WV",
            data: [ [ 5679, 4948, 7367 ], [ 1954, 1385, 1635 ], [ 493, 654, 1016 ], [ 224, 302, 338 ] ]
        },
        msa342: {
            name: "Winston-Salem, NC",
            data: [ [ 20135, 19055, 22234 ], [ 6455, 5048, 5058 ], [ 1187, 1488, 1887 ], [ 355, 533, 425 ] ]
        },
        msa343: {
            name: "Worcester, MA-CT",
            data: [ [ 48718, 40582, 58303 ], [ 9608, 6453, 7295 ], [ 984, 1281, 1886 ], [ 295, 456, 779 ] ]
        },
        msa344: {
            name: "Yakima, WA",
            data: [ [ 7455, 7391, 9566 ], [ 3342, 2223, 2461 ], [ 480, 526, 880 ], [ 156, 308, 295 ] ]
        },
        msa345: {
            name: "York-Hanover, PA",
            data: [ [ 20667, 17901, 22776 ], [ 8523, 5557, 6268 ], [ 1299, 1564, 2273 ], [ 498, 945, 1090 ] ]
        },
        msa346: {
            name: "Youngstown-Warren-Boardman, OH-PA",
            data: [ [ 19868, 17303, 21796 ], [ 5147, 3952, 4240 ], [ 554, 747, 1042 ], [ 144, 197, 226 ] ]
        },
        msa347: {
            name: "Yuba City, CA",
            data: [ [ 3873, 3366, 6653 ], [ 2540, 1980, 2388 ], [ 940, 1087, 1498 ], [ 134, 243, 217 ] ]
        },
        msa348: {
            name: "Yuma, AZ",
            data: [ [ 3603, 2865, 4973 ], [ 2525, 1852, 2341 ], [ 1141, 1136, 1792 ], [ 206, 307, 432 ] ]
        }
    };
    var $conventional_checkbox = $("#conventional_checkbox");
    $conventional_checkbox.click(function() {
        var series = originationsByTypeChart.series[0];
        if (series.visible) {
            series.hide();
            $conventional_checkbox.removeAttr("checked");
        } else {
            series.show();
            $conventional_checkbox.attr("checked");
        }
    });
    var $fha_checkbox = $("#fha_checkbox");
    $fha_checkbox.click(function() {
        var series = originationsByTypeChart.series[1];
        if (series.visible) {
            series.hide();
            $fha_checkbox.removeAttr("checked");
        } else {
            series.show();
            $fha_checkbox.attr("checked");
        }
    });
    var $va_checkbox = $("#va_checkbox");
    $va_checkbox.click(function() {
        var series = originationsByTypeChart.series[2];
        if (series.visible) {
            series.hide();
            $va_checkbox.removeAttr("checked");
        } else {
            series.show();
            $va_checkbox.attr("checked");
        }
    });
    var $rhs_checkbox = $("#rhs_checkbox");
    $rhs_checkbox.click(function() {
        var series = originationsByTypeChart.series[3];
        if (series.visible) {
            series.hide();
            $rhs_checkbox.removeAttr("checked");
        } else {
            series.show();
            $rhs_checkbox.attr("checked");
        }
    });
    var $msa = $("#hmda_chart_2_msa");
    $msa.change(function() {
        var msaID = $msa.val();
        var msaName = chart2DataObj[msaID].name.replace("&apos;", "’");
        originationsByTypeChart.setTitle({
            text: msaName
        });
        for (var i = 0; i < 4; i++) {
            originationsByTypeChart.series[i].setData(chart2DataObj[msaID].data[i]);
        }
    });
});
