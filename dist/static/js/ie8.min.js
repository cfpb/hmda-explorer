/*!                                      
            /$$$$$$          /$$        
           /$$__  $$        | $$        
  /$$$$$$$| $$  \__//$$$$$$ | $$$$$$$  
 /$$_____/| $$$$   /$$__  $$| $$__  $$  
| $$      | $$_/  | $$  \ $$| $$  \ $$
| $$      | $$    | $$  | $$| $$  | $$  
|  $$$$$$$| $$    | $$$$$$$/| $$$$$$$/  
 \_______/|__/    | $$____/ |_______/  
                  | $$                  
                  | $$                  
                  |__/                  

* public-data-platform-static - v0.15.2 - 2013-09-24
* http://consumerfinance.gov
* Copyright (c) 2013 Consumer Financial Protection Bureau; Licensed Public, Domain */

 /* ===========================================================
 * bootstrap-tooltip.js v2.3.2
 * http://twitter.github.com/bootstrap/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

/*!
 * jQuery JavaScript Library v1.10.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:48Z
 */

/**
 * @license
 * Lo-Dash 1.3.1 <http://lodash.com/>
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.4.4 <http://underscorejs.org/>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
 * Available under MIT license <http://lodash.com/license>
 */

/**
Copyright (c) Nicolas Gallagher and Jonathan Neal

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


Copyright (c) 2012-2013 Kit Cambridge.
http://kitcambridge.be/

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Chosen
- by Patrick Filler for [Harvest](http://getharvest.com)
- Copyright (c) 2011-2013 by Harvest

Available for use under the [MIT License](http://en.wikipedia.org/wiki/MIT_License)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

 */(function(definition) {
    if (typeof define == "function") {
        define(definition);
    } else if (typeof YUI == "function") {
        YUI.add("es5", definition);
    } else {
        definition();
    }
})(function() {
    function Empty() {}
    if (!Function.prototype.bind) {
        Function.prototype.bind = function bind(that) {
            var target = this;
            if (typeof target != "function") {
                throw new TypeError("Function.prototype.bind called on incompatible " + target);
            }
            var args = _Array_slice_.call(arguments, 1);
            var bound = function() {
                if (this instanceof bound) {
                    var result = target.apply(this, args.concat(_Array_slice_.call(arguments)));
                    if (Object(result) === result) {
                        return result;
                    }
                    return this;
                } else {
                    return target.apply(that, args.concat(_Array_slice_.call(arguments)));
                }
            };
            if (target.prototype) {
                Empty.prototype = target.prototype;
                bound.prototype = new Empty();
                Empty.prototype = null;
            }
            return bound;
        };
    }
    var call = Function.prototype.call;
    var prototypeOfArray = Array.prototype;
    var prototypeOfObject = Object.prototype;
    var _Array_slice_ = prototypeOfArray.slice;
    var _toString = call.bind(prototypeOfObject.toString);
    var owns = call.bind(prototypeOfObject.hasOwnProperty);
    var defineGetter;
    var defineSetter;
    var lookupGetter;
    var lookupSetter;
    var supportsAccessors;
    if (supportsAccessors = owns(prototypeOfObject, "__defineGetter__")) {
        defineGetter = call.bind(prototypeOfObject.__defineGetter__);
        defineSetter = call.bind(prototypeOfObject.__defineSetter__);
        lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);
        lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);
    }
    if ([ 1, 2 ].splice(0).length != 2) {
        var array_splice = Array.prototype.splice;
        if (function() {
            function makeArray(l) {
                var a = [];
                while (l--) {
                    a.unshift(l);
                }
                return a;
            }
            var array = [], lengthBefore;
            array.splice.bind(array, 0, 0).apply(null, makeArray(20));
            array.splice.bind(array, 0, 0).apply(null, makeArray(26));
            lengthBefore = array.length;
            array.splice(5, 0, "XXX");
            if (lengthBefore + 1 == array.length) {
                return true;
            }
        }()) {
            Array.prototype.splice = function(start, deleteCount) {
                if (!arguments.length) {
                    return [];
                } else {
                    return array_splice.apply(this, [ start === void 0 ? 0 : start, deleteCount === void 0 ? this.length - start : deleteCount ].concat(_Array_slice_.call(arguments, 2)));
                }
            };
        } else {
            Array.prototype.splice = function(start, deleteCount) {
                var result, args = _Array_slice_.call(arguments, 2), addElementsCount = args.length;
                if (!arguments.length) {
                    return [];
                }
                if (start === void 0) {
                    start = 0;
                }
                if (deleteCount === void 0) {
                    deleteCount = this.length - start;
                }
                if (addElementsCount > 0) {
                    if (deleteCount <= 0) {
                        if (start == this.length) {
                            this.push.apply(this, args);
                            return [];
                        }
                        if (start == 0) {
                            this.unshift.apply(this, args);
                            return [];
                        }
                    }
                    result = _Array_slice_.call(this, start, start + deleteCount);
                    args.push.apply(args, _Array_slice_.call(this, start + deleteCount, this.length));
                    args.unshift.apply(args, _Array_slice_.call(this, 0, start));
                    args.unshift(0, this.length);
                    array_splice.apply(this, args);
                    return result;
                }
                return array_splice.call(this, start, deleteCount);
            };
        }
    }
    if ([].unshift(0) != 1) {
        var array_unshift = Array.prototype.unshift;
        Array.prototype.unshift = function() {
            array_unshift.apply(this, arguments);
            return this.length;
        };
    }
    if (!Array.isArray) {
        Array.isArray = function isArray(obj) {
            return _toString(obj) == "[object Array]";
        };
    }
    var boxedString = Object("a"), splitString = boxedString[0] != "a" || !(0 in boxedString);
    if (!Array.prototype.forEach) {
        Array.prototype.forEach = function forEach(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, thisp = arguments[1], i = -1, length = self.length >>> 0;
            if (_toString(fun) != "[object Function]") {
                throw new TypeError();
            }
            while (++i < length) {
                if (i in self) {
                    fun.call(thisp, self[i], i, object);
                }
            }
        };
    }
    if (!Array.prototype.map) {
        Array.prototype.map = function map(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0, result = Array(length), thisp = arguments[1];
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            for (var i = 0; i < length; i++) {
                if (i in self) result[i] = fun.call(thisp, self[i], i, object);
            }
            return result;
        };
    }
    if (!Array.prototype.filter) {
        Array.prototype.filter = function filter(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0, result = [], value, thisp = arguments[1];
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            for (var i = 0; i < length; i++) {
                if (i in self) {
                    value = self[i];
                    if (fun.call(thisp, value, i, object)) {
                        result.push(value);
                    }
                }
            }
            return result;
        };
    }
    if (!Array.prototype.every) {
        Array.prototype.every = function every(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0, thisp = arguments[1];
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            for (var i = 0; i < length; i++) {
                if (i in self && !fun.call(thisp, self[i], i, object)) {
                    return false;
                }
            }
            return true;
        };
    }
    if (!Array.prototype.some) {
        Array.prototype.some = function some(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0, thisp = arguments[1];
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            for (var i = 0; i < length; i++) {
                if (i in self && fun.call(thisp, self[i], i, object)) {
                    return true;
                }
            }
            return false;
        };
    }
    if (!Array.prototype.reduce) {
        Array.prototype.reduce = function reduce(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0;
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            if (!length && arguments.length == 1) {
                throw new TypeError("reduce of empty array with no initial value");
            }
            var i = 0;
            var result;
            if (arguments.length >= 2) {
                result = arguments[1];
            } else {
                do {
                    if (i in self) {
                        result = self[i++];
                        break;
                    }
                    if (++i >= length) {
                        throw new TypeError("reduce of empty array with no initial value");
                    }
                } while (true);
            }
            for (;i < length; i++) {
                if (i in self) {
                    result = fun.call(void 0, result, self[i], i, object);
                }
            }
            return result;
        };
    }
    if (!Array.prototype.reduceRight) {
        Array.prototype.reduceRight = function reduceRight(fun) {
            var object = toObject(this), self = splitString && _toString(this) == "[object String]" ? this.split("") : object, length = self.length >>> 0;
            if (_toString(fun) != "[object Function]") {
                throw new TypeError(fun + " is not a function");
            }
            if (!length && arguments.length == 1) {
                throw new TypeError("reduceRight of empty array with no initial value");
            }
            var result, i = length - 1;
            if (arguments.length >= 2) {
                result = arguments[1];
            } else {
                do {
                    if (i in self) {
                        result = self[i--];
                        break;
                    }
                    if (--i < 0) {
                        throw new TypeError("reduceRight of empty array with no initial value");
                    }
                } while (true);
            }
            if (i < 0) {
                return result;
            }
            do {
                if (i in this) {
                    result = fun.call(void 0, result, self[i], i, object);
                }
            } while (i--);
            return result;
        };
    }
    if (!Array.prototype.indexOf || [ 0, 1 ].indexOf(1, 2) != -1) {
        Array.prototype.indexOf = function indexOf(sought) {
            var self = splitString && _toString(this) == "[object String]" ? this.split("") : toObject(this), length = self.length >>> 0;
            if (!length) {
                return -1;
            }
            var i = 0;
            if (arguments.length > 1) {
                i = toInteger(arguments[1]);
            }
            i = i >= 0 ? i : Math.max(0, length + i);
            for (;i < length; i++) {
                if (i in self && self[i] === sought) {
                    return i;
                }
            }
            return -1;
        };
    }
    if (!Array.prototype.lastIndexOf || [ 0, 1 ].lastIndexOf(0, -3) != -1) {
        Array.prototype.lastIndexOf = function lastIndexOf(sought) {
            var self = splitString && _toString(this) == "[object String]" ? this.split("") : toObject(this), length = self.length >>> 0;
            if (!length) {
                return -1;
            }
            var i = length - 1;
            if (arguments.length > 1) {
                i = Math.min(i, toInteger(arguments[1]));
            }
            i = i >= 0 ? i : length - Math.abs(i);
            for (;i >= 0; i--) {
                if (i in self && sought === self[i]) {
                    return i;
                }
            }
            return -1;
        };
    }
    if (!Object.keys) {
        var hasDontEnumBug = true, dontEnums = [ "toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor" ], dontEnumsLength = dontEnums.length;
        for (var key in {
            toString: null
        }) {
            hasDontEnumBug = false;
        }
        Object.keys = function keys(object) {
            if (typeof object != "object" && typeof object != "function" || object === null) {
                throw new TypeError("Object.keys called on a non-object");
            }
            var keys = [];
            for (var name in object) {
                if (owns(object, name)) {
                    keys.push(name);
                }
            }
            if (hasDontEnumBug) {
                for (var i = 0, ii = dontEnumsLength; i < ii; i++) {
                    var dontEnum = dontEnums[i];
                    if (owns(object, dontEnum)) {
                        keys.push(dontEnum);
                    }
                }
            }
            return keys;
        };
    }
    var negativeDate = -621987552e5, negativeYearString = "-000001";
    if (!Date.prototype.toISOString || new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1) {
        Date.prototype.toISOString = function toISOString() {
            var result, length, value, year, month;
            if (!isFinite(this)) {
                throw new RangeError("Date.prototype.toISOString called on non-finite value.");
            }
            year = this.getUTCFullYear();
            month = this.getUTCMonth();
            year += Math.floor(month / 12);
            month = (month % 12 + 12) % 12;
            result = [ month + 1, this.getUTCDate(), this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds() ];
            year = (year < 0 ? "-" : year > 9999 ? "+" : "") + ("00000" + Math.abs(year)).slice(0 <= year && year <= 9999 ? -4 : -6);
            length = result.length;
            while (length--) {
                value = result[length];
                if (value < 10) {
                    result[length] = "0" + value;
                }
            }
            return year + "-" + result.slice(0, 2).join("-") + "T" + result.slice(2).join(":") + "." + ("000" + this.getUTCMilliseconds()).slice(-3) + "Z";
        };
    }
    var dateToJSONIsSupported = false;
    try {
        dateToJSONIsSupported = Date.prototype.toJSON && new Date(NaN).toJSON() === null && new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 && Date.prototype.toJSON.call({
            toISOString: function() {
                return true;
            }
        });
    } catch (e) {}
    if (!dateToJSONIsSupported) {
        Date.prototype.toJSON = function toJSON(key) {
            var o = Object(this), tv = toPrimitive(o), toISO;
            if (typeof tv === "number" && !isFinite(tv)) {
                return null;
            }
            toISO = o.toISOString;
            if (typeof toISO != "function") {
                throw new TypeError("toISOString property is not callable");
            }
            return toISO.call(o);
        };
    }
    if (!Date.parse || "Date.parse is buggy") {
        Date = function(NativeDate) {
            function Date(Y, M, D, h, m, s, ms) {
                var length = arguments.length;
                if (this instanceof NativeDate) {
                    var date = length == 1 && String(Y) === Y ? new NativeDate(Date.parse(Y)) : length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) : length >= 6 ? new NativeDate(Y, M, D, h, m, s) : length >= 5 ? new NativeDate(Y, M, D, h, m) : length >= 4 ? new NativeDate(Y, M, D, h) : length >= 3 ? new NativeDate(Y, M, D) : length >= 2 ? new NativeDate(Y, M) : length >= 1 ? new NativeDate(Y) : new NativeDate();
                    date.constructor = Date;
                    return date;
                }
                return NativeDate.apply(this, arguments);
            }
            var isoDateExpression = new RegExp("^" + "(\\d{4}|[+-]\\d{6})" + "(?:-(\\d{2})" + "(?:-(\\d{2})" + "(?:" + "T(\\d{2})" + ":(\\d{2})" + "(?:" + ":(\\d{2})" + "(?:(\\.\\d{1,}))?" + ")?" + "(" + "Z|" + "(?:" + "([-+])" + "(\\d{2})" + ":(\\d{2})" + ")" + ")?)?)?)?" + "$");
            var months = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365 ];
            function dayFromMonth(year, month) {
                var t = month > 1 ? 1 : 0;
                return months[month] + Math.floor((year - 1969 + t) / 4) - Math.floor((year - 1901 + t) / 100) + Math.floor((year - 1601 + t) / 400) + 365 * (year - 1970);
            }
            for (var key in NativeDate) {
                Date[key] = NativeDate[key];
            }
            Date.now = NativeDate.now;
            Date.UTC = NativeDate.UTC;
            Date.prototype = NativeDate.prototype;
            Date.prototype.constructor = Date;
            Date.parse = function parse(string) {
                var match = isoDateExpression.exec(string);
                if (match) {
                    var year = Number(match[1]), month = Number(match[2] || 1) - 1, day = Number(match[3] || 1) - 1, hour = Number(match[4] || 0), minute = Number(match[5] || 0), second = Number(match[6] || 0), millisecond = Math.floor(Number(match[7] || 0) * 1e3), offset = !match[4] || match[8] ? 0 : Number(new NativeDate(1970, 0)), signOffset = match[9] === "-" ? 1 : -1, hourOffset = Number(match[10] || 0), minuteOffset = Number(match[11] || 0), result;
                    if (hour < (minute > 0 || second > 0 || millisecond > 0 ? 24 : 25) && minute < 60 && second < 60 && millisecond < 1e3 && month > -1 && month < 12 && hourOffset < 24 && minuteOffset < 60 && day > -1 && day < dayFromMonth(year, month + 1) - dayFromMonth(year, month)) {
                        result = ((dayFromMonth(year, month) + day) * 24 + hour + hourOffset * signOffset) * 60;
                        result = ((result + minute + minuteOffset * signOffset) * 60 + second) * 1e3 + millisecond + offset;
                        if (-864e13 <= result && result <= 864e13) {
                            return result;
                        }
                    }
                    return NaN;
                }
                return NativeDate.parse.apply(this, arguments);
            };
            return Date;
        }(Date);
    }
    if (!Date.now) {
        Date.now = function now() {
            return new Date().getTime();
        };
    }
    if (!Number.prototype.toFixed || 8e-5.toFixed(3) !== "0.000" || .9.toFixed(0) === "0" || 1.255.toFixed(2) !== "1.25" || 0xde0b6b3a7640080.toFixed(0) !== "1000000000000000128") {
        (function() {
            var base, size, data, i;
            base = 1e7;
            size = 6;
            data = [ 0, 0, 0, 0, 0, 0 ];
            function multiply(n, c) {
                var i = -1;
                while (++i < size) {
                    c += n * data[i];
                    data[i] = c % base;
                    c = Math.floor(c / base);
                }
            }
            function divide(n) {
                var i = size, c = 0;
                while (--i >= 0) {
                    c += data[i];
                    data[i] = Math.floor(c / n);
                    c = c % n * base;
                }
            }
            function toString() {
                var i = size;
                var s = "";
                while (--i >= 0) {
                    if (s !== "" || i === 0 || data[i] !== 0) {
                        var t = String(data[i]);
                        if (s === "") {
                            s = t;
                        } else {
                            s += "0000000".slice(0, 7 - t.length) + t;
                        }
                    }
                }
                return s;
            }
            function pow(x, n, acc) {
                return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
            }
            function log(x) {
                var n = 0;
                while (x >= 4096) {
                    n += 12;
                    x /= 4096;
                }
                while (x >= 2) {
                    n += 1;
                    x /= 2;
                }
                return n;
            }
            Number.prototype.toFixed = function(fractionDigits) {
                var f, x, s, m, e, z, j, k;
                f = Number(fractionDigits);
                f = f !== f ? 0 : Math.floor(f);
                if (f < 0 || f > 20) {
                    throw new RangeError("Number.toFixed called with invalid number of decimals");
                }
                x = Number(this);
                if (x !== x) {
                    return "NaN";
                }
                if (x <= -1e21 || x >= 1e21) {
                    return String(x);
                }
                s = "";
                if (x < 0) {
                    s = "-";
                    x = -x;
                }
                m = "0";
                if (x > 1e-21) {
                    e = log(x * pow(2, 69, 1)) - 69;
                    z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
                    z *= 4503599627370496;
                    e = 52 - e;
                    if (e > 0) {
                        multiply(0, z);
                        j = f;
                        while (j >= 7) {
                            multiply(1e7, 0);
                            j -= 7;
                        }
                        multiply(pow(10, j, 1), 0);
                        j = e - 1;
                        while (j >= 23) {
                            divide(1 << 23);
                            j -= 23;
                        }
                        divide(1 << j);
                        multiply(1, 1);
                        divide(2);
                        m = toString();
                    } else {
                        multiply(0, z);
                        multiply(1 << -e, 0);
                        m = toString() + "0.00000000000000000000".slice(2, 2 + f);
                    }
                }
                if (f > 0) {
                    k = m.length;
                    if (k <= f) {
                        m = s + "0.0000000000000000000".slice(0, f - k + 2) + m;
                    } else {
                        m = s + m.slice(0, k - f) + "." + m.slice(k - f);
                    }
                } else {
                    m = s + m;
                }
                return m;
            };
        })();
    }
    var string_split = String.prototype.split;
    if ("ab".split(/(?:ab)*/).length !== 2 || ".".split(/(.?)(.?)/).length !== 4 || "tesst".split(/(s)*/)[1] === "t" || "".split(/.?/).length === 0 || ".".split(/()()/).length > 1) {
        (function() {
            var compliantExecNpcg = /()??/.exec("")[1] === void 0;
            String.prototype.split = function(separator, limit) {
                var string = this;
                if (separator === void 0 && limit === 0) return [];
                if (Object.prototype.toString.call(separator) !== "[object RegExp]") {
                    return string_split.apply(this, arguments);
                }
                var output = [], flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.extended ? "x" : "") + (separator.sticky ? "y" : ""), lastLastIndex = 0, separator = new RegExp(separator.source, flags + "g"), separator2, match, lastIndex, lastLength;
                string += "";
                if (!compliantExecNpcg) {
                    separator2 = new RegExp("^" + separator.source + "$(?!\\s)", flags);
                }
                limit = limit === void 0 ? -1 >>> 0 : limit >>> 0;
                while (match = separator.exec(string)) {
                    lastIndex = match.index + match[0].length;
                    if (lastIndex > lastLastIndex) {
                        output.push(string.slice(lastLastIndex, match.index));
                        if (!compliantExecNpcg && match.length > 1) {
                            match[0].replace(separator2, function() {
                                for (var i = 1; i < arguments.length - 2; i++) {
                                    if (arguments[i] === void 0) {
                                        match[i] = void 0;
                                    }
                                }
                            });
                        }
                        if (match.length > 1 && match.index < string.length) {
                            Array.prototype.push.apply(output, match.slice(1));
                        }
                        lastLength = match[0].length;
                        lastLastIndex = lastIndex;
                        if (output.length >= limit) {
                            break;
                        }
                    }
                    if (separator.lastIndex === match.index) {
                        separator.lastIndex++;
                    }
                }
                if (lastLastIndex === string.length) {
                    if (lastLength || !separator.test("")) {
                        output.push("");
                    }
                } else {
                    output.push(string.slice(lastLastIndex));
                }
                return output.length > limit ? output.slice(0, limit) : output;
            };
        })();
    } else if ("0".split(void 0, 0).length) {
        String.prototype.split = function(separator, limit) {
            if (separator === void 0 && limit === 0) return [];
            return string_split.apply(this, arguments);
        };
    }
    if ("".substr && "0b".substr(-1) !== "b") {
        var string_substr = String.prototype.substr;
        String.prototype.substr = function(start, length) {
            return string_substr.call(this, start < 0 ? (start = this.length + start) < 0 ? 0 : start : start, length);
        };
    }
    var ws = "	\n\f\r   ᠎    " + "         　\u2028" + "\u2029﻿";
    if (!String.prototype.trim || ws.trim()) {
        ws = "[" + ws + "]";
        var trimBeginRegexp = new RegExp("^" + ws + ws + "*"), trimEndRegexp = new RegExp(ws + ws + "*$");
        String.prototype.trim = function trim() {
            if (this === void 0 || this === null) {
                throw new TypeError("can't convert " + this + " to object");
            }
            return String(this).replace(trimBeginRegexp, "").replace(trimEndRegexp, "");
        };
    }
    function toInteger(n) {
        n = +n;
        if (n !== n) {
            n = 0;
        } else if (n !== 0 && n !== 1 / 0 && n !== -(1 / 0)) {
            n = (n > 0 || -1) * Math.floor(Math.abs(n));
        }
        return n;
    }
    function isPrimitive(input) {
        var type = typeof input;
        return input === null || type === "undefined" || type === "boolean" || type === "number" || type === "string";
    }
    function toPrimitive(input) {
        var val, valueOf, toString;
        if (isPrimitive(input)) {
            return input;
        }
        valueOf = input.valueOf;
        if (typeof valueOf === "function") {
            val = valueOf.call(input);
            if (isPrimitive(val)) {
                return val;
            }
        }
        toString = input.toString;
        if (typeof toString === "function") {
            val = toString.call(input);
            if (isPrimitive(val)) {
                return val;
            }
        }
        throw new TypeError();
    }
    var toObject = function(o) {
        if (o == null) {
            throw new TypeError("can't convert " + o + " to object");
        }
        return Object(o);
    };
});

(function(l, f) {
    function m() {
        var a = e.elements;
        return "string" == typeof a ? a.split(" ") : a;
    }
    function i(a) {
        var b = n[a[o]];
        b || (b = {}, h++, a[o] = h, n[h] = b);
        return b;
    }
    function p(a, b, c) {
        b || (b = f);
        if (g) return b.createElement(a);
        c || (c = i(b));
        b = c.cache[a] ? c.cache[a].cloneNode() : r.test(a) ? (c.cache[a] = c.createElem(a)).cloneNode() : c.createElem(a);
        return b.canHaveChildren && !s.test(a) ? c.frag.appendChild(b) : b;
    }
    function t(a, b) {
        if (!b.cache) b.cache = {}, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, 
        b.frag = b.createFrag();
        a.createElement = function(c) {
            return !e.shivMethods ? b.createElem(c) : p(c, a, b);
        };
        a.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + m().join().replace(/\w+/g, function(a) {
            b.createElem(a);
            b.frag.createElement(a);
            return 'c("' + a + '")';
        }) + ");return n}")(e, b.frag);
    }
    function q(a) {
        a || (a = f);
        var b = i(a);
        if (e.shivCSS && !j && !b.hasCSS) {
            var c, d = a;
            c = d.createElement("p");
            d = d.getElementsByTagName("head")[0] || d.documentElement;
            c.innerHTML = "x<style>article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}</style>";
            c = d.insertBefore(c.lastChild, d.firstChild);
            b.hasCSS = !!c;
        }
        g || t(a, b);
        return a;
    }
    var k = l.html5 || {}, s = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, r = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, j, o = "_html5shiv", h = 0, n = {}, g;
    (function() {
        try {
            var a = f.createElement("a");
            a.innerHTML = "<xyz></xyz>";
            j = "hidden" in a;
            var b;
            if (!(b = 1 == a.childNodes.length)) {
                f.createElement("a");
                var c = f.createDocumentFragment();
                b = "undefined" == typeof c.cloneNode || "undefined" == typeof c.createDocumentFragment || "undefined" == typeof c.createElement;
            }
            g = b;
        } catch (d) {
            g = j = !0;
        }
    })();
    var e = {
        elements: k.elements || "abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video",
        version: "3.6.2",
        shivCSS: !1 !== k.shivCSS,
        supportsUnknownElements: g,
        shivMethods: !1 !== k.shivMethods,
        type: "default",
        shivDocument: q,
        createElement: p,
        createDocumentFragment: function(a, b) {
            a || (a = f);
            if (g) return a.createDocumentFragment();
            for (var b = b || i(a), c = b.frag.cloneNode(), d = 0, e = m(), h = e.length; d < h; d++) c.createElement(e[d]);
            return c;
        }
    };
    l.html5 = e;
    q(f);
})(this, document);

(function(j, f) {
    function s(a, b) {
        var c = a.createElement("p"), m = a.getElementsByTagName("head")[0] || a.documentElement;
        c.innerHTML = "x<style>" + b + "</style>";
        return m.insertBefore(c.lastChild, m.firstChild);
    }
    function o() {
        var a = d.elements;
        return "string" == typeof a ? a.split(" ") : a;
    }
    function n(a) {
        var b = t[a[u]];
        b || (b = {}, p++, a[u] = p, t[p] = b);
        return b;
    }
    function v(a, b, c) {
        b || (b = f);
        if (e) return b.createElement(a);
        c || (c = n(b));
        b = c.cache[a] ? c.cache[a].cloneNode() : y.test(a) ? (c.cache[a] = c.createElem(a)).cloneNode() : c.createElem(a);
        return b.canHaveChildren && !z.test(a) ? c.frag.appendChild(b) : b;
    }
    function A(a, b) {
        if (!b.cache) b.cache = {}, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, 
        b.frag = b.createFrag();
        a.createElement = function(c) {
            return !d.shivMethods ? b.createElem(c) : v(c, a, b);
        };
        a.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + o().join().replace(/\w+/g, function(a) {
            b.createElem(a);
            b.frag.createElement(a);
            return 'c("' + a + '")';
        }) + ");return n}")(d, b.frag);
    }
    function w(a) {
        a || (a = f);
        var b = n(a);
        if (d.shivCSS && !q && !b.hasCSS) b.hasCSS = !!s(a, "article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}");
        e || A(a, b);
        return a;
    }
    function B(a) {
        for (var b, c = a.attributes, m = c.length, f = a.ownerDocument.createElement(l + ":" + a.nodeName); m--; ) b = c[m], 
        b.specified && f.setAttribute(b.nodeName, b.nodeValue);
        f.style.cssText = a.style.cssText;
        return f;
    }
    function x(a) {
        function b() {
            clearTimeout(d._removeSheetTimer);
            c && c.removeNode(!0);
            c = null;
        }
        var c, f, d = n(a), e = a.namespaces, j = a.parentWindow;
        if (!C || a.printShived) return a;
        "undefined" == typeof e[l] && e.add(l);
        j.attachEvent("onbeforeprint", function() {
            b();
            var g, i, d;
            d = a.styleSheets;
            for (var e = [], h = d.length, k = Array(h); h--; ) k[h] = d[h];
            for (;d = k.pop(); ) if (!d.disabled && D.test(d.media)) {
                try {
                    g = d.imports, i = g.length;
                } catch (j) {
                    i = 0;
                }
                for (h = 0; h < i; h++) k.push(g[h]);
                try {
                    e.push(d.cssText);
                } catch (n) {}
            }
            g = e.reverse().join("").split("{");
            i = g.length;
            h = RegExp("(^|[\\s,>+~])(" + o().join("|") + ")(?=[[\\s,>+~#.:]|$)", "gi");
            for (k = "$1" + l + "\\:$2"; i--; ) e = g[i] = g[i].split("}"), e[e.length - 1] = e[e.length - 1].replace(h, k), 
            g[i] = e.join("}");
            e = g.join("{");
            i = a.getElementsByTagName("*");
            h = i.length;
            k = RegExp("^(?:" + o().join("|") + ")$", "i");
            for (d = []; h--; ) g = i[h], k.test(g.nodeName) && d.push(g.applyElement(B(g)));
            f = d;
            c = s(a, e);
        });
        j.attachEvent("onafterprint", function() {
            for (var a = f, c = a.length; c--; ) a[c].removeNode();
            clearTimeout(d._removeSheetTimer);
            d._removeSheetTimer = setTimeout(b, 500);
        });
        a.printShived = !0;
        return a;
    }
    var r = j.html5 || {}, z = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, y = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, q, u = "_html5shiv", p = 0, t = {}, e;
    (function() {
        try {
            var a = f.createElement("a");
            a.innerHTML = "<xyz></xyz>";
            q = "hidden" in a;
            var b;
            if (!(b = 1 == a.childNodes.length)) {
                f.createElement("a");
                var c = f.createDocumentFragment();
                b = "undefined" == typeof c.cloneNode || "undefined" == typeof c.createDocumentFragment || "undefined" == typeof c.createElement;
            }
            e = b;
        } catch (d) {
            e = q = !0;
        }
    })();
    var d = {
        elements: r.elements || "abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video",
        version: "3.6.2",
        shivCSS: !1 !== r.shivCSS,
        supportsUnknownElements: e,
        shivMethods: !1 !== r.shivMethods,
        type: "default",
        shivDocument: w,
        createElement: v,
        createDocumentFragment: function(a, b) {
            a || (a = f);
            if (e) return a.createDocumentFragment();
            for (var b = b || n(a), c = b.frag.cloneNode(), d = 0, j = o(), l = j.length; d < l; d++) c.createElement(j[d]);
            return c;
        }
    };
    j.html5 = d;
    w(f);
    var D = /^$|\b(?:all|print)\b/, l = "html5shiv", C = !e && function() {
        var a = f.documentElement;
        return !("undefined" == typeof f.namespaces || "undefined" == typeof f.parentWindow || "undefined" == typeof a.applyElement || "undefined" == typeof a.removeNode || "undefined" == typeof j.attachEvent);
    }();
    d.type += " print";
    d.shivPrint = x;
    x(f);
})(this, document);

jQuery.onFontResize = function(e) {
    return e(document).ready(function() {
        var t = e("<iframe />").attr("id", "frame-onFontResize" + Date.parse(new Date())).css({
            width: "100em",
            height: "10px",
            position: "absolute",
            borderWidth: 0,
            top: "-5000px",
            left: "-5000px"
        }).appendTo("body"), n = /(msie) ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [], i = n[1] || "";
        if ("msie" === i) t.bind("resize", function() {
            e.onFontResize.trigger(t[0].offsetWidth / 100);
        }); else {
            var o = t[0].contentWindow || t[0].contentDocument || t[0].document;
            o = o.document || o, o.open(), o.write('<div id="em" style="width:100em;height:10px;"></div>'), 
            o.write('<script>window.onload = function(){var em = document.getElementById("em");window.onresize = function(){if(parent.jQuery.onFontResize){parent.jQuery.onFontResize.trigger(em.offsetWidth / 100);}}};</script>'), 
            o.close();
        }
    }), {
        trigger: function(t) {
            e(document).trigger("fontresize", [ t ]);
        }
    };
}(jQuery);

(function(e) {
    function o(e, o) {
        "" === e.val() ? e.data("placeholder").removeClass(o.hideClass) : e.data("placeholder").addClass(o.hideClass);
    }
    function t(e, o) {
        e.data("placeholder").addClass(o.hideClass);
    }
    function i(e, o) {
        var t = o.is("textarea"), i = parseFloat(o.css("padding-top")), a = parseFloat(o.css("padding-left")), n = o.offset();
        i && (n.top += i), a && (n.left += a), e.css({
            width: o.innerWidth() - (t ? 20 : 4),
            height: o.innerHeight() - 6,
            lineHeight: o.css("line-height"),
            whiteSpace: t ? "normal" : "nowrap",
            overflow: "hidden"
        }).offset(n);
    }
    function a(e, o) {
        var i = e.val();
        (function a() {
            r = requestAnimationFrame(a), e.val() !== i && (t(e, o), s(), n(e, o));
        })();
    }
    function n(e, t) {
        (function i() {
            r = requestAnimationFrame(i), o(e, t);
        })();
    }
    function s() {
        cancelAnimationFrame(r);
    }
    function l(e) {
        d && window.console && window.console.log && window.console.log(e);
    }
    var r, d = !1;
    e.fn.placeHolder = function(n) {
        l("init placeHolder");
        var r = this, d = e(this).length;
        return this.options = e.extend({
            className: "placeholder",
            visibleToScreenreaders: !0,
            visibleToScreenreadersHideClass: "placeholder-hide-except-screenreader",
            visibleToNoneHideClass: "placeholder-hide",
            hideOnFocus: !1,
            removeLabelClass: "visuallyhidden",
            hiddenOverrideClass: "visuallyhidden-with-placeholder",
            forceHiddenOverride: !0,
            forceApply: !1,
            autoInit: !0
        }, n), this.options.hideClass = this.options.visibleToScreenreaders ? this.options.visibleToScreenreadersHideClass : this.options.visibleToNoneHideClass, 
        e(this).each(function(n) {
            function c() {
                !r.options.hideOnFocus && window.requestAnimationFrame ? a(v, r.options) : t(v, r.options);
            }
            var h, p, u, f, v = e(this), m = v.attr("placeholder"), w = v.attr("id");
            return ("" === m || void 0 === m) && (m = v[0].attributes.placeholder.value), h = v.closest("label"), 
            v.removeAttr("placeholder"), h.length || w ? (h = h.length ? h : e('label[for="' + w + '"]').first(), 
            h.length ? (f = e(h).find(".placeholder"), f.length ? (i(f, v), f.text(m), v) : (h.hasClass(r.options.removeLabelClass) && h.removeClass(r.options.removeLabelClass).addClass(r.options.hiddenOverrideClass), 
            p = e("<span>").addClass(r.options.className).text(m).appendTo(h), u = p.width() > v.width(), 
            u && p.attr("title", m), i(p, v), v.data("placeholder", p), p.data("input", v), 
            p.click(function() {
                e(this).data("input").focus();
            }), v.focusin(c), v.focusout(function() {
                o(e(this), r.options), !r.options.hideOnFocus && window.cancelAnimationFrame && s();
            }), o(v, r.options), e(document).bind("fontresize resize", function() {
                i(p, v);
            }), e.event.special.resize ? e("textarea").bind("resize", function() {
                i(p, v);
            }) : e("textarea").css("resize", "none"), n >= d - 1 && e.attrHooks !== void 0 && (e.attrHooks.placeholder = {
                get: function(o) {
                    return "input" === o.nodeName.toLowerCase() || "textarea" === o.nodeName.toLowerCase() ? e(o).data("placeholder") ? e(e(o).data("placeholder")).text() : e(o)[0].placeholder : void 0;
                },
                set: function(o, t) {
                    return e(e(o).data("placeholder")).text(t);
                }
            }), v.is(":focus") && c(), void 0)) : (l("the input element with the placeholder needs a label!"), 
            void 0)) : (l("the input element with the placeholder needs an id!"), void 0);
        });
    }, e(function() {
        var o = window.placeHolderConfig || {};
        return o.autoInit === !1 ? (l("placeholder:abort because autoInit is off"), void 0) : ("placeholder" in e("<input>")[0] || "placeHolder" in e("<input>")[0]) && !o.forceApply ? (l("placeholder:abort because browser has native support"), 
        void 0) : (e("input[placeholder], textarea[placeholder]").placeHolder(o), void 0);
    });
})(jQuery);

$(function() {
    "use strict";
    $("section.video .exit, #youtube").on("click", function(ev) {
        ev.preventDefault();
        window.location.reload(true);
        window.location.hash = "";
    });
    $(document).on("keyup", function(ev) {
        if (ev.which === 27) {
            ev.preventDefault();
            window.location.reload(true);
            window.location.hash = "";
        }
    });
});
